version: '3.3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
      - DATABASE_HOST=db
      - DATABASE_NAME=${MYSQL_DATABASE}
      - DATABASE_USER=${MYSQL_USER}
      - DATABASE_PASSWORD=${MYSQL_PASSWORD}
      - DATABASE_PORT=3306
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - /home/nadooserver/.postgresql/:/home/django/.postgresql/
      - static_data:/vol/web/static
      - media_data:/vol/web/media

  proxy:
    build:
      context: ./docker/proxy
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - certbot-web:/vol/www
      - proxy-dhparams:/vol/proxy
      - certbot-certs:/etc/letsencrypt
      - static_data:/vol/web/static
      - media_data:/vol/web/media
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - app

  certbot:
    build:
      context: ./docker/certbot
    command: echo "Skipping certbot"
    environment:
      - EMAIL=${ACME_DEFAULT_EMAIL}
      - DOMAIN=${DOMAIN}
    volumes:
      - certbot-web:/vol/www
      - certbot-certs:/etc/letsencrypt
    depends_on:
      - proxy

  redis:
    image: 'redis:latest'

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python -m celery -A nadooit worker --loglevel=info"
    volumes:
      - ./app:/app
      - ${HOME}/.postgresql/root.crt:/home/django/.postgresql/root.crt
      - static_data:/vol/web/static
      - media_data:/vol/web/media
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
      - DATABASE_HOST=db
      - DATABASE_NAME=${MYSQL_DATABASE}
      - DATABASE_USER=${MYSQL_USER}
      - DATABASE_PASSWORD=${MYSQL_PASSWORD}
      - DATABASE_PORT=3306
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis

  db:
      image: mysql:8.0.36
      command: --default-authentication-plugin=mysql_native_password
      volumes:
        - db_data:/var/lib/mysql
        - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      restart: always
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      networks:
        - app_network

  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - "8000:80"
    restart: always
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_PASSWORD}
      - WORDPRESS_DB_NAME=${MYSQL_DATABASE}
    volumes:
      - wordpress_data:/var/www/html

volumes:
  certbot-web:
  proxy-dhparams:
  certbot-certs:
  static_data:
  media_data:
  db_data:
  wordpress_data:
