WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v9a9891db-18b0-4ece-ad0b-ced041d2e93f" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v9a9891db-18b0-4ece-ad0b-ced041d2e93f');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v8fcdeed1-2fde-404f-b3f7-ff75ffee7ed5" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v8fcdeed1-2fde-404f-b3f7-ff75ffee7ed5');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '604396d6-b21a-4fb1-b106-0f9717906a36' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('604396d6-b21a-4fb1-b106-0f9717906a36', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('604396d6-b21a-4fb1-b106-0f9717906a36', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 604396d6-b21a-4fb1-b106-0f9717906a36 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
WARNING Not Found: /favicon.ico
INFO 604396d6-b21a-4fb1-b106-0f9717906a36 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 604396d6-b21a-4fb1-b106-0f9717906a36 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 604396d6-b21a-4fb1-b106-0f9717906a36 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 604396d6-b21a-4fb1-b106-0f9717906a36 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vbf327558-32e8-456c-838a-0d3714df4783" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vbf327558-32e8-456c-838a-0d3714df4783');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="btn btn-success">MAINIFESTO</a>
</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vad1ba61d-84d5-450e-9249-4532818da516" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vad1ba61d-84d5-450e-9249-4532818da516');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f9a51225-6a2d-4d00-be18-177c988aa451' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f9a51225-6a2d-4d00-be18-177c988aa451', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f9a51225-6a2d-4d00-be18-177c988aa451', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO f9a51225-6a2d-4d00-be18-177c988aa451 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO f9a51225-6a2d-4d00-be18-177c988aa451 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO f9a51225-6a2d-4d00-be18-177c988aa451 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO f9a51225-6a2d-4d00-be18-177c988aa451 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vb219b2de-004b-42fe-80bc-0a2e0633098b" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vb219b2de-004b-42fe-80bc-0a2e0633098b');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="download-container">
    <p class="file-name">MAINIFESTO</p>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="btn btn-success">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v5b731471-392b-46cb-84e1-a90b6671eba4" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v5b731471-392b-46cb-84e1-a90b6671eba4');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'de93c6a9-8164-4efe-99fa-71f9c07b714f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('de93c6a9-8164-4efe-99fa-71f9c07b714f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('de93c6a9-8164-4efe-99fa-71f9c07b714f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f e881e881-fc44-4901-8241-eef7c0beb636 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f e881e881-fc44-4901-8241-eef7c0beb636 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 889bc2af-f212-41d7-8b2d-eff9f66cdadc mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 889bc2af-f212-41d7-8b2d-eff9f66cdadc revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 3e00a585-f4dc-4471-8caa-8c858fcdb091 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 3e00a585-f4dc-4471-8caa-8c858fcdb091 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 8ff2b81c-0955-428f-8138-d0a2ad493eb7 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 8ff2b81c-0955-428f-8138-d0a2ad493eb7 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f eadca5cb-83a8-4570-97e5-a92abf56eefa revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f eadca5cb-83a8-4570-97e5-a92abf56eefa mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 403e0f16-1742-4cd0-adf0-f5acdfc1d599 revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 403e0f16-1742-4cd0-adf0-f5acdfc1d599 mouseenter_once signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 89d79374-1947-48df-bbdb-9d517feaf51c revealed signal received
INFO de93c6a9-8164-4efe-99fa-71f9c07b714f 89d79374-1947-48df-bbdb-9d517feaf51c mouseenter_once signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v8c69a122-dd2e-4e45-9ca3-5529fcc74404" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v8c69a122-dd2e-4e45-9ca3-5529fcc74404');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v336387ab-372e-4cff-a34c-25f855ffc359" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v336387ab-372e-4cff-a34c-25f855ffc359');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0b463d28-5d12-430f-ba46-b5bacfd297b0' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0b463d28-5d12-430f-ba46-b5bacfd297b0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0b463d28-5d12-430f-ba46-b5bacfd297b0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 0b463d28-5d12-430f-ba46-b5bacfd297b0 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 0b463d28-5d12-430f-ba46-b5bacfd297b0 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 0b463d28-5d12-430f-ba46-b5bacfd297b0 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 0b463d28-5d12-430f-ba46-b5bacfd297b0 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v63891db8-db7c-4f43-843c-d2fe8bea1d17" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v63891db8-db7c-4f43-843c-d2fe8bea1d17');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v0f70e7b3-5b0d-4744-952a-dfebe9f3e08c" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v0f70e7b3-5b0d-4744-952a-dfebe9f3e08c');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'df4e190d-e49d-4219-b1b1-89a0bba29f17' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('df4e190d-e49d-4219-b1b1-89a0bba29f17', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('df4e190d-e49d-4219-b1b1-89a0bba29f17', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO df4e190d-e49d-4219-b1b1-89a0bba29f17 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO df4e190d-e49d-4219-b1b1-89a0bba29f17 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO df4e190d-e49d-4219-b1b1-89a0bba29f17 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO df4e190d-e49d-4219-b1b1-89a0bba29f17 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="ved7dbb59-599b-4680-9e4f-5dfc46c7e795" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('ved7dbb59-599b-4680-9e4f-5dfc46c7e795');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v09ea8084-842f-4a6c-8cec-9cd5bf6d89bb" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v09ea8084-842f-4a6c-8cec-9cd5bf6d89bb');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b826b351-d449-4b66-817e-4b4fb109b2c0' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b826b351-d449-4b66-817e-4b4fb109b2c0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('b826b351-d449-4b66-817e-4b4fb109b2c0', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO b826b351-d449-4b66-817e-4b4fb109b2c0 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO b826b351-d449-4b66-817e-4b4fb109b2c0 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO b826b351-d449-4b66-817e-4b4fb109b2c0 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO b826b351-d449-4b66-817e-4b4fb109b2c0 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v559a2232-9b12-4b0a-81ef-423d45346867" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v559a2232-9b12-4b0a-81ef-423d45346867');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v9394033d-e0be-4c34-90db-09e0d03a7bbb" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v9394033d-e0be-4c34-90db-09e0d03a7bbb');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'b820799e-d4f3-4f8a-97d3-a2db5287d1e8' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('b820799e-d4f3-4f8a-97d3-a2db5287d1e8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO b820799e-d4f3-4f8a-97d3-a2db5287d1e8 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO b820799e-d4f3-4f8a-97d3-a2db5287d1e8 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO b820799e-d4f3-4f8a-97d3-a2db5287d1e8 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
WARNING Not Found: /favicon.ico
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vdc880f48-6b9d-4373-84ce-1636dec8fc9e" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vdc880f48-6b9d-4373-84ce-1636dec8fc9e');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="veace579a-78bd-48eb-bacc-075b48fe0f29" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('veace579a-78bd-48eb-bacc-075b48fe0f29');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f61a2128-8c68-4ba8-9298-fd20d07ede97' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f61a2128-8c68-4ba8-9298-fd20d07ede97', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f61a2128-8c68-4ba8-9298-fd20d07ede97', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb revealed signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb mouseenter_once signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 e881e881-fc44-4901-8241-eef7c0beb636 revealed signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 889bc2af-f212-41d7-8b2d-eff9f66cdadc revealed signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 889bc2af-f212-41d7-8b2d-eff9f66cdadc mouseenter_once signal received
INFO f61a2128-8c68-4ba8-9298-fd20d07ede97 e881e881-fc44-4901-8241-eef7c0beb636 mouseenter_once signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v347ca95e-8e97-4a19-9100-0e683c5fa1b6" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v347ca95e-8e97-4a19-9100-0e683c5fa1b6');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v2a669e1f-5f56-4d59-b103-490e4d9cb50d" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v2a669e1f-5f56-4d59-b103-490e4d9cb50d');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '8e4c756c-5b37-453a-a8b3-1475891d509d' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('8e4c756c-5b37-453a-a8b3-1475891d509d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('8e4c756c-5b37-453a-a8b3-1475891d509d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 8e4c756c-5b37-453a-a8b3-1475891d509d 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 8e4c756c-5b37-453a-a8b3-1475891d509d 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 8e4c756c-5b37-453a-a8b3-1475891d509d 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vbaf6d1b8-bfc3-48c4-8ff7-b173ec9901ed" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vbaf6d1b8-bfc3-48c4-8ff7-b173ec9901ed');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vccfc6706-4795-409c-9f14-3a3843fc1288" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vccfc6706-4795-409c-9f14-3a3843fc1288');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '1667bffa-5eda-4934-99f9-22daa55fa305' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('1667bffa-5eda-4934-99f9-22daa55fa305', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('1667bffa-5eda-4934-99f9-22daa55fa305', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v76c1d121-e430-445d-bf5e-0ba3176ae8bd" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v76c1d121-e430-445d-bf5e-0ba3176ae8bd');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vc3b36255-cf40-49ce-bcba-d8032041c6bd" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vc3b36255-cf40-49ce-bcba-d8032041c6bd');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd0330aa4-290a-48dd-bb77-df8e0a474b48' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d0330aa4-290a-48dd-bb77-df8e0a474b48', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d0330aa4-290a-48dd-bb77-df8e0a474b48', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 e881e881-fc44-4901-8241-eef7c0beb636 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 e881e881-fc44-4901-8241-eef7c0beb636 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 889bc2af-f212-41d7-8b2d-eff9f66cdadc revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 889bc2af-f212-41d7-8b2d-eff9f66cdadc mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 3e00a585-f4dc-4471-8caa-8c858fcdb091 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 3e00a585-f4dc-4471-8caa-8c858fcdb091 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 8ff2b81c-0955-428f-8138-d0a2ad493eb7 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 8ff2b81c-0955-428f-8138-d0a2ad493eb7 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 eadca5cb-83a8-4570-97e5-a92abf56eefa revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 eadca5cb-83a8-4570-97e5-a92abf56eefa mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c mouseenter_once signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 403e0f16-1742-4cd0-adf0-f5acdfc1d599 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 89d79374-1947-48df-bbdb-9d517feaf51c revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 7a366538-3ac6-4d0c-a221-3f39c5fa204d revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 e9ca81aa-0a33-411d-88f1-4bbc84725a0b revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 15ab8cff-c201-4ef3-9462-c5906e1ae6d6 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 03dd80b9-7bed-4a3f-a08d-1b7ba521efc2 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 72058798-ad2a-4796-a215-385923ba5106 revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 e16d9687-3997-482a-a647-8911a030903b revealed signal received
INFO d0330aa4-290a-48dd-bb77-df8e0a474b48 5629431f-878e-4663-88d7-def927e197d3 revealed signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="va3c6bb90-58fb-4e0a-a515-861edb155d49" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('va3c6bb90-58fb-4e0a-a515-861edb155d49');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v6d19cb73-96c2-4c3a-99da-f2d2759b42aa" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v6d19cb73-96c2-4c3a-99da-f2d2759b42aa');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ca292d38-c9b9-4313-87b2-db6e4845a814' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ca292d38-c9b9-4313-87b2-db6e4845a814', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ca292d38-c9b9-4313-87b2-db6e4845a814', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO ca292d38-c9b9-4313-87b2-db6e4845a814 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO ca292d38-c9b9-4313-87b2-db6e4845a814 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO ca292d38-c9b9-4313-87b2-db6e4845a814 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v3077c927-4693-477d-8aa0-21b2928b20e8" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v3077c927-4693-477d-8aa0-21b2928b20e8');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v5e6de898-f0f9-4d22-8d88-9b4120c55942" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v5e6de898-f0f9-4d22-8d88-9b4120c55942');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '6676c9dd-036d-4013-abe8-4bedca29f3f6' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('6676c9dd-036d-4013-abe8-4bedca29f3f6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('6676c9dd-036d-4013-abe8-4bedca29f3f6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 6676c9dd-036d-4013-abe8-4bedca29f3f6 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 6676c9dd-036d-4013-abe8-4bedca29f3f6 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vcb71474a-1921-461e-b97c-ba1e57ae015b" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vcb71474a-1921-461e-b97c-ba1e57ae015b');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <h1 class="file-name">MAINIFESTO</h1>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="vf08c0a44-9ac8-4145-805b-19755d455c7d" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('vf08c0a44-9ac8-4145-805b-19755d455c7d');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '33ea9ac0-7006-4e9d-aae0-ae238c778779' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('33ea9ac0-7006-4e9d-aae0-ae238c778779', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('33ea9ac0-7006-4e9d-aae0-ae238c778779', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 33ea9ac0-7006-4e9d-aae0-ae238c778779 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 33ea9ac0-7006-4e9d-aae0-ae238c778779 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 33ea9ac0-7006-4e9d-aae0-ae238c778779 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 33ea9ac0-7006-4e9d-aae0-ae238c778779 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v6cf6a7fa-95a7-4fd8-be60-f419317400e7" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v6cf6a7fa-95a7-4fd8-be60-f419317400e7');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <div class="file-name">MAINIFESTO</div>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v8dcca779-b4ca-48e4-b7a2-12344652265f" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v8dcca779-b4ca-48e4-b7a2-12344652265f');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f2231146-9097-4bdb-a3c7-66e4201405e4' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f2231146-9097-4bdb-a3c7-66e4201405e4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f2231146-9097-4bdb-a3c7-66e4201405e4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO f2231146-9097-4bdb-a3c7-66e4201405e4 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO f2231146-9097-4bdb-a3c7-66e4201405e4 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    {{ video }}
</div>
<div class="file-container">
    {{ file }}
</div>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="va0e1b962-5ddf-4f38-ba9e-2ee9560d8027" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('va0e1b962-5ddf-4f38-ba9e-2ee9560d8027');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
<div class="file-container">
    <div class="file-card">
    <div class="file-name">MAINIFESTO</div>
    <a href="/static/media/uploads/Das_NADOO_Manifest.docx" class="download-button">Download</a>
</div>

</div>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    {{ video }}
</div>
        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         


<div class="video-container">
    <style>
    .video-js .vjs-menu-button {
        background-color: #f00;  /* Change the background color to red */
        color: #fff;  /* Change the text color to white */
        border: none;  /* Remove the border */
        width: 70px;  /* Set the width of the selector */
    }

    /* You can also style the individual options in the dropdown */
    .video-js .vjs-menu-button option {
        background-color: #000;  /* Change the background color to black */
        color: #fff;  /* Change the text color to white */
    }
</style>

<video id="v6186314c-1c4e-4ca8-a502-eff7503c909e" class="video-js vjs-default-skin" width="100%" height="auto" controls preload="auto">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8" type="application/vnd.apple.mpegurl" label="480p" res="480">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8" type="application/vnd.apple.mpegurl" label="720p" res="720">
    <source src="/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8" type="application/vnd.apple.mpegurl" label="1080p" res="1080">
    Your browser does not support the video tag.
</video>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        if (!videojs.getComponent('QualitySelector')) {
            class QualitySelector extends videojs.getComponent('Component') {
                constructor(player, options) {
                    super(player, options);
                    this.levels = options.levels;
                    this.selectedIndex = options.defaultIndex || 0;
                    this.update();
                }

                createEl() {
                    this.selectEl = videojs.dom.createEl('select');
                    this.selectEl.className = 'vjs-menu-button vjs-control';
                    this.selectEl.addEventListener('change', () => {
                        this.selectedIndex = this.selectEl.selectedIndex;
                        this.update();
                    });

                    return this.selectEl;
                }

                update() {
                    while (this.selectEl.firstChild) {
                        this.selectEl.removeChild(this.selectEl.firstChild);
                    }

                    this.levels.forEach((level, i) => {
                        const optionEl = videojs.dom.createEl('option', {
                            innerHTML: level.label,
                            selected: i === this.selectedIndex,
                        });

                        this.selectEl.appendChild(optionEl);
                    });

                    this.player().src(this.levels[this.selectedIndex].src);
                }
            }

            videojs.registerComponent('QualitySelector', QualitySelector);
        }

        var player = videojs('v6186314c-1c4e-4ca8-a502-eff7503c909e');

        player.getChild('controlBar').addChild('QualitySelector', {
            levels: [
                { label: '1080p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_1080p/index_ysZXjkq.m3u8' },
                { label: '720p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_720p/index_IDb4Eop.m3u8' },
                { label: '480p', src: '/static/media/hls_playlists/3a0d4bc5-44a2-4c11-b949-8d6c797db116_480p/index_ai4tRGg.m3u8' },
            ],
        });

        player.ready(function() {
            // additional player setup code here...
        });
    });
</script>

</div>
        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '836e8a98-a084-4fcb-8f0a-27045840bd0f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('836e8a98-a084-4fcb-8f0a-27045840bd0f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('836e8a98-a084-4fcb-8f0a-27045840bd0f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 836e8a98-a084-4fcb-8f0a-27045840bd0f 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 836e8a98-a084-4fcb-8f0a-27045840bd0f 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 836e8a98-a084-4fcb-8f0a-27045840bd0f 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 836e8a98-a084-4fcb-8f0a-27045840bd0f 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

