INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 e881e881-fc44-4901-8241-eef7c0beb636 mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 e881e881-fc44-4901-8241-eef7c0beb636 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 889bc2af-f212-41d7-8b2d-eff9f66cdadc revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 3e00a585-f4dc-4471-8caa-8c858fcdb091 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 8ff2b81c-0955-428f-8138-d0a2ad493eb7 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 3e00a585-f4dc-4471-8caa-8c858fcdb091 mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 8ff2b81c-0955-428f-8138-d0a2ad493eb7 mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 eadca5cb-83a8-4570-97e5-a92abf56eefa revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 eadca5cb-83a8-4570-97e5-a92abf56eefa mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c mouseenter_once signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 403e0f16-1742-4cd0-adf0-f5acdfc1d599 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 89d79374-1947-48df-bbdb-9d517feaf51c revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 403e0f16-1742-4cd0-adf0-f5acdfc1d599 mouseenter_once signal received
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 5629431f-878e-4663-88d7-def927e197d3 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 1b4e0e78-c064-4334-9aaa-13c5ebc75455 revealed signal received
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 25 71 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: Portal_Animated_Logo>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_kümmern_uns_darum>, <Section: Wir_schaffen_Prozesssicherheit>, <Section: Wir_garantieren_Ihnen._Messbare_Produktivitätssteigerung>, <Section: Sie_brauchen_nicht_mehr_ewig_zwischen_verschiedenen_Angeboten_vergleichen>, <Section: Bearbeitungsschritte_Karten>, <Section: Wir_digitalisieren_Ihre_Prozesse>]>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: Contactinfo_and_Meetergo
INFO getting html for the next section including signals
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 e16d9687-3997-482a-a647-8911a030903b revealed signal received
INFO end_of_session_sections valid session
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 25 86 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: Portal_Animated_Logo>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_kümmern_uns_darum>, <Section: Contactinfo_and_Meetergo>, <Section: Wir_schaffen_Prozesssicherheit>, <Section: Wir_garantieren_Ihnen._Messbare_Produktivitätssteigerung>, <Section: Sie_brauchen_nicht_mehr_ewig_zwischen_verschiedenen_Angeboten_vergleichen>, <Section: Bearbeitungsschritte_Karten>, <Section: Wir_digitalisieren_Ihre_Prozesse>]>
INFO end_of_session_sections session.variant: experimental
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 15ab8cff-c201-4ef3-9462-c5906e1ae6d6 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 72058798-ad2a-4796-a215-385923ba5106 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 03dd80b9-7bed-4a3f-a08d-1b7ba521efc2 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 7a366538-3ac6-4d0c-a221-3f39c5fa204d revealed signal received
INFO end_of_session_sections next_section: Wir_erstellen_individuel_auf_Ihre_Bedürfnisse_angepasste_Software
INFO getting html for the next section including signals
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 revealed signal received
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 e9ca81aa-0a33-411d-88f1-4bbc84725a0b revealed signal received
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 e16d9687-3997-482a-a647-8911a030903b revealed signal received
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 120 111 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: Portal_Animated_Logo>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_erstellen_für_Sie_für_jeden_Schritt_aussagekräftige_Schulungsunterlagen>, <Section: Wir_kümmern_uns_darum>, <Section: Contactinfo_and_Meetergo>, <Section: Wir_schaffen_Prozesssicherheit>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: BahnbrechendesSystem
INFO getting html for the next section including signals
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Entdecken Sie das bahnbrechende NADOO IT-System und revolutionieren Sie Ihre IT-Landschaft.</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Entdecken Sie das bahnbrechende NADOO IT-System und revolutionieren Sie Ihre IT-Landschaft.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'upvote', this);
            });

            document.getElementById('downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Entdecken Sie das bahnbrechende NADOO IT-System und revolutionieren Sie Ihre IT-Landschaft.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'upvote', this);
            });

            document.getElementById('downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '02304611-8fee-43d1-b644-5a4ac8cbc788' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Entdecken Sie das bahnbrechende NADOO IT-System und revolutionieren Sie Ihre IT-Landschaft.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'upvote', this);
            });

            document.getElementById('downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 120 121 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: Portal_Animated_Logo>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_erstellen_für_Sie_für_jeden_Schritt_aussagekräftige_Schulungsunterlagen>, <Section: Wir_kümmern_uns_darum>, <Section: Contactinfo_and_Meetergo>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: NeueAnreize
INFO getting html for the next section including signals
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Schaffen Sie neue Anreize für Ihre Mitarbeiter und fördern Sie eine leistungsorientierte Unternehmenskultur mit NADOO IT.</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '501ad9ce-5993-40a7-829e-9577c54dab55' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '501ad9ce-5993-40a7-829e-9577c54dab55' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Schaffen Sie neue Anreize für Ihre Mitarbeiter und fördern Sie eine leistungsorientierte Unternehmenskultur mit NADOO IT.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55', 'upvote', this);
            });

            document.getElementById('downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '501ad9ce-5993-40a7-829e-9577c54dab55' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '501ad9ce-5993-40a7-829e-9577c54dab55' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Schaffen Sie neue Anreize für Ihre Mitarbeiter und fördern Sie eine leistungsorientierte Unternehmenskultur mit NADOO IT.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55', 'upvote', this);
            });

            document.getElementById('downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '501ad9ce-5993-40a7-829e-9577c54dab55' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '501ad9ce-5993-40a7-829e-9577c54dab55' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '501ad9ce-5993-40a7-829e-9577c54dab55' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Schaffen Sie neue Anreize für Ihre Mitarbeiter und fördern Sie eine leistungsorientierte Unternehmenskultur mit NADOO IT.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55', 'upvote', this);
            });

            document.getElementById('downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '501ad9ce-5993-40a7-829e-9577c54dab55', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 e9ca81aa-0a33-411d-88f1-4bbc84725a0b revealed signal received
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 125 126 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_erstellen_für_Sie_für_jeden_Schritt_aussagekräftige_Schulungsunterlagen>, <Section: Wir_kümmern_uns_darum>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 125 126 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 02304611-8fee-43d1-b644-5a4ac8cbc788 revealed signal received
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_erstellen_für_Sie_für_jeden_Schritt_aussagekräftige_Schulungsunterlagen>, <Section: Wir_kümmern_uns_darum>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: Prozessoptimierung
INFO getting html for the next section including signals
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Prozessoptimierung und effiziente IT-Projekte mit NADOO IT - Entdecken Sie das Win-Win-Win Preismodell.</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Prozessoptimierung und effiziente IT-Projekte mit NADOO IT - Entdecken Sie das Win-Win-Win Preismodell.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'upvote', this);
            });

            document.getElementById('downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Prozessoptimierung und effiziente IT-Projekte mit NADOO IT - Entdecken Sie das Win-Win-Win Preismodell.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'upvote', this);
            });

            document.getElementById('downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Prozessoptimierung und effiziente IT-Projekte mit NADOO IT - Entdecken Sie das Win-Win-Win Preismodell.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'upvote', this);
            });

            document.getElementById('downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections next_section: ZukunftIT
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Die Zukunft der IT-Strukturierung für Ihr Unternehmen.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Die Zukunft der IT-Strukturierung für Ihr Unternehmen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'upvote', this);
            });

            document.getElementById('downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Die Zukunft der IT-Strukturierung für Ihr Unternehmen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'upvote', this);
            });

            document.getElementById('downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7cb1f208-5122-4ab9-843a-7e6d69d397de' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Die Zukunft der IT-Strukturierung für Ihr Unternehmen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'upvote', this);
            });

            document.getElementById('downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections valid session
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 125 136 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: EinzigartigesPreismodell
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Das NADOO IT-Preismodell - einzigartig, leistungsorientiert und auf Ihren Erfolg ausgerichtet.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Das NADOO IT-Preismodell - einzigartig, leistungsorientiert und auf Ihren Erfolg ausgerichtet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'upvote', this);
            });

            document.getElementById('downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Das NADOO IT-Preismodell - einzigartig, leistungsorientiert und auf Ihren Erfolg ausgerichtet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'upvote', this);
            });

            document.getElementById('downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Das NADOO IT-Preismodell - einzigartig, leistungsorientiert und auf Ihren Erfolg ausgerichtet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'upvote', this);
            });

            document.getElementById('downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 501ad9ce-5993-40a7-829e-9577c54dab55 revealed signal received
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 130 131 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: RevolutionIT
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Revolutionieren Sie Ihre IT-Prozesse mit NADOO IT - Schneller, sicherer und effizienter als je zuvor.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Revolutionieren Sie Ihre IT-Prozesse mit NADOO IT - Schneller, sicherer und effizienter als je zuvor.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'upvote', this);
            });

            document.getElementById('downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Revolutionieren Sie Ihre IT-Prozesse mit NADOO IT - Schneller, sicherer und effizienter als je zuvor.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'upvote', this);
            });

            document.getElementById('downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Revolutionieren Sie Ihre IT-Prozesse mit NADOO IT - Schneller, sicherer und effizienter als je zuvor.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'upvote', this);
            });

            document.getElementById('downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 130 141 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: SoftwareNeuDefiniert
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Softwareentwicklung neu definiert - NADOO IT ermöglicht ergebnisorientiertes Arbeiten und reduziert Abhängigkeiten von Aufträgen.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Softwareentwicklung neu definiert - NADOO IT ermöglicht ergebnisorientiertes Arbeiten und reduziert Abhängigkeiten von Aufträgen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'upvote', this);
            });

            document.getElementById('downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Softwareentwicklung neu definiert - NADOO IT ermöglicht ergebnisorientiertes Arbeiten und reduziert Abhängigkeiten von Aufträgen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'upvote', this);
            });

            document.getElementById('downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Softwareentwicklung neu definiert - NADOO IT ermöglicht ergebnisorientiertes Arbeiten und reduziert Abhängigkeiten von Aufträgen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'upvote', this);
            });

            document.getElementById('downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections htmx
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 5d1fa94e-4d31-4da4-88f4-db89b16a1cbe revealed signal received
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 150 146 False
INFO end_of_session_sections htmx
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections valid session
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections valid session
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 899c83fe-5cb5-4c89-9a7d-4ce99c85a11b revealed signal received
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 150 151 False
INFO end_of_session_sections htmx
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections next_section: Unternehmenswachstum
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Lassen Sie Ihr Unternehmen mit NADOO IT wachsen - mehr Effizienz, bessere Ergebnisse, zufriedene Mitarbeiter.</h1>
        </div>
    </div>
</section>
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 revealed signal received
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Lassen Sie Ihr Unternehmen mit NADOO IT wachsen - mehr Effizienz, bessere Ergebnisse, zufriedene Mitarbeiter.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'upvote', this);
            });

            document.getElementById('downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Lassen Sie Ihr Unternehmen mit NADOO IT wachsen - mehr Effizienz, bessere Ergebnisse, zufriedene Mitarbeiter.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'upvote', this);
            });

            document.getElementById('downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 150 151 False
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Lassen Sie Ihr Unternehmen mit NADOO IT wachsen - mehr Effizienz, bessere Ergebnisse, zufriedene Mitarbeiter.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'upvote', this);
            });

            document.getElementById('downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections valid session
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections htmx
INFO end_of_session_sections next_section: Prozessanalyse
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Prozessanalyse und Optimierung leicht gemacht - mit NADOO IT und Process Mining.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Prozessanalyse und Optimierung leicht gemacht - mit NADOO IT und Process Mining.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'upvote', this);
            });

            document.getElementById('downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Prozessanalyse und Optimierung leicht gemacht - mit NADOO IT und Process Mining.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'upvote', this);
            });

            document.getElementById('downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Prozessanalyse und Optimierung leicht gemacht - mit NADOO IT und Process Mining.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'upvote', this);
            });

            document.getElementById('downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections valid session
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 150 161 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections next_section: MitarbeiterZufriedenheit
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Steigern Sie Ihre Mitarbeiterzufriedenheit und binden Sie Ihr Team langfristig mit dem NADOO Mitarbeiter 2.0 Vergütungssystem.</h1>
        </div>
    </div>
</section>
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 9f6ef439-5107-43bb-a1c2-d931ae95ab4c revealed signal received
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: MitarbeiterZufriedenheit>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections valid session
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Steigern Sie Ihre Mitarbeiterzufriedenheit und binden Sie Ihr Team langfristig mit dem NADOO Mitarbeiter 2.0 Vergütungssystem.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'upvote', this);
            });

            document.getElementById('downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Steigern Sie Ihre Mitarbeiterzufriedenheit und binden Sie Ihr Team langfristig mit dem NADOO Mitarbeiter 2.0 Vergütungssystem.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'upvote', this);
            });

            document.getElementById('downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Steigern Sie Ihre Mitarbeiterzufriedenheit und binden Sie Ihr Team langfristig mit dem NADOO Mitarbeiter 2.0 Vergütungssystem.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'upvote', this);
            });

            document.getElementById('downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 150 171 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections session: 435c2bfa-53de-49d3-84b3-0b6dbbe78364 150 171 False
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: MitarbeiterZufriedenheit>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO 435c2bfa-53de-49d3-84b3-0b6dbbe78364 cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 revealed signal received
INFO end_of_session_sections next_section: Preissystem
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Das leistungsorientierte Preissystem, das Ihr IT-Projekt beschleunigt und gleichzeitig Qualität und Sicherheit gewährleistet.</h1>
        </div>
    </div>
</section>
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: MitarbeiterZufriedenheit>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Das leistungsorientierte Preissystem, das Ihr IT-Projekt beschleunigt und gleichzeitig Qualität und Sicherheit gewährleistet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'upvote', this);
            });

            document.getElementById('downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Das leistungsorientierte Preissystem, das Ihr IT-Projekt beschleunigt und gleichzeitig Qualität und Sicherheit gewährleistet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'upvote', this);
            });

            document.getElementById('downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'd0b36885-6f3e-4303-b9cc-564527150acb' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Das leistungsorientierte Preissystem, das Ihr IT-Projekt beschleunigt und gleichzeitig Qualität und Sicherheit gewährleistet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'upvote', this);
            });

            document.getElementById('downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections next_section: DreisäulenModell
INFO end_of_session_sections next_section: None
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - das dreisäulige Modell für eine ganzheitliche IT-Lösung.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - das dreisäulige Modell für eine ganzheitliche IT-Lösung.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'upvote', this);
            });

            document.getElementById('downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - das dreisäulige Modell für eine ganzheitliche IT-Lösung.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'upvote', this);
            });

            document.getElementById('downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '98ca5200-de07-41c5-8a69-e087ae116e2a' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '435c2bfa-53de-49d3-84b3-0b6dbbe78364' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - das dreisäulige Modell für eine ganzheitliche IT-Lösung.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'upvote', this);
            });

            document.getElementById('downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('435c2bfa-53de-49d3-84b3-0b6dbbe78364', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
WARNING Not Found: /favicon.ico
WARNING Not Found: /favicon.ico
WARNING Not Found: /favicon.ico
WARNING Not Found: /favicon.ico
WARNING Not Found: /favicon.ico
WARNING Not Found: /favicon.ico
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'fc933f45-7624-470f-8816-c4277f5de2a1' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('fc933f45-7624-470f-8816-c4277f5de2a1', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('fc933f45-7624-470f-8816-c4277f5de2a1', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd3873842-66ea-440c-b43d-b8b0902a40b8' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d3873842-66ea-440c-b43d-b8b0902a40b8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d3873842-66ea-440c-b43d-b8b0902a40b8', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO d3873842-66ea-440c-b43d-b8b0902a40b8 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
WARNING Forbidden: /session_is_active_signal/d3873842-66ea-440c-b43d-b8b0902a40b8
WARNING Forbidden: /signal/d3873842-66ea-440c-b43d-b8b0902a40b8/7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6/mouseenter_once/
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
WARNING Forbidden: /signal/d3873842-66ea-440c-b43d-b8b0902a40b8/7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6/mouseleave/
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0f42ae65-14e6-4f3e-85d0-535e6aab2223' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0f42ae65-14e6-4f3e-85d0-535e6aab2223', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
WARNING Not Found: /favicon.ico
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 upvote signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 9e0421d2-7224-4d0f-ae37-910d08b14fed upvote signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 eaf22518-3273-4530-856b-35b13067caa5 upvote signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb revealed signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb mouseenter_once signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 e881e881-fc44-4901-8241-eef7c0beb636 revealed signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb downvote signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 e881e881-fc44-4901-8241-eef7c0beb636 mouseenter_once signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 889bc2af-f212-41d7-8b2d-eff9f66cdadc revealed signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 e881e881-fc44-4901-8241-eef7c0beb636 downvote signal received
INFO 0f42ae65-14e6-4f3e-85d0-535e6aab2223 889bc2af-f212-41d7-8b2d-eff9f66cdadc mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
WARNING Not Found: /favicon.ico
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4cdcd7b8-de83-431c-a98d-6808dd8ec0bd' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4cdcd7b8-de83-431c-a98d-6808dd8ec0bd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 4cdcd7b8-de83-431c-a98d-6808dd8ec0bd f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb revealed signal received
INFO 4cdcd7b8-de83-431c-a98d-6808dd8ec0bd e881e881-fc44-4901-8241-eef7c0beb636 revealed signal received
INFO 4cdcd7b8-de83-431c-a98d-6808dd8ec0bd eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen</h2>
            <p>Unser neuartiges IT-Konzept entwickelt individuelle Softwarelösungen, um auf die Probleme unserer Kunden einzugehen. Dank unseres einzigartigen Preismodells zahlen Sie nur für die ersparte Zeit durch die Software und genießen garantiert das beste Angebot.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '5bb2e764-4bf3-49f1-8f7e-5a1c8e552850' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('5bb2e764-4bf3-49f1-8f7e-5a1c8e552850', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb mouseenter_once signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 e881e881-fc44-4901-8241-eef7c0beb636 revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 e881e881-fc44-4901-8241-eef7c0beb636 mouseenter_once signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 889bc2af-f212-41d7-8b2d-eff9f66cdadc revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 3e00a585-f4dc-4471-8caa-8c858fcdb091 revealed signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 889bc2af-f212-41d7-8b2d-eff9f66cdadc mouseenter_once signal received
INFO 5bb2e764-4bf3-49f1-8f7e-5a1c8e552850 3e00a585-f4dc-4471-8caa-8c858fcdb091 mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 e881e881-fc44-4901-8241-eef7c0beb636 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 889bc2af-f212-41d7-8b2d-eff9f66cdadc revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 e881e881-fc44-4901-8241-eef7c0beb636 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 889bc2af-f212-41d7-8b2d-eff9f66cdadc mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 3e00a585-f4dc-4471-8caa-8c858fcdb091 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 3e00a585-f4dc-4471-8caa-8c858fcdb091 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 8ff2b81c-0955-428f-8138-d0a2ad493eb7 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 8ff2b81c-0955-428f-8138-d0a2ad493eb7 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 eadca5cb-83a8-4570-97e5-a92abf56eefa revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 eadca5cb-83a8-4570-97e5-a92abf56eefa mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 403e0f16-1742-4cd0-adf0-f5acdfc1d599 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 89d79374-1947-48df-bbdb-9d517feaf51c revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 403e0f16-1742-4cd0-adf0-f5acdfc1d599 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 7a366538-3ac6-4d0c-a221-3f39c5fa204d revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 89d79374-1947-48df-bbdb-9d517feaf51c mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 7a366538-3ac6-4d0c-a221-3f39c5fa204d mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 e9ca81aa-0a33-411d-88f1-4bbc84725a0b revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 03dd80b9-7bed-4a3f-a08d-1b7ba521efc2 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 e9ca81aa-0a33-411d-88f1-4bbc84725a0b mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 03dd80b9-7bed-4a3f-a08d-1b7ba521efc2 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 15ab8cff-c201-4ef3-9462-c5906e1ae6d6 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 72058798-ad2a-4796-a215-385923ba5106 revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 15ab8cff-c201-4ef3-9462-c5906e1ae6d6 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 72058798-ad2a-4796-a215-385923ba5106 mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 e16d9687-3997-482a-a647-8911a030903b revealed signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 e16d9687-3997-482a-a647-8911a030903b mouseenter_once signal received
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 5629431f-878e-4663-88d7-def927e197d3 revealed signal received
INFO end_of_session_sections htmx
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 5629431f-878e-4663-88d7-def927e197d3 mouseenter_once signal received
INFO end_of_session_sections valid session
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 1b4e0e78-c064-4334-9aaa-13c5ebc75455 revealed signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 70 143 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: Portal_Animated_Logo>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_erstellen_für_Sie_für_jeden_Schritt_aussagekräftige_Schulungsunterlagen>, <Section: Wir_kümmern_uns_darum>, <Section: Contactinfo_and_Meetergo>, <Section: Wir_schaffen_Prozesssicherheit>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: BahnbrechendesSystem
INFO getting html for the next section including signals
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Entdecken Sie das bahnbrechende NADOO IT-System und revolutionieren Sie Ihre IT-Landschaft.</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Entdecken Sie das bahnbrechende NADOO IT-System und revolutionieren Sie Ihre IT-Landschaft.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'upvote', this);
            });

            document.getElementById('downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Entdecken Sie das bahnbrechende NADOO IT-System und revolutionieren Sie Ihre IT-Landschaft.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'upvote', this);
            });

            document.getElementById('downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '02304611-8fee-43d1-b644-5a4ac8cbc788' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788" class="vote-button vote-button-02304611-8fee-43d1-b644-5a4ac8cbc788 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '02304611-8fee-43d1-b644-5a4ac8cbc788' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Entdecken Sie das bahnbrechende NADOO IT-System und revolutionieren Sie Ihre IT-Landschaft.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'upvote', this);
            });

            document.getElementById('downvote-button-02304611-8fee-43d1-b644-5a4ac8cbc788').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '02304611-8fee-43d1-b644-5a4ac8cbc788', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 1b4e0e78-c064-4334-9aaa-13c5ebc75455 mouseenter_once signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 70 143 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: Portal_Animated_Logo>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_erstellen_für_Sie_für_jeden_Schritt_aussagekräftige_Schulungsunterlagen>, <Section: Wir_kümmern_uns_darum>, <Section: Contactinfo_and_Meetergo>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: NeueAnreize
INFO getting html for the next section including signals
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Schaffen Sie neue Anreize für Ihre Mitarbeiter und fördern Sie eine leistungsorientierte Unternehmenskultur mit NADOO IT.</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '501ad9ce-5993-40a7-829e-9577c54dab55' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '501ad9ce-5993-40a7-829e-9577c54dab55' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Schaffen Sie neue Anreize für Ihre Mitarbeiter und fördern Sie eine leistungsorientierte Unternehmenskultur mit NADOO IT.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55', 'upvote', this);
            });

            document.getElementById('downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '501ad9ce-5993-40a7-829e-9577c54dab55' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '501ad9ce-5993-40a7-829e-9577c54dab55' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Schaffen Sie neue Anreize für Ihre Mitarbeiter und fördern Sie eine leistungsorientierte Unternehmenskultur mit NADOO IT.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55', 'upvote', this);
            });

            document.getElementById('downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '501ad9ce-5993-40a7-829e-9577c54dab55' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '501ad9ce-5993-40a7-829e-9577c54dab55' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55" class="vote-button vote-button-501ad9ce-5993-40a7-829e-9577c54dab55 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '501ad9ce-5993-40a7-829e-9577c54dab55' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Schaffen Sie neue Anreize für Ihre Mitarbeiter und fördern Sie eine leistungsorientierte Unternehmenskultur mit NADOO IT.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55', 'upvote', this);
            });

            document.getElementById('downvote-button-501ad9ce-5993-40a7-829e-9577c54dab55').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '501ad9ce-5993-40a7-829e-9577c54dab55', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 02304611-8fee-43d1-b644-5a4ac8cbc788 revealed signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 70 148 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_erstellen_für_Sie_für_jeden_Schritt_aussagekräftige_Schulungsunterlagen>, <Section: Wir_kümmern_uns_darum>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: Prozessoptimierung
INFO getting html for the next section including signals
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Prozessoptimierung und effiziente IT-Projekte mit NADOO IT - Entdecken Sie das Win-Win-Win Preismodell.</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Prozessoptimierung und effiziente IT-Projekte mit NADOO IT - Entdecken Sie das Win-Win-Win Preismodell.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'upvote', this);
            });

            document.getElementById('downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Prozessoptimierung und effiziente IT-Projekte mit NADOO IT - Entdecken Sie das Win-Win-Win Preismodell.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'upvote', this);
            });

            document.getElementById('downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe" class="vote-button vote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Prozessoptimierung und effiziente IT-Projekte mit NADOO IT - Entdecken Sie das Win-Win-Win Preismodell.</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'upvote', this);
            });

            document.getElementById('downvote-button-5d1fa94e-4d31-4da4-88f4-db89b16a1cbe').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '5d1fa94e-4d31-4da4-88f4-db89b16a1cbe', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 70 158 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, <Section: Wir_erstellen_für_Sie_für_jeden_Schritt_aussagekräftige_Schulungsunterlagen>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: ZukunftIT
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Die Zukunft der IT-Strukturierung für Ihr Unternehmen.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Die Zukunft der IT-Strukturierung für Ihr Unternehmen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'upvote', this);
            });

            document.getElementById('downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Die Zukunft der IT-Strukturierung für Ihr Unternehmen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'upvote', this);
            });

            document.getElementById('downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7cb1f208-5122-4ab9-843a-7e6d69d397de' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de" class="vote-button vote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '7cb1f208-5122-4ab9-843a-7e6d69d397de' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Die Zukunft der IT-Strukturierung für Ihr Unternehmen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'upvote', this);
            });

            document.getElementById('downvote-button-7cb1f208-5122-4ab9-843a-7e6d69d397de').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '7cb1f208-5122-4ab9-843a-7e6d69d397de', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 02304611-8fee-43d1-b644-5a4ac8cbc788 mouseenter_once signal received
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 501ad9ce-5993-40a7-829e-9577c54dab55 revealed signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 75 168 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: EinzigartigesPreismodell
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Das NADOO IT-Preismodell - einzigartig, leistungsorientiert und auf Ihren Erfolg ausgerichtet.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Das NADOO IT-Preismodell - einzigartig, leistungsorientiert und auf Ihren Erfolg ausgerichtet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'upvote', this);
            });

            document.getElementById('downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Das NADOO IT-Preismodell - einzigartig, leistungsorientiert und auf Ihren Erfolg ausgerichtet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'upvote', this);
            });

            document.getElementById('downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b" class="vote-button vote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Das NADOO IT-Preismodell - einzigartig, leistungsorientiert und auf Ihren Erfolg ausgerichtet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'upvote', this);
            });

            document.getElementById('downvote-button-899c83fe-5cb5-4c89-9a7d-4ce99c85a11b').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '899c83fe-5cb5-4c89-9a7d-4ce99c85a11b', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 75 178 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections htmx
INFO end_of_session_sections next_section: RevolutionIT
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Revolutionieren Sie Ihre IT-Prozesse mit NADOO IT - Schneller, sicherer und effizienter als je zuvor.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Revolutionieren Sie Ihre IT-Prozesse mit NADOO IT - Schneller, sicherer und effizienter als je zuvor.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'upvote', this);
            });

            document.getElementById('downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Revolutionieren Sie Ihre IT-Prozesse mit NADOO IT - Schneller, sicherer und effizienter als je zuvor.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'upvote', this);
            });

            document.getElementById('downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4" class="vote-button vote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Revolutionieren Sie Ihre IT-Prozesse mit NADOO IT - Schneller, sicherer und effizienter als je zuvor.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'upvote', this);
            });

            document.getElementById('downvote-button-c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 501ad9ce-5993-40a7-829e-9577c54dab55 mouseenter_once signal received
INFO end_of_session_sections valid session
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 5d1fa94e-4d31-4da4-88f4-db89b16a1cbe revealed signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 75 189 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: SoftwareNeuDefiniert
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Softwareentwicklung neu definiert - NADOO IT ermöglicht ergebnisorientiertes Arbeiten und reduziert Abhängigkeiten von Aufträgen.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Softwareentwicklung neu definiert - NADOO IT ermöglicht ergebnisorientiertes Arbeiten und reduziert Abhängigkeiten von Aufträgen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'upvote', this);
            });

            document.getElementById('downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Softwareentwicklung neu definiert - NADOO IT ermöglicht ergebnisorientiertes Arbeiten und reduziert Abhängigkeiten von Aufträgen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'upvote', this);
            });

            document.getElementById('downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c" class="vote-button vote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '9f6ef439-5107-43bb-a1c2-d931ae95ab4c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Softwareentwicklung neu definiert - NADOO IT ermöglicht ergebnisorientiertes Arbeiten und reduziert Abhängigkeiten von Aufträgen.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'upvote', this);
            });

            document.getElementById('downvote-button-9f6ef439-5107-43bb-a1c2-d931ae95ab4c').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '9f6ef439-5107-43bb-a1c2-d931ae95ab4c', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 5d1fa94e-4d31-4da4-88f4-db89b16a1cbe mouseenter_once signal received
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 7cb1f208-5122-4ab9-843a-7e6d69d397de revealed signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 75 195 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: Unternehmenswachstum
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Lassen Sie Ihr Unternehmen mit NADOO IT wachsen - mehr Effizienz, bessere Ergebnisse, zufriedene Mitarbeiter.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Lassen Sie Ihr Unternehmen mit NADOO IT wachsen - mehr Effizienz, bessere Ergebnisse, zufriedene Mitarbeiter.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'upvote', this);
            });

            document.getElementById('downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Lassen Sie Ihr Unternehmen mit NADOO IT wachsen - mehr Effizienz, bessere Ergebnisse, zufriedene Mitarbeiter.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'upvote', this);
            });

            document.getElementById('downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310" class="vote-button vote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Lassen Sie Ihr Unternehmen mit NADOO IT wachsen - mehr Effizienz, bessere Ergebnisse, zufriedene Mitarbeiter.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'upvote', this);
            });

            document.getElementById('downvote-button-cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 80 205 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: Prozessanalyse
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Prozessanalyse und Optimierung leicht gemacht - mit NADOO IT und Process Mining.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Prozessanalyse und Optimierung leicht gemacht - mit NADOO IT und Process Mining.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'upvote', this);
            });

            document.getElementById('downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Prozessanalyse und Optimierung leicht gemacht - mit NADOO IT und Process Mining.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'upvote', this);
            });

            document.getElementById('downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a" class="vote-button vote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Prozessanalyse und Optimierung leicht gemacht - mit NADOO IT und Process Mining.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'upvote', this);
            });

            document.getElementById('downvote-button-e2c86761-bd7d-42f9-99b3-cf3e33d1da8a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'e2c86761-bd7d-42f9-99b3-cf3e33d1da8a', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 7cb1f208-5122-4ab9-843a-7e6d69d397de mouseenter_once signal received
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 899c83fe-5cb5-4c89-9a7d-4ce99c85a11b revealed signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 85 211 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, <Section: Das_ist_unsere_einzigartige_Produktivitäts_Garantie>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: MitarbeiterZufriedenheit
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Steigern Sie Ihre Mitarbeiterzufriedenheit und binden Sie Ihr Team langfristig mit dem NADOO Mitarbeiter 2.0 Vergütungssystem.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Steigern Sie Ihre Mitarbeiterzufriedenheit und binden Sie Ihr Team langfristig mit dem NADOO Mitarbeiter 2.0 Vergütungssystem.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'upvote', this);
            });

            document.getElementById('downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Steigern Sie Ihre Mitarbeiterzufriedenheit und binden Sie Ihr Team langfristig mit dem NADOO Mitarbeiter 2.0 Vergütungssystem.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'upvote', this);
            });

            document.getElementById('downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff" class="vote-button vote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Steigern Sie Ihre Mitarbeiterzufriedenheit und binden Sie Ihr Team langfristig mit dem NADOO Mitarbeiter 2.0 Vergütungssystem.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'upvote', this);
            });

            document.getElementById('downvote-button-8cbdac88-6a70-4d56-a158-9bdab4d3c9ff').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '8cbdac88-6a70-4d56-a158-9bdab4d3c9ff', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 899c83fe-5cb5-4c89-9a7d-4ce99c85a11b mouseenter_once signal received
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections valid session
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 85 222 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: MitarbeiterZufriedenheit>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 revealed signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 85 227 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: MitarbeiterZufriedenheit>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: Preissystem
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Das leistungsorientierte Preissystem, das Ihr IT-Projekt beschleunigt und gleichzeitig Qualität und Sicherheit gewährleistet.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Das leistungsorientierte Preissystem, das Ihr IT-Projekt beschleunigt und gleichzeitig Qualität und Sicherheit gewährleistet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'upvote', this);
            });

            document.getElementById('downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Das leistungsorientierte Preissystem, das Ihr IT-Projekt beschleunigt und gleichzeitig Qualität und Sicherheit gewährleistet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'upvote', this);
            });

            document.getElementById('downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'd0b36885-6f3e-4303-b9cc-564527150acb' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb" class="vote-button vote-button-d0b36885-6f3e-4303-b9cc-564527150acb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' 'd0b36885-6f3e-4303-b9cc-564527150acb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - Das leistungsorientierte Preissystem, das Ihr IT-Projekt beschleunigt und gleichzeitig Qualität und Sicherheit gewährleistet.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'upvote', this);
            });

            document.getElementById('downvote-button-d0b36885-6f3e-4303-b9cc-564527150acb').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', 'd0b36885-6f3e-4303-b9cc-564527150acb', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections next_section: DreisäulenModell
INFO getting html for the next section including signals
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - das dreisäulige Modell für eine ganzheitliche IT-Lösung.</h1>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - das dreisäulige Modell für eine ganzheitliche IT-Lösung.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'upvote', this);
            });

            document.getElementById('downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - das dreisäulige Modell für eine ganzheitliche IT-Lösung.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'upvote', this);
            });

            document.getElementById('downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '98ca5200-de07-41c5-8a69-e087ae116e2a' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a" class="vote-button vote-button-98ca5200-de07-41c5-8a69-e087ae116e2a vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd5b6e9ae-51b1-4563-bd82-1c652678f923' '98ca5200-de07-41c5-8a69-e087ae116e2a' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>NADOO IT - das dreisäulige Modell für eine ganzheitliche IT-Lösung.</h1>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'upvote', this);
            });

            document.getElementById('downvote-button-98ca5200-de07-41c5-8a69-e087ae116e2a').addEventListener('click', function() {
                sendVoteSignal('d5b6e9ae-51b1-4563-bd82-1c652678f923', '98ca5200-de07-41c5-8a69-e087ae116e2a', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 c0aa7d30-7f8e-4903-b1dc-4fa0f4f7edf4 mouseenter_once signal received
INFO end_of_session_sections valid session
INFO d5b6e9ae-51b1-4563-bd82-1c652678f923 cba3c7aa-8ae9-4cf9-8ed8-9cb4001fd310 revealed signal received
INFO end_of_session_sections session: d5b6e9ae-51b1-4563-bd82-1c652678f923 90 218 False
INFO User category: fast_and_engaged
INFO end_of_session_sections user_category: fast_and_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: BahnbrechendesSystem>, <Section: Wir_erstellen_Künstliche_Intelligenzen_die_Sie_bei_der_Arbeit_entlasten>, <Section: Fokussieren_Sie_sich_auf_Ihr_Kerngeschäft>, <Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: Wir_erstellen_für_Sie_Webseiten_und_Apps>, <Section: Diese_vier_simplen_Schritte_durchlaufen_wir_gemeinsam_für_alle_Ihre_Prozesse>, <Section: Wir_werden_Ihre_externe_IT-Abteilung>, <Section: NeueAnreize>, <Section: Portal_Animated_Logo>, <Section: Prozessoptimierung>, <Section: Kontaktieren_Sie_uns_für_ein_Erstgespräch_und_erfahren_Sie_mehr>, <Section: Für_alle_Schritte_von_Kundenaquise_bis_Geldeingang>, <Section: greeting_from_nadooitde>, <Section: ZukunftIT>, <Section: Wir_schaffen_IT-Sicherheit>, <Section: EinzigartigesPreismodell>, <Section: Wir_erstellen_Prozessdiagramme>, <Section: MitarbeiterZufriedenheit>, <Section: Nur_dafür_zahlen_Sie>, <Section: Alles_ohne_Abos_und_Wartungsgebühren>, '...(remaining elements truncated)...']>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: None
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 1b4e0e78-c064-4334-9aaa-13c5ebc75455 revealed signal received
INFO end_of_session_sections session: 363105f3-9faf-4a0b-a026-e0c034e2fdfd 0 10 False
INFO User category: fast_and_not_engaged
INFO end_of_session_sections user_category: fast_and_not_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: greeting_from_nadooitde>]>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen
INFO getting html for the next section including signals
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO end_of_session_sections htmx
INFO end_of_session_sections valid session
INFO end_of_session_sections session: 363105f3-9faf-4a0b-a026-e0c034e2fdfd 0 20 False
INFO User category: fast_and_not_engaged
INFO end_of_session_sections user_category: fast_and_not_engaged
INFO end_of_session_sections seen_sections: <QuerySet [<Section: Stellen_Sie_Ihre_Fragen._Wir_geben_Antwort>, <Section: greeting_from_nadooitde>, <Section: Sie_hätten_gerne_Software_wie_ein_IT-Unternehmen>]>
INFO end_of_session_sections session.variant: experimental
INFO end_of_session_sections next_section: Wir_werden_Ihre_externe_IT-Abteilung
INFO getting html for the next section including signals
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Adding end_of_session_sections signal to html
INFO <div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO end_of_session_sections next_section_html: <div class="banner" hx-post="{% url 'nadooit_website:end_of_session_sections' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' %}" hx-swap="outerHTML" hx-trigger="revealed"hx-target="#end_of_session"><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '363105f3-9faf-4a0b-a026-e0c034e2fdfd' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('363105f3-9faf-4a0b-a026-e0c034e2fdfd', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div></div><div id='end_of_session'>
INFO <HttpResponse status_code=200, "text/html; charset=utf-8">
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 1b4e0e78-c064-4334-9aaa-13c5ebc75455 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 5629431f-878e-4663-88d7-def927e197d3 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 5629431f-878e-4663-88d7-def927e197d3 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd e16d9687-3997-482a-a647-8911a030903b revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd e16d9687-3997-482a-a647-8911a030903b mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 72058798-ad2a-4796-a215-385923ba5106 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 72058798-ad2a-4796-a215-385923ba5106 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 15ab8cff-c201-4ef3-9462-c5906e1ae6d6 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 03dd80b9-7bed-4a3f-a08d-1b7ba521efc2 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 15ab8cff-c201-4ef3-9462-c5906e1ae6d6 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 03dd80b9-7bed-4a3f-a08d-1b7ba521efc2 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd e9ca81aa-0a33-411d-88f1-4bbc84725a0b revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd e9ca81aa-0a33-411d-88f1-4bbc84725a0b mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 7a366538-3ac6-4d0c-a221-3f39c5fa204d mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 89d79374-1947-48df-bbdb-9d517feaf51c mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 7a366538-3ac6-4d0c-a221-3f39c5fa204d revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 89d79374-1947-48df-bbdb-9d517feaf51c revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 403e0f16-1742-4cd0-adf0-f5acdfc1d599 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 403e0f16-1742-4cd0-adf0-f5acdfc1d599 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 9597b69b-e5d1-47fe-b1e4-e715dfa3d004 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 8ff2b81c-0955-428f-8138-d0a2ad493eb7 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd eadca5cb-83a8-4570-97e5-a92abf56eefa revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO 363105f3-9faf-4a0b-a026-e0c034e2fdfd eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '11141cb5-1745-495d-8288-dd2da52f93a4' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('11141cb5-1745-495d-8288-dd2da52f93a4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('11141cb5-1745-495d-8288-dd2da52f93a4', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO 11141cb5-1745-495d-8288-dd2da52f93a4 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
ERROR Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7fb32bc06770>> raised: ModuleNotFoundError("No module named 'sklearn'")
Traceback (most recent call last):
  File "/home/django/.local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 82, in on_import_modules
    self.worker_fixup.validate_models()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 121, in validate_models
    run_checks()
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 14, in check_url_config
    return check_resolver(resolver)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 24, in check_resolver
    return check_method()
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 494, in check
    for pattern in self.url_patterns:
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 715, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 708, in urlconf_module
    return import_module(self.urlconf_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit/urls.py", line 39, in <module>
    include(
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/conf.py", line 38, in include
    urlconf_module = import_module(urlconf_module)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit_website/urls.py", line 3, in <module>
    from . import views
  File "/app/nadooit_website/views.py", line 8, in <module>
    from .services import (
  File "/app/nadooit_website/services.py", line 25, in <module>
    from sklearn.metrics.pairwise import cosine_similarity
ModuleNotFoundError: No module named 'sklearn'
INFO generated new fontManager
INFO generated new fontManager
ERROR Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7f23fad179d0>> raised: ImportError("cannot import name 'embeddings' from 'nadooit_website' (/app/nadooit_website/__init__.py)")
Traceback (most recent call last):
  File "/home/django/.local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 82, in on_import_modules
    self.worker_fixup.validate_models()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 121, in validate_models
    run_checks()
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 14, in check_url_config
    return check_resolver(resolver)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 24, in check_resolver
    return check_method()
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 494, in check
    for pattern in self.url_patterns:
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 715, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 708, in urlconf_module
    return import_module(self.urlconf_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit/urls.py", line 39, in <module>
    include(
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/conf.py", line 38, in include
    urlconf_module = import_module(urlconf_module)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit_website/urls.py", line 3, in <module>
    from . import views
  File "/app/nadooit_website/views.py", line 8, in <module>
    from .services import (
  File "/app/nadooit_website/services.py", line 24, in <module>
    from . import embeddings
ImportError: cannot import name 'embeddings' from 'nadooit_website' (/app/nadooit_website/__init__.py)
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd70d4d7f-6666-4f65-9efa-5fe286fa001a' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d70d4d7f-6666-4f65-9efa-5fe286fa001a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a eaf22518-3273-4530-856b-35b13067caa5 revealed signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a 4b0604a7-ec20-4e59-a673-bce3b005d6f8 mouseenter_once signal received
INFO d70d4d7f-6666-4f65-9efa-5fe286fa001a eaf22518-3273-4530-856b-35b13067caa5 mouseenter_once signal received
ERROR Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7fa5ec6935e0>> raised: ModuleNotFoundError("No module named 'pandas'")
Traceback (most recent call last):
  File "/home/django/.local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 82, in on_import_modules
    self.worker_fixup.validate_models()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 121, in validate_models
    run_checks()
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 14, in check_url_config
    return check_resolver(resolver)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 24, in check_resolver
    return check_method()
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 494, in check
    for pattern in self.url_patterns:
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 715, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 708, in urlconf_module
    return import_module(self.urlconf_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit/urls.py", line 39, in <module>
    include(
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/conf.py", line 38, in include
    urlconf_module = import_module(urlconf_module)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit_website/urls.py", line 3, in <module>
    from . import views
  File "/app/nadooit_website/views.py", line 7, in <module>
    from nadooit_website.visulize import analyze_and_visualize_session_data
  File "/app/nadooit_website/visulize.py", line 1, in <module>
    import pandas as pd
ModuleNotFoundError: No module named 'pandas'
ERROR Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7fb17995f5e0>> raised: ModuleNotFoundError("No module named 'pandas'")
Traceback (most recent call last):
  File "/home/django/.local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 82, in on_import_modules
    self.worker_fixup.validate_models()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 121, in validate_models
    run_checks()
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 14, in check_url_config
    return check_resolver(resolver)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 24, in check_resolver
    return check_method()
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 494, in check
    for pattern in self.url_patterns:
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 715, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 708, in urlconf_module
    return import_module(self.urlconf_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit/urls.py", line 39, in <module>
    include(
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/conf.py", line 38, in include
    urlconf_module = import_module(urlconf_module)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit_website/urls.py", line 3, in <module>
    from . import views
  File "/app/nadooit_website/views.py", line 7, in <module>
    from nadooit_website.visulize import analyze_and_visualize_session_data
  File "/app/nadooit_website/visulize.py", line 1, in <module>
    import pandas as pd
ModuleNotFoundError: No module named 'pandas'
INFO generated new fontManager
INFO generated new fontManager
ERROR Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7f9f70afe770>> raised: AttributeError("module 'nadooit_website.views' has no attribute 'visualize_session_data'")
Traceback (most recent call last):
  File "/home/django/.local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 82, in on_import_modules
    self.worker_fixup.validate_models()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 121, in validate_models
    run_checks()
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 14, in check_url_config
    return check_resolver(resolver)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 24, in check_resolver
    return check_method()
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 494, in check
    for pattern in self.url_patterns:
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 715, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 708, in urlconf_module
    return import_module(self.urlconf_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit/urls.py", line 39, in <module>
    include(
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/conf.py", line 38, in include
    urlconf_module = import_module(urlconf_module)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit_website/urls.py", line 40, in <module>
    views.visualize_session_data,
AttributeError: module 'nadooit_website.views' has no attribute 'visualize_session_data'
ERROR Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7fcded2b2770>> raised: IndentationError('unexpected indent', ('/app/nadooit_website/urls.py', 39, 4, '    """     \n', 39, -1))
Traceback (most recent call last):
  File "/home/django/.local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 82, in on_import_modules
    self.worker_fixup.validate_models()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 121, in validate_models
    run_checks()
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/registry.py", line 88, in run_checks
    new_errors = check(app_configs=app_configs, databases=databases)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 14, in check_url_config
    return check_resolver(resolver)
  File "/home/django/.local/lib/python3.10/site-packages/django/core/checks/urls.py", line 24, in check_resolver
    return check_method()
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 494, in check
    for pattern in self.url_patterns:
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 715, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/home/django/.local/lib/python3.10/site-packages/django/utils/functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/resolvers.py", line 708, in urlconf_module
    return import_module(self.urlconf_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit/urls.py", line 39, in <module>
    include(
  File "/home/django/.local/lib/python3.10/site-packages/django/urls/conf.py", line 38, in include
    urlconf_module = import_module(urlconf_module)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 879, in exec_module
  File "<frozen importlib._bootstrap_external>", line 1017, in get_code
  File "<frozen importlib._bootstrap_external>", line 947, in source_to_code
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit_website/urls.py", line 39
    """     
IndentationError: unexpected indent
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'a14bd3be-4443-4e83-8dfb-a8eb52ef2426' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('a14bd3be-4443-4e83-8dfb-a8eb52ef2426', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO a14bd3be-4443-4e83-8dfb-a8eb52ef2426 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO a14bd3be-4443-4e83-8dfb-a8eb52ef2426 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO a14bd3be-4443-4e83-8dfb-a8eb52ef2426 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO a14bd3be-4443-4e83-8dfb-a8eb52ef2426 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO a14bd3be-4443-4e83-8dfb-a8eb52ef2426 c35b7b56-e22b-4e09-b116-56e6bf727c99 mouseenter_once signal received
INFO a14bd3be-4443-4e83-8dfb-a8eb52ef2426 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
