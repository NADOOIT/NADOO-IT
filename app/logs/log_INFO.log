WARNING Not Found: /favicon.ico
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '706f16e6-a775-46ee-936f-5abc51038f2b' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('706f16e6-a775-46ee-936f-5abc51038f2b', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('706f16e6-a775-46ee-936f-5abc51038f2b', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 706f16e6-a775-46ee-936f-5abc51038f2b 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 706f16e6-a775-46ee-936f-5abc51038f2b 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 706f16e6-a775-46ee-936f-5abc51038f2b 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
{{ video }}
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>

            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '94cbebd4-624d-4f23-8e6f-9e49b517ff0d' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('94cbebd4-624d-4f23-8e6f-9e49b517ff0d', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 94cbebd4-624d-4f23-8e6f-9e49b517ff0d 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 94cbebd4-624d-4f23-8e6f-9e49b517ff0d 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 94cbebd4-624d-4f23-8e6f-9e49b517ff0d 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 94cbebd4-624d-4f23-8e6f-9e49b517ff0d 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    <div>
{{ video }}
    </div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
    <div>

            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
    </div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '0ff39504-b521-4bfd-bbcc-22dbd9759bb6' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('0ff39504-b521-4bfd-bbcc-22dbd9759bb6', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 0ff39504-b521-4bfd-bbcc-22dbd9759bb6 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 0ff39504-b521-4bfd-bbcc-22dbd9759bb6 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 0ff39504-b521-4bfd-bbcc-22dbd9759bb6 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 0ff39504-b521-4bfd-bbcc-22dbd9759bb6 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 0ff39504-b521-4bfd-bbcc-22dbd9759bb6 c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '20dd56de-0391-49d8-aba6-501b73b8d4eb' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('20dd56de-0391-49d8-aba6-501b73b8d4eb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('20dd56de-0391-49d8-aba6-501b73b8d4eb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 20dd56de-0391-49d8-aba6-501b73b8d4eb 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 20dd56de-0391-49d8-aba6-501b73b8d4eb 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 20dd56de-0391-49d8-aba6-501b73b8d4eb 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 20dd56de-0391-49d8-aba6-501b73b8d4eb c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO 20dd56de-0391-49d8-aba6-501b73b8d4eb 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'd69f5459-ef19-4548-8ef3-374dd8291a3c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('d69f5459-ef19-4548-8ef3-374dd8291a3c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('d69f5459-ef19-4548-8ef3-374dd8291a3c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c119accc-ed0a-430a-bb3f-9e994cc5937c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c119accc-ed0a-430a-bb3f-9e994cc5937c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('c119accc-ed0a-430a-bb3f-9e994cc5937c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO c119accc-ed0a-430a-bb3f-9e994cc5937c 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO c119accc-ed0a-430a-bb3f-9e994cc5937c 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ea855c36-ade3-4fa9-b483-55ef0e79260e' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ea855c36-ade3-4fa9-b483-55ef0e79260e', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ea855c36-ade3-4fa9-b483-55ef0e79260e', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO ea855c36-ade3-4fa9-b483-55ef0e79260e 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO ea855c36-ade3-4fa9-b483-55ef0e79260e 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO ea855c36-ade3-4fa9-b483-55ef0e79260e 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '93fffb7d-6c38-4fc4-b9f1-ef66e30f644c' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('93fffb7d-6c38-4fc4-b9f1-ef66e30f644c', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 93fffb7d-6c38-4fc4-b9f1-ef66e30f644c 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 93fffb7d-6c38-4fc4-b9f1-ef66e30f644c 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 93fffb7d-6c38-4fc4-b9f1-ef66e30f644c 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
WARNING Not Found: /favicon.ico
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN_xIGR6wh.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ec38142b-3694-488d-af5b-299d878cf4ea' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ec38142b-3694-488d-af5b-299d878cf4ea', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ec38142b-3694-488d-af5b-299d878cf4ea', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO ec38142b-3694-488d-af5b-299d878cf4ea 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO ec38142b-3694-488d-af5b-299d878cf4ea 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO ec38142b-3694-488d-af5b-299d878cf4ea 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO ec38142b-3694-488d-af5b-299d878cf4ea c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO ec38142b-3694-488d-af5b-299d878cf4ea 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO generated new fontManager
INFO generated new fontManager
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN_1V6bAvT.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '784078c1-a16a-44b6-ad0a-5fbdd310ac32' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('784078c1-a16a-44b6-ad0a-5fbdd310ac32', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 784078c1-a16a-44b6-ad0a-5fbdd310ac32 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 784078c1-a16a-44b6-ad0a-5fbdd310ac32 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 784078c1-a16a-44b6-ad0a-5fbdd310ac32 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 784078c1-a16a-44b6-ad0a-5fbdd310ac32 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN_RJDKBMU.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'ee24bb7a-0b77-4739-9412-a8e72fda7976' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('ee24bb7a-0b77-4739-9412-a8e72fda7976', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('ee24bb7a-0b77-4739-9412-a8e72fda7976', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO ee24bb7a-0b77-4739-9412-a8e72fda7976 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO ee24bb7a-0b77-4739-9412-a8e72fda7976 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO ee24bb7a-0b77-4739-9412-a8e72fda7976 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO ee24bb7a-0b77-4739-9412-a8e72fda7976 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN_ZzXRcdU.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'f961c9b0-92d1-42bb-b65c-a641b1e4df96' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('f961c9b0-92d1-42bb-b65c-a641b1e4df96', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO f961c9b0-92d1-42bb-b65c-a641b1e4df96 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO f961c9b0-92d1-42bb-b65c-a641b1e4df96 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO f961c9b0-92d1-42bb-b65c-a641b1e4df96 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO f961c9b0-92d1-42bb-b65c-a641b1e4df96 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
INFO generated new fontManager
INFO generated new fontManager
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
INFO generated new fontManager
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '3f66484a-49bc-4ce6-ba75-a9f22f2b3622' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('3f66484a-49bc-4ce6-ba75-a9f22f2b3622', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 3f66484a-49bc-4ce6-ba75-a9f22f2b3622 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 3f66484a-49bc-4ce6-ba75-a9f22f2b3622 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
ERROR Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7fd524f7b700>> raised: ImportError("cannot import name 'Session' from partially initialized module 'nadooit_website.models' (most likely due to a circular import) (/app/nadooit_website/models.py)")
Traceback (most recent call last):
  File "/home/django/.local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 82, in on_import_modules
    self.worker_fixup.validate_models()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 120, in validate_models
    self.django_setup()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 116, in django_setup
    django.setup()
  File "/home/django/.local/lib/python3.10/site-packages/django/__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/home/django/.local/lib/python3.10/site-packages/django/apps/registry.py", line 116, in populate
    app_config.import_models()
  File "/home/django/.local/lib/python3.10/site-packages/django/apps/config.py", line 269, in import_models
    self.models_module = import_module(models_module_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit_website/models.py", line 6, in <module>
    from .tasks import transcode_video_to_mp4_task
  File "/app/nadooit_website/tasks.py", line 2, in <module>
    from .models import (
ImportError: cannot import name 'Session' from partially initialized module 'nadooit_website.models' (most likely due to a circular import) (/app/nadooit_website/models.py)
ERROR Signal handler <bound method DjangoFixup.on_import_modules of <celery.fixups.django.DjangoFixup object at 0x7f2d373b3700>> raised: ImportError("cannot import name 'Session' from partially initialized module 'nadooit_website.models' (most likely due to a circular import) (/app/nadooit_website/models.py)")
Traceback (most recent call last):
  File "/home/django/.local/lib/python3.10/site-packages/celery/utils/dispatch/signal.py", line 276, in send
    response = receiver(signal=self, sender=sender, **named)
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 82, in on_import_modules
    self.worker_fixup.validate_models()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 120, in validate_models
    self.django_setup()
  File "/home/django/.local/lib/python3.10/site-packages/celery/fixups/django.py", line 116, in django_setup
    django.setup()
  File "/home/django/.local/lib/python3.10/site-packages/django/__init__.py", line 24, in setup
    apps.populate(settings.INSTALLED_APPS)
  File "/home/django/.local/lib/python3.10/site-packages/django/apps/registry.py", line 116, in populate
    app_config.import_models()
  File "/home/django/.local/lib/python3.10/site-packages/django/apps/config.py", line 269, in import_models
    self.models_module = import_module(models_module_name)
  File "/usr/local/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "/app/nadooit_website/models.py", line 6, in <module>
    from .tasks import transcode_video_to_mp4_task
  File "/app/nadooit_website/tasks.py", line 2, in <module>
    from .models import (
ImportError: cannot import name 'Session' from partially initialized module 'nadooit_website.models' (most likely due to a circular import) (/app/nadooit_website/models.py)
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
INFO Saving section with ID: 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6
INFO 3f66484a-49bc-4ce6-ba75-a9f22f2b3622 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN_DE3svjj.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4e77b9fa-5124-437d-967b-fa017dd91d6f' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4e77b9fa-5124-437d-967b-fa017dd91d6f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4e77b9fa-5124-437d-967b-fa017dd91d6f', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 4e77b9fa-5124-437d-967b-fa017dd91d6f 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 4e77b9fa-5124-437d-967b-fa017dd91d6f 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 4e77b9fa-5124-437d-967b-fa017dd91d6f 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 4e77b9fa-5124-437d-967b-fa017dd91d6f 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN_DE3svjj.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '4de4ec81-090f-46af-9968-5e0060cb9d9a' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('4de4ec81-090f-46af-9968-5e0060cb9d9a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('4de4ec81-090f-46af-9968-5e0060cb9d9a', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 4de4ec81-090f-46af-9968-5e0060cb9d9a 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 4de4ec81-090f-46af-9968-5e0060cb9d9a 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 4de4ec81-090f-46af-9968-5e0060cb9d9a 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO 4de4ec81-090f-46af-9968-5e0060cb9d9a 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 4de4ec81-090f-46af-9968-5e0060cb9d9a c35b7b56-e22b-4e09-b116-56e6bf727c99 revealed signal received
INFO 4de4ec81-090f-46af-9968-5e0060cb9d9a 4b0604a7-ec20-4e59-a673-bce3b005d6f8 revealed signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Starting transcoding task for video ID: eb1e7c48-fe81-403e-bcf4-98c7298b4caf
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN.mkv" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '2f0bc908-18fa-41e6-b723-afe4a1cbda99' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('2f0bc908-18fa-41e6-b723-afe4a1cbda99', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO 2f0bc908-18fa-41e6-b723-afe4a1cbda99 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO 2f0bc908-18fa-41e6-b723-afe4a1cbda99 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO 2f0bc908-18fa-41e6-b723-afe4a1cbda99 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO 2f0bc908-18fa-41e6-b723-afe4a1cbda99 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN_lz8Rd44.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' 'c8a19e2a-9253-4976-a021-8695becb3ccb' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('c8a19e2a-9253-4976-a021-8695becb3ccb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('c8a19e2a-9253-4976-a021-8695becb3ccb', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO c8a19e2a-9253-4976-a021-8695becb3ccb 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 revealed signal received
INFO c8a19e2a-9253-4976-a021-8695becb3ccb 9e0421d2-7224-4d0f-ae37-910d08b14fed revealed signal received
INFO c8a19e2a-9253-4976-a021-8695becb3ccb 7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 mouseenter_once signal received
INFO c8a19e2a-9253-4976-a021-8695becb3ccb 9e0421d2-7224-4d0f-ae37-910d08b14fed mouseenter_once signal received
INFO Section: <section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    {{ video }}
</div>
    </div>
</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6" class="vote-button vote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6')"><section>
    <div class="banner">
        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">
            <h1>Willkommen bei Nadooit.de!</h1>
            <p>Entdecken Sie eine dynamische Webseite, die Ihnen eine personalisierte Erfahrung bietet. Durch Bewertungen und Fragen gestalten Sie die Seite aktiv mit und genießen eine individuelle Erfahrung.</p>
            <h2>NADOOIT - Individuelle Softwarelösungen für Sie</h2>
            <p>Unser neuartiges IT-Konzept entwickelt maßgeschneiderte Softwarelösungen, die auf Ihre spezifischen Bedürfnisse zugeschnitten sind. Wir glauben an Individualität, sowohl bei der Software für unsere Kunden als auch bei der Gestaltung unserer Webseite.</p>
            <h3>Machen Sie mit!</h3>
            <p>Erleben Sie die Zukunft des personalisierten Web-Erlebnisses bei Nadooit.de!</p>
        </div>
<div class="video-container">
    
            <video id="my-video" class="video-js vjs-default-skin" width="100%" height="auto" controls>
                <source src="/static/media/videos/NADOOIT_INTERVIEW_LINKEDIN_lz8Rd44.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>
            
</div>
    </div>
</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'upvote', this);
            });

            document.getElementById('downvote-button-7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '7b88f7f0-bbf3-44b6-afaf-85c5b7442ed6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed" class="vote-button vote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '9e0421d2-7224-4d0f-ae37-910d08b14fed' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '9e0421d2-7224-4d0f-ae37-910d08b14fed')"><section>



    <div class="banner">



        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">             



            <h1>Sie hätten gerne Software wie ein IT-Unternehmen?</h1>         



        </div>



    </div>



</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'upvote', this);
            });

            document.getElementById('downvote-button-9e0421d2-7224-4d0f-ae37-910d08b14fed').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '9e0421d2-7224-4d0f-ae37-910d08b14fed', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99" class="vote-button vote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'c35b7b56-e22b-4e09-b116-56e6bf727c99' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'c35b7b56-e22b-4e09-b116-56e6bf727c99')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir kümmern uns darum!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'upvote', this);
            });

            document.getElementById('downvote-button-c35b7b56-e22b-4e09-b116-56e6bf727c99').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'c35b7b56-e22b-4e09-b116-56e6bf727c99', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8" class="vote-button vote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '4b0604a7-ec20-4e59-a673-bce3b005d6f8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '4b0604a7-ec20-4e59-a673-bce3b005d6f8')"><section>

    <div class="banner">        

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir werden Ihre externe IT-Abteilung</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'upvote', this);
            });

            document.getElementById('downvote-button-4b0604a7-ec20-4e59-a673-bce3b005d6f8').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '4b0604a7-ec20-4e59-a673-bce3b005d6f8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'eaf22518-3273-4530-856b-35b13067caa5' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eaf22518-3273-4530-856b-35b13067caa5" class="vote-button vote-button-eaf22518-3273-4530-856b-35b13067caa5 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'eaf22518-3273-4530-856b-35b13067caa5' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'eaf22518-3273-4530-856b-35b13067caa5')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Sie brauchen nicht mehr ewig zwischen verschiedenen Angeboten vergleichen</h1>

            <h1>oder</h1>

            <h1>teuer Software auf Ihre Bedürfnisse hin anzupassen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'eaf22518-3273-4530-856b-35b13067caa5', 'upvote', this);
            });

            document.getElementById('downvote-button-eaf22518-3273-4530-856b-35b13067caa5').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'eaf22518-3273-4530-856b-35b13067caa5', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb" class="vote-button vote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir digitalisieren Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'upvote', this);
            });

            document.getElementById('downvote-button-f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'f353b9a1-3d3f-45dc-bcd8-e8c658b8fedb', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'e881e881-fc44-4901-8241-eef7c0beb636' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e881e881-fc44-4901-8241-eef7c0beb636" class="vote-button vote-button-e881e881-fc44-4901-8241-eef7c0beb636 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'e881e881-fc44-4901-8241-eef7c0beb636' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e881e881-fc44-4901-8241-eef7c0beb636')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen Prozesssicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e881e881-fc44-4901-8241-eef7c0beb636', 'upvote', this);
            });

            document.getElementById('downvote-button-e881e881-fc44-4901-8241-eef7c0beb636').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e881e881-fc44-4901-8241-eef7c0beb636', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc" class="vote-button vote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '889bc2af-f212-41d7-8b2d-eff9f66cdadc' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '889bc2af-f212-41d7-8b2d-eff9f66cdadc')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir schaffen IT-Sicherheit</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'upvote', this);
            });

            document.getElementById('downvote-button-889bc2af-f212-41d7-8b2d-eff9f66cdadc').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '889bc2af-f212-41d7-8b2d-eff9f66cdadc', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091" class="vote-button vote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '3e00a585-f4dc-4471-8caa-8c858fcdb091' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '3e00a585-f4dc-4471-8caa-8c858fcdb091')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie Webseiten</h1>

            <h1>und</h1>

            <h1>Apps</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'upvote', this);
            });

            document.getElementById('downvote-button-3e00a585-f4dc-4471-8caa-8c858fcdb091').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '3e00a585-f4dc-4471-8caa-8c858fcdb091', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7" class="vote-button vote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '8ff2b81c-0955-428f-8138-d0a2ad493eb7' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '8ff2b81c-0955-428f-8138-d0a2ad493eb7')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Alles ohne Abos!</h1>

            <h1>und</h1>

            <h1>Wartungsgebühren</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'upvote', this);
            });

            document.getElementById('downvote-button-8ff2b81c-0955-428f-8138-d0a2ad493eb7').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '8ff2b81c-0955-428f-8138-d0a2ad493eb7', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa" class="vote-button vote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'eadca5cb-83a8-4570-97e5-a92abf56eefa' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'eadca5cb-83a8-4570-97e5-a92abf56eefa')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir garantieren Ihnen</h1>

            <h1>Messbare Produktivitätssteigerung!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'upvote', this);
            });

            document.getElementById('downvote-button-eadca5cb-83a8-4570-97e5-a92abf56eefa').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'eadca5cb-83a8-4570-97e5-a92abf56eefa', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10" class="vote-button vote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Nur dafür zahlen Sie</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'upvote', this);
            });

            document.getElementById('downvote-button-8f4f2c3c-e433-4a8f-992f-0a35bc3edc10').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '8f4f2c3c-e433-4a8f-992f-0a35bc3edc10', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004" class="vote-button vote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '9597b69b-e5d1-47fe-b1e4-e715dfa3d004' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Das ist unsere einzigartige Produktivitäts Garantie!</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'upvote', this);
            });

            document.getElementById('downvote-button-9597b69b-e5d1-47fe-b1e4-e715dfa3d004').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '9597b69b-e5d1-47fe-b1e4-e715dfa3d004', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c" class="vote-button vote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c')"><section>

    <div class="banner">

        <div class="size">

                <div class="four-card-wrap">

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-1-</h1>

                        <h2>Analyse</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-2-</h1>

                        <h2>Dokumentation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-3-</h1>

                        <h2>Automatisation</h2>

                    </div>

                    <div class="step-card" data-aos="zoom-in">

                        <h1>-4-</h1>

                        <h2>Messen</h2>

                    </div>

                </div>

            </div>

         </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'upvote', this);
            });

            document.getElementById('downvote-button-ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'ed5d186a-cf8d-43a1-99fa-d16cc9f6b96c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599" class="vote-button vote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '403e0f16-1742-4cd0-adf0-f5acdfc1d599' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '403e0f16-1742-4cd0-adf0-f5acdfc1d599')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Diese vier simplen Schritte durchlaufen wir gemeinsam für alle Ihre Prozesse</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'upvote', this);
            });

            document.getElementById('downvote-button-403e0f16-1742-4cd0-adf0-f5acdfc1d599').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '403e0f16-1742-4cd0-adf0-f5acdfc1d599', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '89d79374-1947-48df-bbdb-9d517feaf51c' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c" class="vote-button vote-button-89d79374-1947-48df-bbdb-9d517feaf51c vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '89d79374-1947-48df-bbdb-9d517feaf51c' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '89d79374-1947-48df-bbdb-9d517feaf51c')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Prozessdiagramme</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '89d79374-1947-48df-bbdb-9d517feaf51c', 'upvote', this);
            });

            document.getElementById('downvote-button-89d79374-1947-48df-bbdb-9d517feaf51c').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '89d79374-1947-48df-bbdb-9d517feaf51c', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d" class="vote-button vote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '7a366538-3ac6-4d0c-a221-3f39c5fa204d' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '7a366538-3ac6-4d0c-a221-3f39c5fa204d')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Für alle Schritte von Kundenaquise bis Geldeingang</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'upvote', this);
            });

            document.getElementById('downvote-button-7a366538-3ac6-4d0c-a221-3f39c5fa204d').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '7a366538-3ac6-4d0c-a221-3f39c5fa204d', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8" class="vote-button vote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen für Sie, für jeden Schritt, aussagekräftige Schulungsunterlagen</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'upvote', this);
            });

            document.getElementById('downvote-button-b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'b8649e0c-4ec7-49a5-9d6e-c6f0fecc5fd8', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b" class="vote-button vote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen individuel auf Ihre Bedürfnisse angepasste Software</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'upvote', this);
            });

            document.getElementById('downvote-button-e9ca81aa-0a33-411d-88f1-4bbc84725a0b').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e9ca81aa-0a33-411d-88f1-4bbc84725a0b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '03dd80b9-7bed-4a3f-a08d-1b7ba521efc2')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Wir erstellen Künstliche Intelligenzen,

                 die Sie bei der Arbeit entlasten</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6" class="vote-button vote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '15ab8cff-c201-4ef3-9462-c5906e1ae6d6' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Fokussieren Sie sich auf Ihr Kerngeschäft</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'upvote', this);
            });

            document.getElementById('downvote-button-15ab8cff-c201-4ef3-9462-c5906e1ae6d6').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '15ab8cff-c201-4ef3-9462-c5906e1ae6d6', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '72058798-ad2a-4796-a215-385923ba5106' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-72058798-ad2a-4796-a215-385923ba5106" class="vote-button vote-button-72058798-ad2a-4796-a215-385923ba5106 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '72058798-ad2a-4796-a215-385923ba5106' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '72058798-ad2a-4796-a215-385923ba5106')"><section>

    <div class="banner">

        <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

            <h1>Kontaktieren Sie uns für ein Erstgespräch und erfahren Sie mehr</h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '72058798-ad2a-4796-a215-385923ba5106', 'upvote', this);
            });

            document.getElementById('downvote-button-72058798-ad2a-4796-a215-385923ba5106').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '72058798-ad2a-4796-a215-385923ba5106', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'e16d9687-3997-482a-a647-8911a030903b' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-e16d9687-3997-482a-a647-8911a030903b" class="vote-button vote-button-e16d9687-3997-482a-a647-8911a030903b vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' 'e16d9687-3997-482a-a647-8911a030903b' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e16d9687-3997-482a-a647-8911a030903b')"><section class="mangsho" id="contactus">

    <div class="banner">

    <div class="size">

        <div class="about" data-aos="fade-up">

            <h2>Kontaktdaten</h2>

            <div class="wraper">

                <div class="hap">

                    <!-- meetergo widget start -->

                    <div style="min-width:330px;height:620px" class="meetergo-iframe" link="https://my.meetergo.com/christop.backhaus.it/erstgesprach"></div>

                    <script src="https://cdn.jsdelivr.net/gh/meetergo/meetergo-integration/dist/esbuild/browser.js"></script>

                    <!-- meetergo widget end -->

                </div>

                <div class="wrap-text">

                    <h3>Christoph Backhaus IT</h3>

                    <h3>Am Markt 1</h3>

                    <h3>47229 Duisburg</h3>

                    <h3>Festnetz: <a href="tel:+4920657098429">+49 2065 7098429</a></h3>

                    <h3><a href="mailto:christoph.backhaus@NADOOIT.de">christoph.backhaus@NADOOIT.de</a></h3>

                </div>

            </div>

        </div>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e16d9687-3997-482a-a647-8911a030903b', 'upvote', this);
            });

            document.getElementById('downvote-button-e16d9687-3997-482a-a647-8911a030903b').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', 'e16d9687-3997-482a-a647-8911a030903b', 'downvote', this);
            });
        </script>
        </div>
INFO Section: {% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '5629431f-878e-4663-88d7-def927e197d3' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-5629431f-878e-4663-88d7-def927e197d3" class="vote-button vote-button-5629431f-878e-4663-88d7-def927e197d3 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '5629431f-878e-4663-88d7-def927e197d3' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '5629431f-878e-4663-88d7-def927e197d3')">{% load static%}

<section>

    <div class="banner">

        <div class="size">

            <div class="gap" data-aos="fade-in">

                <h3 class="hide"><img src={% static 'static\nadooit_website\png\logo\nadooit-big.png' %} width="40%" alt=""></h3>

                <h1 class="hide portal"><img class="round-animation " src={% static 'static\nadooit_website\png\logo\ring.png' %} width="22%" alt=""></h1>

                <h2  class="hide"><img src={% static 'static\nadooit_website\png\logo\niche.png' %} width="50%" alt=""></h2>

                <h1  class="showe portal"><img src={% static 'static\nadooit_website\png\logo\nadooit-big-phone.png' %} width="100%" alt=""></h1>

        </div>

    </div>

</section></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '5629431f-878e-4663-88d7-def927e197d3', 'upvote', this);
            });

            document.getElementById('downvote-button-5629431f-878e-4663-88d7-def927e197d3').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '5629431f-878e-4663-88d7-def927e197d3', 'downvote', this);
            });
        </script>
        </div>
INFO Section: <style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script>
INFO Section: <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
INFO <div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'revealed' %}" hx-swap="afterend" hx-trigger="revealed"><div class="section-container"><div class="vote-section"><button id="upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="upvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2L10.59 3.41L2 12H9V22H15V12H22L12 2Z" fill="#212121"/>
        </svg>
        </button><button id="downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455" class="vote-button vote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455 vote-svg-button" data-vote-type="downvote">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22L13.41 20.59L22 12H15V2H9V12H2L12 22Z" fill="#212121"/>
        </svg>
        </button></div><div hx-post="{% url 'nadooit_website:signal' '257018b6-328d-4bfd-ac33-b86433cd54ab' '1b4e0e78-c064-4334-9aaa-13c5ebc75455' 'mouseenter_once' %}" hx-swap="afterend" hx-trigger="mouseenter once"><div class="section" onmouseenter="onMouseEnter()" onmouseleave="onMouseLeave('257018b6-328d-4bfd-ac33-b86433cd54ab', '1b4e0e78-c064-4334-9aaa-13c5ebc75455')"><style>

        .toast-header,

        .toast-body {

            background-color: #000000;

            border: 1px solid #ffffff;

        }

</style>

<section>

    <div class="banner">

       <div class="our-grantee aos-init aos-animate" data-aos="fade-up">

       <div class="container">

        <h1 class="mt-3">Stellen Sie Ihre Fragen hier und tragen Sie dazu bei, die Webseite um die Antworten zu erweitern. Nutzen Sie die Gelegenheit, gemeinsam Wissen aufzubauen und für alle zugänglich zu machen.</h1>

        <div class="input-group mb-3">

            <input type="text" id="question" class="form-control" placeholder="Ihre Frage hier eingeben...">

            <button type="button" class="btn btn-primary" onclick="submitQuestion()">Senden</button>

        </div>

        <div class="toast-container position-fixed top-50 start-50 translate-middle" style="z-index: 1100;">

            <div id="question-toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">

                <div class="toast-header">

                    <strong class="me-auto">Vielen Dank!</strong>

                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>

                </div>

                <div class="toast-body">

                    Danke, dass Sie uns dabei weiterhelfen, uns zu verbessern.

                </div>

            </div>

        </div>

    </div>

    </div>

</section>

<script>

async function submitQuestion() {

    const questionInput = document.getElementById('question');

    const question = questionInput.value.trim();



    if (question) {

        // Extract the session_id from the body element's data attribute.

        const sessionId = document.body.dataset.sessionId;



        // Send the question and session_id to the server.

        try {

            const response = await fetch(`/your_question_we_answer/question/${sessionId}`, {

                method: 'POST',

                headers: {

                    'Content-Type': 'application/json',

                },

                body: JSON.stringify({ question }),

            });



            if (response.ok) {

                console.log('Frage eingereicht:', question);

                questionInput.value = '';

                showToast(); // Show the toast

            } else {

                console.error('Fehler beim Senden der Frage:', response.statusText);

            }

        } catch (error) {

            console.error('Fehler beim Senden der Frage:', error);

        }

    } else {

        alert('Bitte geben Sie eine Frage ein.');

    }

}



function showToast() {

    const toastElement = document.getElementById('question-toast');

    const toast = new bootstrap.Toast(toastElement, { delay: 2000 }); // Set the toast to vanish after 2 seconds

    toast.show();

}



function addEnterKeyListener() {

    const questionInput = document.getElementById('question');

    questionInput.addEventListener('keydown', function (event) {

        if (event.key === 'Enter') {

            event.preventDefault(); // Prevent the default behavior (form submission, line break, etc.)

            submitQuestion();

        }

    });

}



document.addEventListener('DOMContentLoaded', addEnterKeyListener);

</script></div>
        <script>
        let enterTime = 0;

        function onMouseEnter() {
            enterTime = new Date().getTime();
        }

        function onMouseLeave(sessionId, sectionId) {
            const leaveTime = new Date().getTime();
            const interactionTime = (leaveTime - enterTime) / 1000;

            // Send the interactionTime along with the mouseleave signal
            fetch(`/signal/${sessionId}/${sectionId}/mouseleave/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({
                    interaction_time: interactionTime
                })
            });
        }
        </script>
        </div></div>
        
        <style>
            .vote-svg-button:hover:not(.highlighted-upvote):not(.highlighted-downvote) svg path {
                fill: #FFC107;
            }
            .highlighted-upvote svg path {
                fill: #00b4dc;
            }
            .highlighted-downvote svg path {
                fill: #FF4F4F;
            }
        </style>
        
        <script>
            function sendVoteSignal(sessionId, sectionId, voteType, buttonElement) {
                // Clear previous highlight
                const upvoteButton = document.getElementById('upvote-button-' + sectionId);
                const downvoteButton = document.getElementById('downvote-button-' + sectionId);
                
                upvoteButton.classList.remove('highlighted-upvote');
                downvoteButton.classList.remove('highlighted-downvote');

                // Highlight the selected button
                if (voteType === 'upvote') {
                    buttonElement.classList.add('highlighted-upvote');
                } else if (voteType === 'downvote') {
                    buttonElement.classList.add('highlighted-downvote');
                }

                fetch(`/signal/${sessionId}/${sectionId}/${voteType}/`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                });
            }

            // Add event listeners to the buttons
            document.getElementById('upvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'upvote', this);
            });

            document.getElementById('downvote-button-1b4e0e78-c064-4334-9aaa-13c5ebc75455').addEventListener('click', function() {
                sendVoteSignal('257018b6-328d-4bfd-ac33-b86433cd54ab', '1b4e0e78-c064-4334-9aaa-13c5ebc75455', 'downvote', this);
            });
        </script>
        </div>
WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

WARNING c:\Users\ChristophBackhaus\OneDrive - Christoph Backhaus IT\NADOOIT\Produkt-Abteilung\nadooit\Software\Dev\Server\managmentsystem\venv\lib\site-packages\moviepy\video\fx\painting.py:7: DeprecationWarning: Please use `sobel` from the `scipy.ndimage` namespace, the `scipy.ndimage.filters` namespace is deprecated.
  from scipy.ndimage.filters import sobel

