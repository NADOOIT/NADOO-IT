# Generated by Django 4.1.3 on 2023-07-08 17:30

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("nadooit_crm", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Bot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="nadooit_crm.customer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TelegramChat",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                ("type", models.CharField(max_length=255)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("all_members_are_administrators", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="TelegramMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "update_id",
                    models.BigIntegerField(blank=True, null=True, unique=True),
                ),
                ("message_id", models.BigIntegerField()),
                ("text", models.TextField(blank=True, null=True)),
                ("date", models.DateTimeField()),
                ("additional_info", models.JSONField(blank=True, null=True)),
                ("reply_markup", models.JSONField(blank=True, null=True)),
                ("parse_mode", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "chat",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="bot_management.telegramchat",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TelegramUser",
            fields=[
                ("id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("is_bot", models.BooleanField()),
                ("first_name", models.CharField(max_length=255)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "language_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "verbose_name": "TelegramUser",
                "verbose_name_plural": "TelegramUsers",
            },
        ),
        migrations.CreateModel(
            name="TelegramVoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("duration", models.IntegerField()),
                ("mime_type", models.CharField(max_length=100)),
                ("file_id", models.CharField(max_length=100)),
                ("file_unique_id", models.CharField(max_length=100)),
                ("file_size", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="TelegramVoiceFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file", models.FileField(upload_to="voice_files/")),
                (
                    "voice",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bot_management.telegramvoice",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TelegramPhotoMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("caption", models.TextField(blank=True, null=True)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bot_management.telegrammessage",
                    ),
                ),
            ],
            options={
                "ordering": ["-message__date"],
            },
        ),
        migrations.CreateModel(
            name="TelegramPhoto",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_id", models.CharField(max_length=100, null=True)),
                ("file_unique_id", models.CharField(max_length=100, null=True)),
                ("file_size", models.IntegerField(null=True)),
                ("width", models.IntegerField(null=True)),
                ("height", models.IntegerField(null=True)),
                (
                    "photo_message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bot_management.telegramphotomessage",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="telegrammessage",
            name="from_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="messages",
                to="bot_management.telegramuser",
            ),
        ),
        migrations.AddField(
            model_name="telegrammessage",
            name="voice",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="bot_management.telegramvoice",
            ),
        ),
        migrations.CreateModel(
            name="BotPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform",
                    models.CharField(
                        choices=[
                            ("telegram", "Telegram"),
                            ("facebook", "Facebook Messenger"),
                            ("whatsapp", "WhatsApp"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "bot_register_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("access_token", models.CharField(max_length=100)),
                (
                    "secret_token",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "bot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bot_management.bot",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="APIKey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "api_key",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "bot_platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="bot_management.botplatform",
                    ),
                ),
            ],
        ),
        migrations.AlterUniqueTogether(
            name="telegrammessage",
            unique_together={("message_id", "chat", "update_id")},
        ),
    ]
