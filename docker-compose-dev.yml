#TODO Check for new versions of the base image. If a new version is available, rebuild the image.
version: '3.3'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-dev
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && python manage.py runserver_plus 0.0.0.0:8000 --cert-file cert.cer --key-file key.pem --insecure" 
    ports:
      - 8000:8000
    volumes:
      - ./app:/app
      - ./data/web:/vol/web
      - ${USERPROFILE}\AppData\Roaming\postgresql\:/home/django/.postgresql/
    environment:
      - 'DJANGO_DEBUG=${DJANGO_DEBUG}'
      - 'DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}'
      - 'DJANGO_ALLOWED_HOSTS=${DOMAIN}'
      - 'DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}'
      - 'COCKROACH_DB_HOST=${COCKROACH_DB_HOST}'
      - 'COCKROACH_DB_NAME=${COCKROACH_DB_NAME}'
      - 'COCKROACH_DB_PORT=${COCKROACH_DB_PORT}'
      - 'COCKROACH_DB_USER=${COCKROACH_DB_USER}'
      - 'COCKROACH_DB_PASSWORD=${COCKROACH_DB_PASSWORD}'
      - 'COCKROACH_DB_OPTIONS=${COCKROACH_DB_OPTIONS}'
      - 'NADOOIT__API_KEY=${NADOOIT__API_KEY}'
      - 'NADOOIT__USER_CODE=${NADOOIT__USER_CODE}'
      - 'CELERY_BROKER_URL=redis://redis:6379/0'
    depends_on:
      - redis
      
  redis:
      image: 'redis:latest'
      ports:
        - '6379:6379'