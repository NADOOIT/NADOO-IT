#TODO Check for new version of dcoker-compose
version: '3.3'
services:
  coturn:
    image: coturn/coturn:4.6.2
    restart: always
    network_mode: "host"
    volumes:
      - ./turnserver.conf:/etc/coturn/turnserver.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    command: -c /etc/coturn/turnserver.conf

  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    environment:
      - 'DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}'
      - 'DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}'
      - 'DJANGO_DEBUG=${DJANGO_DEBUG}'
      - 'OPENAI_API_KEY=${OPENAI_API_KEY}'
      - 'DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}'
      - 'COCKROACH_DB_HOST=${COCKROACH_DB_HOST}'
      - 'COCKROACH_DB_NAME=${COCKROACH_DB_NAME}'
      - 'COCKROACH_DB_PORT=${COCKROACH_DB_PORT}'
      - 'COCKROACH_DB_USER=${COCKROACH_DB_USER}'
      - 'COCKROACH_DB_PASSWORD=${COCKROACH_DB_PASSWORD}'
      - 'COCKROACH_DB_OPTIONS=${COCKROACH_DB_OPTIONS}'
      - 'NADOOIT__API_KEY=${NADOOIT__API_KEY}'
      - 'NADOOIT__USER_CODE=${NADOOIT__USER_CODE}'
      - 'CELERY_BROKER_URL=redis://redis:6379/0'
    depends_on:
      - redis
    volumes:
      #- /home/django/.postgresql/:/home/django/.postgresql/ 
      - /home/nadooserver/.postgresql/:/home/django/.postgresql/
      - static_data:/vol/web/static
      - media_data:/vol/web/media
  proxy:
    build:
      context: ./docker/proxy
    restart: always
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - 'certbot-web:/vol/www'
      - 'proxy-dhparams:/vol/proxy'
      - 'certbot-certs:/etc/letsencrypt'
      - static_data:/vol/web/static
      - media_data:/vol/web/media
    environment:
      - 'DOMAIN=${DOMAIN}'
    depends_on:
      - app
  certbot:
    build:
      context: ./docker/certbot
    command: echo "Skipping certbot"
    environment:
      - 'EMAIL=${ACME_DEFAULT_EMAIL}'
      - 'DOMAIN=${DOMAIN}'
    volumes:
      - 'certbot-web:/vol/www'
      - 'certbot-certs:/etc/letsencrypt'
    depends_on:
      - proxy
  redis:
    image: 'redis:latest'
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "python -m celery -A nadooit worker --loglevel=info"
    volumes:
      - ./app:/app
      - ${HOME}/.postgresql/root.crt:/home/django/.postgresql/root.crt
      - static_data:/vol/web/static
      - media_data:/vol/web/media
    environment:
      - 'DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}'
      - 'OPENAI_API_KEY=${OPENAI_API_KEY}'
      - 'DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}'
      - 'DJANGO_DEBUG=${DJANGO_DEBUG}'
      - 'DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}'
      - 'COCKROACH_DB_HOST=${COCKROACH_DB_HOST}'
      - 'COCKROACH_DB_NAME=${COCKROACH_DB_NAME}'
      - 'COCKROACH_DB_PORT=${COCKROACH_DB_PORT}'
      - 'COCKROACH_DB_USER=${COCKROACH_DB_USER}'
      - 'COCKROACH_DB_PASSWORD=${COCKROACH_DB_PASSWORD}'
      - 'COCKROACH_DB_OPTIONS=${COCKROACH_DB_OPTIONS}'
      - 'NADOOIT__API_KEY=${NADOOIT__API_KEY}'
      - 'NADOOIT__USER_CODE=${NADOOIT__USER_CODE}'
      - 'CELERY_BROKER_URL=redis://redis:6379/0'
    depends_on:
      - redis

volumes:
  certbot-web: null
  proxy-dhparams: null
  certbot-certs: null
  static_data: null
  media_data: null