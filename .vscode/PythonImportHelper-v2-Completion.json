[
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "mfa",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mfa",
        "description": "mfa",
        "detail": "mfa",
        "documentation": {}
    },
    {
        "label": "mfa.TrustedDevice",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mfa.TrustedDevice",
        "description": "mfa.TrustedDevice",
        "detail": "mfa.TrustedDevice",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "BillingAdress",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "ShippingAdress",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeManager",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerManager",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeManager",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "ProgramShare",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramManager",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramManager",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "isExtraImport": true,
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "isExtraImport": true,
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "isExtraImport": true,
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerTimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "get_time_as_string_in_hour_format_for_time_in_seconds_as_integer",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountManager",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerTimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "EmployeeTimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "WorkTimeAccountEntry",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountManager",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountManager",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "get_time_as_string_in_hour_format_for_time_in_seconds_as_integer",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecutionManager",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "baker",
        "importPath": "model_bakery",
        "description": "model_bakery",
        "isExtraImport": true,
        "detail": "model_bakery",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "create_execution",
        "importPath": "nadooit_api_executions_system.views",
        "description": "nadooit_api_executions_system.views",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "check_user",
        "importPath": "nadooit_api_executions_system.views",
        "description": "nadooit_api_executions_system.views",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKeyManager",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "nadooit_auth.user_code",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "get__new_user_code",
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "isExtraImport": true,
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "check__valid_user_code",
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "isExtraImport": true,
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "BaseBackend",
        "importPath": "django.contrib.auth.backends",
        "description": "django.contrib.auth.backends",
        "isExtraImport": true,
        "detail": "django.contrib.auth.backends",
        "documentation": {}
    },
    {
        "label": "login_user",
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "isExtraImport": true,
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "isExtraImport": true,
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "register_user",
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "isExtraImport": true,
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user_passes_test",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user_passes_test",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "isExtraImport": true,
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "get__new_username",
        "importPath": "nadooit_auth.username",
        "description": "nadooit_auth.username",
        "isExtraImport": true,
        "detail": "nadooit_auth.username",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "default",
        "importPath": "email.policy",
        "description": "email.policy",
        "isExtraImport": true,
        "detail": "email.policy",
        "documentation": {}
    },
    {
        "label": "KeyManager",
        "importPath": "nadooit_key.models",
        "description": "nadooit_key.models",
        "isExtraImport": true,
        "detail": "nadooit_key.models",
        "documentation": {}
    },
    {
        "label": "label",
        "importPath": "cProfile",
        "description": "cProfile",
        "isExtraImport": true,
        "detail": "cProfile",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "ModelChoiceField",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "nadooit_os.views",
        "description": "nadooit_os.views",
        "isExtraImport": true,
        "detail": "nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "requests",
        "description": "requests",
        "isExtraImport": true,
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "Process",
        "importPath": "nadooit_workflow.models",
        "description": "nadooit_workflow.models",
        "isExtraImport": true,
        "detail": "nadooit_workflow.models",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "is_url_active",
        "kind": 2,
        "importPath": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "description": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "peekOfCode": "def is_url_active(request:HttpRequest, url:str) -> str:\n    # Main idea is to check if the url and the current path is a match\n    if reverse(url) == request.path:\n        return \"active-link\"\n    print(\"url: \", url)\n    print(\"request.path: \", request.path)\n    if request.path in reverse(url) and len(request.path) > 1:\n        return \"active-link\"\n    return \"\"",
        "detail": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "description": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "peekOfCode": "register = template.Library()\n@register.simple_tag\ndef is_url_active(request:HttpRequest, url:str) -> str:\n    # Main idea is to check if the url and the current path is a match\n    if reverse(url) == request.path:\n        return \"active-link\"\n    print(\"url: \", url)\n    print(\"request.path: \", request.path)\n    if request.path in reverse(url) and len(request.path) > 1:\n        return \"active-link\"",
        "detail": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "documentation": {}
    },
    {
        "label": "DjangoIsUrlActiveTemplatetagConfig",
        "kind": 6,
        "importPath": "app.django_is_url_active_templatetag.apps",
        "description": "app.django_is_url_active_templatetag.apps",
        "peekOfCode": "class DjangoIsUrlActiveTemplatetagConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'django_is_url_active_templatetag'",
        "detail": "app.django_is_url_active_templatetag.apps",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.nadooit.asgi",
        "description": "app.nadooit.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "app.nadooit.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get(\"DJANGO_SECRET_KEY\", \"changeme\")\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBUG = True\nDEBUG = bool(int(os.environ.get(\"DJANGO_DEBUG\", 0)))\n# The list of allowed hosts is set in the environment variable DJANGO_ALLOWED_HOSTS\n# The value is a comma separated list of hosts",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get(\"DJANGO_SECRET_KEY\", \"changeme\")\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBUG = True\nDEBUG = bool(int(os.environ.get(\"DJANGO_DEBUG\", 0)))\n# The list of allowed hosts is set in the environment variable DJANGO_ALLOWED_HOSTS\n# The value is a comma separated list of hosts\n# Example: DJANGO_ALLOWED_HOSTS= \"localhost, nadooit.de,\nALLOWED_HOSTS = [] if DEBUG else os.environ.get(\"DJANGO_ALLOWED_HOSTS\", \"\").split(\",\")\n# Application definition\n# This is the list of installed apps. If a new app is added, it must be added here.",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "DEBUG = bool(int(os.environ.get(\"DJANGO_DEBUG\", 0)))\n# The list of allowed hosts is set in the environment variable DJANGO_ALLOWED_HOSTS\n# The value is a comma separated list of hosts\n# Example: DJANGO_ALLOWED_HOSTS= \"localhost, nadooit.de,\nALLOWED_HOSTS = [] if DEBUG else os.environ.get(\"DJANGO_ALLOWED_HOSTS\", \"\").split(\",\")\n# Application definition\n# This is the list of installed apps. If a new app is added, it must be added here.\n# The order of the apps is important. The apps are loaded in the order they are listed here. \n# See the documentation of the apps for more information.\nINSTALLED_APPS = [",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "ALLOWED_HOSTS = [] if DEBUG else os.environ.get(\"DJANGO_ALLOWED_HOSTS\", \"\").split(\",\")\n# Application definition\n# This is the list of installed apps. If a new app is added, it must be added here.\n# The order of the apps is important. The apps are loaded in the order they are listed here. \n# See the documentation of the apps for more information.\nINSTALLED_APPS = [\n    \"sslserver\",\n    \"django_is_url_active_templatetag\",\n    \"grappelli\",\n    \"django.contrib.admin\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"sslserver\",\n    \"django_is_url_active_templatetag\",\n    \"grappelli\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    \"django.contrib.auth.backends.ModelBackend\",\n    \"nadooit_auth.custom_user_code_auth_backend.UserCodeBackend\",\n]\n# Configure how templates are loaded.\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "STATICFILES_DIRS = [(os.path.join(BASE_DIR, \"static\")), \"/var/www/static/\"]\n# STATIC_URL = \"/static/\"\nSTATIC_URL = \"/static/static/\"\nMEDIA_URL = \"/static/media/\"\nSTATIC_ROOT = \"/vol/web/static/\"\nMEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "STATIC_URL = \"/static/static/\"\nMEDIA_URL = \"/static/media/\"\nSTATIC_ROOT = \"/vol/web/static/\"\nMEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MEDIA_URL = \"/static/media/\"\nSTATIC_ROOT = \"/vol/web/static/\"\nMEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "STATIC_ROOT = \"/vol/web/static/\"\nMEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "ROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django_cockroachdb\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "WSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django_cockroachdb\",\n        \"NAME\": os.environ.get(\"COCKROACH_DB_NAME\"),\n        \"USER\": os.environ.get(\"COCKROACH_DB_USER\"),\n        \"PASSWORD\": os.environ.get(\"COCKROACH_DB_PASSWORD\"),\n        \"HOST\": os.environ.get(\"COCKROACH_DB_HOST\"),",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django_cockroachdb\",\n        \"NAME\": os.environ.get(\"COCKROACH_DB_NAME\"),\n        \"USER\": os.environ.get(\"COCKROACH_DB_USER\"),\n        \"PASSWORD\": os.environ.get(\"COCKROACH_DB_PASSWORD\"),\n        \"HOST\": os.environ.get(\"COCKROACH_DB_HOST\"),\n        \"PORT\": os.environ.get(\"COCKROACH_DB_PORT\"),\n        \"OPTIONS\": {\n            \"sslmode\": \"verify-full\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"nadooit_auth.User\"\n# Password validation\nCSRF_TRUSTED_ORIGINS = [os.environ.get(\"DJANGO_CSRF_TRUSTED_ORIGINS\")]\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = [os.environ.get(\"DJANGO_CSRF_TRUSTED_ORIGINS\")]\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Settings for additional apps",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Settings for additional apps\n# Settings for Django Crispy Forms\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Settings for additional apps\n# Settings for Django Crispy Forms\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_ALLOWED_TEMPLATE_PACKS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = \"bootstrap5\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_SERVICE_WORKER_PATH",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_NAME",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DESCRIPTION",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_THEME_COLOR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_BACKGROUND_COLOR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DISPLAY",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_SCOPE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ORIENTATION",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_START_URL",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_STATUS_BAR_COLOR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"/static/static/splashscreen/nadooit.png\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ICONS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"/static/static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ICONS_APPLE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"/static/static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",\n    }\n]\nPWA_APP_DIR = \"ltr\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_SPLASH_SCREEN",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"/static/static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",\n    }\n]\nPWA_APP_DIR = \"ltr\"\nPWA_APP_LANG = \"de-DE\"\n# MFA settings\nMFA_UNALLOWED_METHODS = (",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DIR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_DIR = \"ltr\"\nPWA_APP_LANG = \"de-DE\"\n# MFA settings\nMFA_UNALLOWED_METHODS = (\n    \"TOTP\",\n    \"Email\",\n    \"U2F\",\n    \"Trusted_Devices\",\n    \"RECOVERY\",\n)  # Methods that shouldn't be allowed for the user",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_LANG",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_LANG = \"de-DE\"\n# MFA settings\nMFA_UNALLOWED_METHODS = (\n    \"TOTP\",\n    \"Email\",\n    \"U2F\",\n    \"Trusted_Devices\",\n    \"RECOVERY\",\n)  # Methods that shouldn't be allowed for the user\nMFA_LOGIN_CALLBACK = \"nadooit_auth.views.log_user_in\"  # A function that should be called by username to login the user in session",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_UNALLOWED_METHODS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_UNALLOWED_METHODS = (\n    \"TOTP\",\n    \"Email\",\n    \"U2F\",\n    \"Trusted_Devices\",\n    \"RECOVERY\",\n)  # Methods that shouldn't be allowed for the user\nMFA_LOGIN_CALLBACK = \"nadooit_auth.views.log_user_in\"  # A function that should be called by username to login the user in session\nMFA_RECHECK = True  # Allow random rechecking of the user\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_LOGIN_CALLBACK",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_LOGIN_CALLBACK = \"nadooit_auth.views.log_user_in\"  # A function that should be called by username to login the user in session\nMFA_RECHECK = True  # Allow random rechecking of the user\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_RECHECK = True  # Allow random rechecking of the user\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK_MIN",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK_MAX",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_QUICKLOGIN",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )\nelse:",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_HIDE_DISABLE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )\nelse:\n    U2F_APPID = \"https://nadooit.de\"  # URL For U2F",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_OWNED_BY_ENTERPRISE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )\nelse:\n    U2F_APPID = \"https://nadooit.de\"  # URL For U2F\n    FIDO_SERVER_ID = \"nadooit.de\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TOKEN_ISSUER_NAME",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "TOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )\nelse:\n    U2F_APPID = \"https://nadooit.de\"  # URL For U2F\n    FIDO_SERVER_ID = \"nadooit.de\"\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "FIDO_SERVER_NAME",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "FIDO_SERVER_NAME = \"nadooit\"\nMFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit_os:nadooit-os\"  # Allows Changing the page after successful registeration\n)\nMFA_SUCCESS_REGISTRATION_MSG = (\n    \"Schlüssel erfolgreich registriert\"  # The text of the link\n)",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_REDIRECT_AFTER_REGISTRATION",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit_os:nadooit-os\"  # Allows Changing the page after successful registeration\n)\nMFA_SUCCESS_REGISTRATION_MSG = (\n    \"Schlüssel erfolgreich registriert\"  # The text of the link\n)",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_SUCCESS_REGISTRATION_MSG",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_SUCCESS_REGISTRATION_MSG = (\n    \"Schlüssel erfolgreich registriert\"  # The text of the link\n)",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "app.nadooit.urls",
        "description": "app.nadooit.urls",
        "peekOfCode": "admin.site.site_header = \"NADOOIT Administration\"  # default: \"Django Administration\"\nadmin.site.index_title = \"NADOOIT Administration Site\"  # default: \"Site administration\"\nadmin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    # These are the urls for the webpage\n    path(\"\", include(\"nadooit_website.urls\")),\n    # These are the urls for the adminbackend\n    path(\"admin/\", admin.site.urls),\n    # These are the urls for the django debug toolbar",
        "detail": "app.nadooit.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "app.nadooit.urls",
        "description": "app.nadooit.urls",
        "peekOfCode": "admin.site.index_title = \"NADOOIT Administration Site\"  # default: \"Site administration\"\nadmin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    # These are the urls for the webpage\n    path(\"\", include(\"nadooit_website.urls\")),\n    # These are the urls for the adminbackend\n    path(\"admin/\", admin.site.urls),\n    # These are the urls for the django debug toolbar\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),",
        "detail": "app.nadooit.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "app.nadooit.urls",
        "description": "app.nadooit.urls",
        "peekOfCode": "admin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    # These are the urls for the webpage\n    path(\"\", include(\"nadooit_website.urls\")),\n    # These are the urls for the adminbackend\n    path(\"admin/\", admin.site.urls),\n    # These are the urls for the django debug toolbar\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),\n    # These are the urls for the grappelli skin for the admin page",
        "detail": "app.nadooit.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit.urls",
        "description": "app.nadooit.urls",
        "peekOfCode": "urlpatterns = [\n    # These are the urls for the webpage\n    path(\"\", include(\"nadooit_website.urls\")),\n    # These are the urls for the adminbackend\n    path(\"admin/\", admin.site.urls),\n    # These are the urls for the django debug toolbar\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),\n    # These are the urls for the grappelli skin for the admin page\n    path(\"grappelli/\", include(\"grappelli.urls\")),\n    # These are the the urls for implementing the pwa for the django app",
        "detail": "app.nadooit.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.nadooit.wsgi",
        "description": "app.nadooit.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "app.nadooit.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0001_initial",
        "description": "app.nadooit_api_executions_system.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"CustomerProgramExecution\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "app.nadooit_api_executions_system.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0002_initial",
        "description": "app.nadooit_api_executions_system.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"nadooit_program_ownership_system\", \"0001_initial\"),\n        (\"nadooit_api_executions_system\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"customerprogramexecution\",\n            name=\"customer_program\",",
        "detail": "app.nadooit_api_executions_system.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0003_customerprogramexecutionmanager",
        "description": "app.nadooit_api_executions_system.migrations.0003_customerprogramexecutionmanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0002_rename_customers_employee_customers_the_employee_works_for'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_api_executions_system', '0002_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomerProgramExecutionManager',\n            fields=[",
        "detail": "app.nadooit_api_executions_system.migrations.0003_customerprogramexecutionmanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0004_rename_employee_customerprogramexecutionmanager_employee",
        "description": "app.nadooit_api_executions_system.migrations.0004_rename_employee_customerprogramexecutionmanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0003_customerprogramexecutionmanager'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogramexecutionmanager',\n            old_name='Employee',\n            new_name='employee',\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0004_rename_employee_customerprogramexecutionmanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0005_customerprogramexecutionmanager_can_give_customerprogramexecutionmanager_role",
        "description": "app.nadooit_api_executions_system.migrations.0005_customerprogramexecutionmanager_can_give_customerprogramexecutionmanager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0004_rename_employee_customerprogramexecutionmanager_employee'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecutionmanager',\n            name='can_give_customerprogramexecutionmanager_role',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0005_customerprogramexecutionmanager_can_give_customerprogramexecutionmanager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th",
        "description": "app.nadooit_api_executions_system.migrations.0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0005_customerprogramexecutionmanager_can_give_customerprogramexecutionmanager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogramexecutionmanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0007_customerprogramexecutionmanager_list_of_employees_the_manager_has_given_the_role_to",
        "description": "app.nadooit_api_executions_system.migrations.0007_customerprogramexecutionmanager_list_of_employees_the_manager_has_given_the_role_to",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more'),\n        ('nadooit_api_executions_system', '0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecutionmanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_customer_program_execution_manager_has_given_the_role_to', to='nadooit_hr.employee'),",
        "detail": "app.nadooit_api_executions_system.migrations.0007_customerprogramexecutionmanager_list_of_employees_the_manager_has_given_the_role_to",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0008_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "description": "app.nadooit_api_executions_system.migrations.0008_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0007_customerprogramexecutionmanager_list_of_employees_the_manager_has_given_the_role_to'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecution',\n            name='price_per_second_in_cent_at_the_time_of_execution',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0008_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0009_rename_can_give_customerprogramexecutionmanager_role_customerprogramexecutionmanager_can_give_manage",
        "description": "app.nadooit_api_executions_system.migrations.0009_rename_can_give_customerprogramexecutionmanager_role_customerprogramexecutionmanager_can_give_manage",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0008_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogramexecutionmanager',\n            old_name='can_give_customerprogramexecutionmanager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0009_rename_can_give_customerprogramexecutionmanager_role_customerprogramexecutionmanager_can_give_manage",
        "documentation": {}
    },
    {
        "label": "NadooitApiExecutionsSystemConfig",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.apps",
        "description": "app.nadooit_api_executions_system.apps",
        "peekOfCode": "class NadooitApiExecutionsSystemConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_api_executions_system'",
        "detail": "app.nadooit_api_executions_system.apps",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.models",
        "description": "app.nadooit_api_executions_system.models",
        "peekOfCode": "class CustomerProgramExecution(models.Model):\n    \"\"\"_summary_\n    model for a single execution of a nadooit program.\n    \"\"\"\n    # id of the execution\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # time saved by the program in seconds\n    program_time_saved_in_seconds = models.IntegerField(default=0)\n    # price at the time of the execution for the program\n    price_per_second_in_cent_at_the_time_of_execution = models.IntegerField(default=0)",
        "detail": "app.nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecutionManager",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.models",
        "description": "app.nadooit_api_executions_system.models",
        "peekOfCode": "class CustomerProgramExecutionManager(models.Model):\n    # The employee that gets the rights\n    employee = models.OneToOneField(\n        Employee, on_delete=models.CASCADE, primary_key=True\n    )\n    # If true the customer can create customer program executions\n    can_create_customer_program_execution = models.BooleanField(default=False)\n    # If true the customer can delete customer program executions\n    can_delete_customer_program_execution = models.BooleanField(default=False)\n    # If true the customer can give the rights to other users",
        "detail": "app.nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "cutomer_program_execution_was_created",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.models",
        "description": "app.nadooit_api_executions_system.models",
        "peekOfCode": "def cutomer_program_execution_was_created(sender, instance, created, *args, **kwargs):\n    \"\"\"\n    a new execution is created, the time saved is charged to the time account of the customer that is assigned to the program.\n    \"\"\"\n    if created:\n        # reduce the customer_programs time_account by the program_time_saved_in_seconds\n        # gets the customer program of the execution\n        nadooit_customer_program = CustomerProgram.objects.get(\n            id=instance.customer_program.id\n        )",
        "detail": "app.nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "customer_program_execution_was_deleted",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.models",
        "description": "app.nadooit_api_executions_system.models",
        "peekOfCode": "def customer_program_execution_was_deleted(sender, instance, *args, **kwargs):\n    \"\"\"\n        Whenever a customer program execution is deleted this signal is triggered.\n    Args:\n        sender (_type_): _description_\n        instance (_type_): _description_\n    \"\"\"\n    # increase the customer_programs time_account by the program_time_saved_in_seconds\n    obj = CustomerProgram.objects.get(id=instance.customer_program.id)\n    obj.time_account.time_balance_in_seconds = (",
        "detail": "app.nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountTestModel",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.tests",
        "description": "app.nadooit_api_executions_system.tests",
        "peekOfCode": "def TimeAccountTestModel():\n    return baker.make(\n        TimeAccount,\n        time_balance_in_seconds=1000,\n    )\ndef test_using_model_bakery(TimeAccountTestModel):\n    assert isinstance(TimeAccountTestModel, TimeAccount)",
        "detail": "app.nadooit_api_executions_system.tests",
        "documentation": {}
    },
    {
        "label": "test_using_model_bakery",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.tests",
        "description": "app.nadooit_api_executions_system.tests",
        "peekOfCode": "def test_using_model_bakery(TimeAccountTestModel):\n    assert isinstance(TimeAccountTestModel, TimeAccount)",
        "detail": "app.nadooit_api_executions_system.tests",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_api_executions_system.urls",
        "description": "app.nadooit_api_executions_system.urls",
        "peekOfCode": "urlpatterns = [\n    # path for the api requests for program executions\n    path('executions', create_execution, name=\"create\"),\n    # path for the api requests for checking if a user is valid or not\n    path('users/check', check_user, name=\"check\"),\n]",
        "detail": "app.nadooit_api_executions_system.urls",
        "documentation": {}
    },
    {
        "label": "get__hashed_api_key__for__request",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.views",
        "description": "app.nadooit_api_executions_system.views",
        "peekOfCode": "def get__hashed_api_key__for__request(request) -> str:\n    \"\"\"\n    gets the hashed api key from the request\n    \"\"\"\n    # gets the api key from the request\n    api_key = request.data.get(\"NADOOIT__API_KEY\")\n    # hashes the api key\n    hashed_api_key = hashlib.sha256(api_key.encode()).hexdigest()\n    return hashed_api_key\ndef get__user_code__for__request(request) -> str:",
        "detail": "app.nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "get__user_code__for__request",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.views",
        "description": "app.nadooit_api_executions_system.views",
        "peekOfCode": "def get__user_code__for__request(request) -> str:\n    \"\"\"\n    gets the user code from the request\n    Returns:\n        _type_: the user code as a string\n    \"\"\"\n    return request.data.get(\"NADOOIT__USER_CODE\")\ndef get__user_code__for__nadooit_api_key(nadooit_api_key) -> str:\n    return nadooit_api_key.user.user_code\n# Create your views here.",
        "detail": "app.nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "get__user_code__for__nadooit_api_key",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.views",
        "description": "app.nadooit_api_executions_system.views",
        "peekOfCode": "def get__user_code__for__nadooit_api_key(nadooit_api_key) -> str:\n    return nadooit_api_key.user.user_code\n# Create your views here.\n# view for creating a new execution\n@api_view([\"POST\"])\ndef create_execution(request):\n    try:\n        # gets the hashed api key from the request\n        hashed_api_key = get__hashed_api_key__for__request(request)\n        try:",
        "detail": "app.nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "create_execution",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.views",
        "description": "app.nadooit_api_executions_system.views",
        "peekOfCode": "def create_execution(request):\n    try:\n        # gets the hashed api key from the request\n        hashed_api_key = get__hashed_api_key__for__request(request)\n        try:\n            # checks if the api key is active\n            nadooit_api_key = NadooitApiKey.objects.get(\n                api_key=hashed_api_key, is_active=True\n            )\n            user_code__for__nadooit_api_key = get__user_code__for__nadooit_api_key(",
        "detail": "app.nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "check_user",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.views",
        "description": "app.nadooit_api_executions_system.views",
        "peekOfCode": "def check_user(request):\n    try:\n        hashed_api_key = get__hashed_api_key__for__request(request)\n        try:\n            found_nadooit_api_key = NadooitApiKey.objects.get(\n                api_key=hashed_api_key, is_active=True\n            )\n            if found_nadooit_api_key.user.user_code == request.data.get(\n                \"NADOOIT__USER_CODE\"\n            ):",
        "detail": "app.nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0001_initial",
        "description": "app.nadooit_api_key.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"NadooitApiKey\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "app.nadooit_api_key.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0002_initial",
        "description": "app.nadooit_api_key.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        (\"nadooit_api_key\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"nadooitapikey\",\n            name=\"user\",",
        "detail": "app.nadooit_api_key.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0003_nadooitapikeymanager",
        "description": "app.nadooit_api_key.migrations.0003_nadooitapikeymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_auth', '0003_delete_keymanager'),\n        ('nadooit_api_key', '0002_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitApiKeyManager',\n            fields=[\n                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),",
        "detail": "app.nadooit_api_key.migrations.0003_nadooitapikeymanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0004_remove_nadooitapikeymanager_can_edit_api_key_and_more",
        "description": "app.nadooit_api_key.migrations.0004_remove_nadooitapikeymanager_can_edit_api_key_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_api_key', '0003_nadooitapikeymanager'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='nadooitapikeymanager',\n            name='can_edit_api_key',\n        ),",
        "detail": "app.nadooit_api_key.migrations.0004_remove_nadooitapikeymanager_can_edit_api_key_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0005_nadooitapikeymanager_employee",
        "description": "app.nadooit_api_key.migrations.0005_nadooitapikeymanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0003_employeemanager'),\n        ('nadooit_api_key', '0004_remove_nadooitapikeymanager_can_edit_api_key_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='nadooitapikeymanager',\n            name='employee',\n            field=models.OneToOneField(default='dced8968-c013-4b0e-9406-bf23b8a7723b', on_delete=django.db.models.deletion.CASCADE, to='nadooit_hr.employee'),",
        "detail": "app.nadooit_api_key.migrations.0005_nadooitapikeymanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0006_remove_nadooitapikeymanager_employee",
        "description": "app.nadooit_api_key.migrations.0006_remove_nadooitapikeymanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0005_nadooitapikeymanager_employee'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='nadooitapikeymanager',\n            name='employee',\n        ),\n    ]",
        "detail": "app.nadooit_api_key.migrations.0006_remove_nadooitapikeymanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0007_delete_nadooitapikeymanager",
        "description": "app.nadooit_api_key.migrations.0007_delete_nadooitapikeymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0006_remove_nadooitapikeymanager_employee'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='NadooitApiKeyManager',\n        ),\n    ]",
        "detail": "app.nadooit_api_key.migrations.0007_delete_nadooitapikeymanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0008_nadooitapikeymanager",
        "description": "app.nadooit_api_key.migrations.0008_nadooitapikeymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0003_employeemanager'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_api_key', '0007_delete_nadooitapikeymanager'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitApiKeyManager',\n            fields=[",
        "detail": "app.nadooit_api_key.migrations.0008_nadooitapikeymanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0009_nadooitapikeymanager_can_give_apikeymanager_role",
        "description": "app.nadooit_api_key.migrations.0009_nadooitapikeymanager_can_give_apikeymanager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0008_nadooitapikeymanager'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='nadooitapikeymanager',\n            name='can_give_ApiKeyManager_role',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_api_key.migrations.0009_nadooitapikeymanager_can_give_apikeymanager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0010_rename_customers_the_manager_is_responsible_for_nadooitapikeymanager_list_of_customers_the_manager_i",
        "description": "app.nadooit_api_key.migrations.0010_rename_customers_the_manager_is_responsible_for_nadooitapikeymanager_list_of_customers_the_manager_i",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0009_nadooitapikeymanager_can_give_apikeymanager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='nadooitapikeymanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',\n        ),",
        "detail": "app.nadooit_api_key.migrations.0010_rename_customers_the_manager_is_responsible_for_nadooitapikeymanager_list_of_customers_the_manager_i",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0011_nadooitapikeymanager_list_of_employees_the_manager_has_given_the_role_to",
        "description": "app.nadooit_api_key.migrations.0011_nadooitapikeymanager_list_of_employees_the_manager_has_given_the_role_to",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n        ('nadooit_api_key', '0010_rename_customers_the_manager_is_responsible_for_nadooitapikeymanager_list_of_customers_the_manager_i'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='nadooitapikeymanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_api_key_manager_has_given_the_role_to', to='nadooit_hr.employee'),",
        "detail": "app.nadooit_api_key.migrations.0011_nadooitapikeymanager_list_of_employees_the_manager_has_given_the_role_to",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0012_rename_can_give_apikeymanager_role_nadooitapikeymanager_can_give_manager_role",
        "description": "app.nadooit_api_key.migrations.0012_rename_can_give_apikeymanager_role_nadooitapikeymanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0011_nadooitapikeymanager_list_of_employees_the_manager_has_given_the_role_to'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='nadooitapikeymanager',\n            old_name='can_give_ApiKeyManager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_api_key.migrations.0012_rename_can_give_apikeymanager_role_nadooitapikeymanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "NadooitApiKeyConfig",
        "kind": 6,
        "importPath": "app.nadooit_api_key.apps",
        "description": "app.nadooit_api_key.apps",
        "peekOfCode": "class NadooitApiKeyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_api_key'",
        "detail": "app.nadooit_api_key.apps",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "kind": 6,
        "importPath": "app.nadooit_api_key.models",
        "description": "app.nadooit_api_key.models",
        "peekOfCode": "class NadooitApiKey(models.Model):\n    # id of the api key\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # the user that owns the api key\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    # api_keys are unique and are stored in the database as a hash of the api key\n    # this is done to prevent the api key from being stored in plain text in the database\n    api_key = models.CharField(\n        max_length=255,\n        unique=True,",
        "detail": "app.nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKeyManager",
        "kind": 6,
        "importPath": "app.nadooit_api_key.models",
        "description": "app.nadooit_api_key.models",
        "peekOfCode": "class NadooitApiKeyManager(models.Model):\n    employee = models.OneToOneField(\n        Employee, on_delete=models.CASCADE, primary_key=True\n    )\n    can_create_api_key = models.BooleanField(default=False)\n    can_delete_api_key = models.BooleanField(default=False)\n    can_give_manager_role = models.BooleanField(default=False)\n    list_of_customers_the_manager_is_responsible_for = models.ManyToManyField(\n        Customer, blank=True\n    )",
        "detail": "app.nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "hash_api_key_when_created",
        "kind": 2,
        "importPath": "app.nadooit_api_key.models",
        "description": "app.nadooit_api_key.models",
        "peekOfCode": "def hash_api_key_when_created(sender, instance, created, *args, **kwargs):\n    if created:\n        # hashes the api_key\n        obj = NadooitApiKey.objects.get(id=instance.id)\n        obj.api_key = hashlib.sha256(str(obj.api_key).encode()).hexdigest()\n        obj.save()\n# A role class that gets added to the user model\n# It is used to determine what the user can do in regards to the Nadooit Api Key\nclass NadooitApiKeyManager(models.Model):\n    employee = models.OneToOneField(",
        "detail": "app.nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_auth.migrations.0001_initial",
        "description": "app.nadooit_auth.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (\"password\", models.CharField(max_length=128, verbose_name=\"password\")),",
        "detail": "app.nadooit_auth.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_auth.migrations.0002_keymanager",
        "description": "app.nadooit_auth.migrations.0002_keymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_auth', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='KeyManager',\n            fields=[\n                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),\n                ('can_create_keys', models.BooleanField(default=False)),",
        "detail": "app.nadooit_auth.migrations.0002_keymanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_auth.migrations.0003_delete_keymanager",
        "description": "app.nadooit_auth.migrations.0003_delete_keymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_auth', '0002_keymanager'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='KeyManager',\n        ),\n    ]",
        "detail": "app.nadooit_auth.migrations.0003_delete_keymanager",
        "documentation": {}
    },
    {
        "label": "AuthConfig",
        "kind": 6,
        "importPath": "app.nadooit_auth.apps",
        "description": "app.nadooit_auth.apps",
        "peekOfCode": "class AuthConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_auth'",
        "detail": "app.nadooit_auth.apps",
        "documentation": {}
    },
    {
        "label": "UserCodeBackend",
        "kind": 6,
        "importPath": "app.nadooit_auth.custom_user_code_auth_backend",
        "description": "app.nadooit_auth.custom_user_code_auth_backend",
        "peekOfCode": "class UserCodeBackend(BaseBackend):\n    def authenticate(self, request, user_code=None):\n        from nadooit_auth.models import User\n        try:\n            user = User.objects.get(user_code=user_code)\n            return user\n        except User.DoesNotExist:\n            return None\n    def get_user(self, user_code):\n        from nadooit_auth.models import User",
        "detail": "app.nadooit_auth.custom_user_code_auth_backend",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "app.nadooit_auth.models",
        "description": "app.nadooit_auth.models",
        "peekOfCode": "class User(AbstractUser, PermissionsMixin):\n    # id is a unique identifier for the user\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # The user code is a unique code that is used to identify the user.\n    # The user code is generated automatically when the user is created.\n    # The user can change the user code in the settings.\n    # The user code is wirrten on the user's security key.\n    user_code = models.CharField(\n        max_length=32,\n        unique=True,",
        "detail": "app.nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "app.nadooit_auth.urls",
        "description": "app.nadooit_auth.urls",
        "peekOfCode": "app_name = \"nadooit_auth\"\nurlpatterns = [\n    # path for login\n    path(\"login-user\", login_user, name=\"login-user\"),\n    # path for logout\n    path(\"logout-user\", logout_user, name=\"logout-user\"),\n    # path for registering a new user\n    path(\"register-user\", register_user, name=\"register-user\"),\n]",
        "detail": "app.nadooit_auth.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_auth.urls",
        "description": "app.nadooit_auth.urls",
        "peekOfCode": "urlpatterns = [\n    # path for login\n    path(\"login-user\", login_user, name=\"login-user\"),\n    # path for logout\n    path(\"logout-user\", logout_user, name=\"logout-user\"),\n    # path for registering a new user\n    path(\"register-user\", register_user, name=\"register-user\"),\n]",
        "detail": "app.nadooit_auth.urls",
        "documentation": {}
    },
    {
        "label": "get__new_username",
        "kind": 2,
        "importPath": "app.nadooit_auth.username",
        "description": "app.nadooit_auth.username",
        "peekOfCode": "def get__new_username() -> str:\n    \"\"\"\n    This function generates a new username for a new user.\t\n    \"\"\"\n    username = \"\".join(\n        random.choice(string.ascii_letters + string.digits) for _ in range(20)\n    )\n    return username",
        "detail": "app.nadooit_auth.username",
        "documentation": {}
    },
    {
        "label": "get__new_user_code",
        "kind": 2,
        "importPath": "app.nadooit_auth.user_code",
        "description": "app.nadooit_auth.user_code",
        "peekOfCode": "def get__new_user_code() -> str:\n    \"\"\"\n    Generates a new user code.\n    \"\"\"\n    user_code = \"\".join(\n        random.choice(string.ascii_letters + string.digits) for _ in range(6)\n    )\n    return user_code\ndef check__valid_user_code(user_code: str) -> bool:\n    \"\"\"\t",
        "detail": "app.nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "check__valid_user_code",
        "kind": 2,
        "importPath": "app.nadooit_auth.user_code",
        "description": "app.nadooit_auth.user_code",
        "peekOfCode": "def check__valid_user_code(user_code: str) -> bool:\n    \"\"\"\t\n    Checks if a user code is valid.\t\n    \"\"\"\n    # A user code is valid if it is a string of 6 characters.\n    if len(user_code) > 6:\n        return False\n    if len(user_code) < 6:\n        return False\n    # A user code is valid if it contains only letters and digits.",
        "detail": "app.nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "user_is_KeyManager_that_can_create_new_keys",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def user_is_KeyManager_that_can_create_new_keys(user):\n    if hasattr(user.employee, \"keymanager\"):\n        return user.employee.keymanager.can_create_keys\n    return False\ndef log_user_in(request, username):\n    user = User.objects.get(username=username)\n    user.backend = \"django.contrib.auth.backends.ModelBackend\"\n    # loging in the user\n    login(request, user)\n    # request.POST containing redirect might be wrong here and should be request.GET \"next\" instead. Test this.",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "log_user_in",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def log_user_in(request, username):\n    user = User.objects.get(username=username)\n    user.backend = \"django.contrib.auth.backends.ModelBackend\"\n    # loging in the user\n    login(request, user)\n    # request.POST containing redirect might be wrong here and should be request.GET \"next\" instead. Test this.\n    if \"redirect\" in request.POST:\n        return redirect(request.POST[\"redirect\"])\n    else:\n        return redirect(reverse(\"nadooit_os:nadooit-os\"))",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "login_user",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def login_user(request):\n    if request.method == \"POST\":\n        user_code = request.POST[\"user_code\"]\n        user = authenticate(request, user_code=user_code)\n        print(\"user: \", user)\n        err = \"\"\n        if user is not None:\n            print(\"found user\")\n            if user.is_active:  # if the user object exist\n                if \"mfa\" in settings.INSTALLED_APPS and settings.DEBUG == False:",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def logout_user(request):\n    logout(request)\n    messages.success(request, \"You habe successfully logged out\")\n    return redirect(\"/auth/login-user\")\n@login_required(login_url=\"/auth/login-user\")\n@user_passes_test(\n    user_is_KeyManager_that_can_create_new_keys,\n    redirect_field_name=None,\n    login_url=\"/auth/login-user\",\n)",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "register_user",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def register_user(request):\n    if request.method == \"POST\":\n        error = \"\"\n        user_code = request.POST.get(\"user_code\").replace(\"/\", \"\")\n        display_name = request.POST.get(\"display_name\")\n        if not check__valid_user_code(user_code):\n            error = \"Invalid user_code\"\n            return render(\n                request,\n                \"nadooit_auth/register.html\",",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_crm.migrations.0001_initial",
        "description": "app.nadooit_crm.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Address\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "app.nadooit_crm.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomerAdmin",
        "kind": 6,
        "importPath": "app.nadooit_crm.admin",
        "description": "app.nadooit_crm.admin",
        "peekOfCode": "class CustomerAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Customer._meta.fields]\nclass AddressAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Address._meta.fields]\n# Register your models here.\nadmin.site.register(Customer, CustomerAdmin)\nadmin.site.register(Address, AddressAdmin)\nadmin.site.register(ShippingAdress)\nadmin.site.register(BillingAdress)",
        "detail": "app.nadooit_crm.admin",
        "documentation": {}
    },
    {
        "label": "AddressAdmin",
        "kind": 6,
        "importPath": "app.nadooit_crm.admin",
        "description": "app.nadooit_crm.admin",
        "peekOfCode": "class AddressAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Address._meta.fields]\n# Register your models here.\nadmin.site.register(Customer, CustomerAdmin)\nadmin.site.register(Address, AddressAdmin)\nadmin.site.register(ShippingAdress)\nadmin.site.register(BillingAdress)",
        "detail": "app.nadooit_crm.admin",
        "documentation": {}
    },
    {
        "label": "NadooitCrmConfig",
        "kind": 6,
        "importPath": "app.nadooit_crm.apps",
        "description": "app.nadooit_crm.apps",
        "peekOfCode": "class NadooitCrmConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_crm'",
        "detail": "app.nadooit_crm.apps",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "app.nadooit_crm.models",
        "description": "app.nadooit_crm.models",
        "peekOfCode": "class Address(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    street = models.CharField(max_length=255, null=True, blank=True)\n    house_number = models.CharField(max_length=255, null=True, blank=True)\n    town = models.CharField(max_length=255, null=True, blank=True)\n    postal_code = models.CharField(max_length=255, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return (",
        "detail": "app.nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "ShippingAdress",
        "kind": 6,
        "importPath": "app.nadooit_crm.models",
        "description": "app.nadooit_crm.models",
        "peekOfCode": "class ShippingAdress(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    adress = models.ForeignKey(Address, on_delete=models.SET_NULL, null=True)\n    addressed_to = models.CharField(max_length=255, null=True, blank=True)\n    def __str__(self):\n        return (\n            self.addressed_to\n            + \", \"\n            + self.adress.street\n            + \" \"",
        "detail": "app.nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "BillingAdress",
        "kind": 6,
        "importPath": "app.nadooit_crm.models",
        "description": "app.nadooit_crm.models",
        "peekOfCode": "class BillingAdress(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    adress = models.ForeignKey(Address, on_delete=models.SET_NULL, null=True)\n    addressed_to = models.CharField(max_length=255, null=True, blank=True)\n    def __str__(self):\n        return (\n            self.addressed_to\n            + \", \"\n            + self.adress.street\n            + \" \"",
        "detail": "app.nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "app.nadooit_crm.models",
        "description": "app.nadooit_crm.models",
        "peekOfCode": "class Customer(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    shipping_address = models.ForeignKey(\n        ShippingAdress, on_delete=models.SET_NULL, null=True\n    )\n    billing_address = models.ForeignKey(\n        BillingAdress, on_delete=models.SET_NULL, null=True",
        "detail": "app.nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "NadooitDeliveryConfig",
        "kind": 6,
        "importPath": "app.nadooit_delivery.apps",
        "description": "app.nadooit_delivery.apps",
        "peekOfCode": "class NadooitDeliveryConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"nadooit_delivery\"",
        "detail": "app.nadooit_delivery.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "app.nadooit_delivery.models",
        "description": "app.nadooit_delivery.models",
        "peekOfCode": "class Order(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.customer.name + ' ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')\nclass OrderItem(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    order = models.ForeignKey(Order, on_delete=models.CASCADE)",
        "detail": "app.nadooit_delivery.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "app.nadooit_delivery.models",
        "description": "app.nadooit_delivery.models",
        "peekOfCode": "class OrderItem(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    order = models.ForeignKey(Order, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.product.name + ' ' + self.quantity.__str__()",
        "detail": "app.nadooit_delivery.models",
        "documentation": {}
    },
    {
        "label": "NadooitFunnelConfig",
        "kind": 6,
        "importPath": "app.nadooit_funnel.apps",
        "description": "app.nadooit_funnel.apps",
        "peekOfCode": "class NadooitFunnelConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_funnel'",
        "detail": "app.nadooit_funnel.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0001_initial",
        "description": "app.nadooit_hr.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        (\"nadooit_crm\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Employee\",\n            fields=[",
        "detail": "app.nadooit_hr.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0002_rename_customers_employee_customers_the_employee_works_for",
        "description": "app.nadooit_hr.migrations.0002_rename_customers_employee_customers_the_employee_works_for",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='employee',\n            old_name='customers',\n            new_name='customers_the_employee_works_for',\n        ),",
        "detail": "app.nadooit_hr.migrations.0002_rename_customers_employee_customers_the_employee_works_for",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0003_employeemanager",
        "description": "app.nadooit_hr.migrations.0003_employeemanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_hr', '0002_rename_customers_employee_customers_the_employee_works_for'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='EmployeeManager',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "app.nadooit_hr.migrations.0003_employeemanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res",
        "description": "app.nadooit_hr.migrations.0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_hr', '0003_employeemanager'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='employeemanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',",
        "detail": "app.nadooit_hr.migrations.0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more",
        "description": "app.nadooit_hr.migrations.0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customermanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_customer_manager_has_given_the_role_to', to='nadooit_hr.employee'),\n        ),",
        "detail": "app.nadooit_hr.migrations.0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0006_customermanager_can_give_customermanager_role_and_more",
        "description": "app.nadooit_hr.migrations.0006_customermanager_can_give_customermanager_role_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customermanager',\n            name='can_give_CustomerManager_role',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_hr.migrations.0006_customermanager_can_give_customermanager_role_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0007_employeecontract",
        "description": "app.nadooit_hr.migrations.0007_employeecontract",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_hr', '0006_customermanager_can_give_customermanager_role_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='EmployeeContract',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "app.nadooit_hr.migrations.0007_employeecontract",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0008_employee_created_at_employee_updated_at",
        "description": "app.nadooit_hr.migrations.0008_employee_created_at_employee_updated_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0007_employeecontract'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employee',\n            name='created_at',\n            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),\n            preserve_default=False,",
        "detail": "app.nadooit_hr.migrations.0008_employee_created_at_employee_updated_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0009_remove_employee_customers_the_employee_works_for",
        "description": "app.nadooit_hr.migrations.0009_remove_employee_customers_the_employee_works_for",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0008_employee_created_at_employee_updated_at'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='employee',\n            name='customers_the_employee_works_for',\n        ),\n    ]",
        "detail": "app.nadooit_hr.migrations.0009_remove_employee_customers_the_employee_works_for",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0010_employeecontract_is_active_and_more",
        "description": "app.nadooit_hr.migrations.0010_employeecontract_is_active_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0009_remove_employee_customers_the_employee_works_for'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employeecontract',\n            name='is_active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "app.nadooit_hr.migrations.0010_employeecontract_is_active_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0011_employeecontract_deactivation_date",
        "description": "app.nadooit_hr.migrations.0011_employeecontract_deactivation_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0010_employeecontract_is_active_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employeecontract',\n            name='deactivation_date',\n            field=models.DateField(blank=True, null=True),\n        ),",
        "detail": "app.nadooit_hr.migrations.0011_employeecontract_deactivation_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0012_employeemanager_can_delete_employee",
        "description": "app.nadooit_hr.migrations.0012_employeemanager_can_delete_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0011_employeecontract_deactivation_date'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employeemanager',\n            name='can_delete_employee',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_hr.migrations.0012_employeemanager_can_delete_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0013_rename_can_give_employeemanager_role_employeemanager_can_give_manager_role",
        "description": "app.nadooit_hr.migrations.0013_rename_can_give_employeemanager_role_employeemanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0012_employeemanager_can_delete_employee'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='employeemanager',\n            old_name='can_give_EmployeeManager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_hr.migrations.0013_rename_can_give_employeemanager_role_employeemanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0014_rename_can_give_customermanager_role_customermanager_can_give_manager_role",
        "description": "app.nadooit_hr.migrations.0014_rename_can_give_customermanager_role_customermanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0013_rename_can_give_employeemanager_role_employeemanager_can_give_manager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customermanager',\n            old_name='can_give_CustomerManager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_hr.migrations.0014_rename_can_give_customermanager_role_customermanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0015_rename_can_add_new_employees_employeemanager_can_add_new_employee",
        "description": "app.nadooit_hr.migrations.0015_rename_can_add_new_employees_employeemanager_can_add_new_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0014_rename_can_give_customermanager_role_customermanager_can_give_manager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='employeemanager',\n            old_name='can_add_new_employees',\n            new_name='can_add_new_employee',\n        ),",
        "detail": "app.nadooit_hr.migrations.0015_rename_can_add_new_employees_employeemanager_can_add_new_employee",
        "documentation": {}
    },
    {
        "label": "NadooitHrConfig",
        "kind": 6,
        "importPath": "app.nadooit_hr.apps",
        "description": "app.nadooit_hr.apps",
        "peekOfCode": "class NadooitHrConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_hr'",
        "detail": "app.nadooit_hr.apps",
        "documentation": {}
    },
    {
        "label": "Employee",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class Employee(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    # a customers field that shows what customers the employee is assigned to\n    # customers_the_employee_works_for = models.ManyToManyField(Customer)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        display_name = self.user.display_name\n        if display_name is not None:",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeContract",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class EmployeeContract(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # the employee that is assigned to the customer\n    employee = models.ForeignKey(Employee, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    # the start date of the contract\n    start_date = models.DateField(auto_now_add=True)\n    # the end date of the contract\n    end_date = models.DateField(null=True, blank=True)\n    # if false the contract is not active and hidden from the frontend",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeManager",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class EmployeeManager(models.Model):\n    # the employee that gets the manager role\n    employee = models.OneToOneField(Employee, on_delete=models.CASCADE)\n    # A list of all the customers the employee manager is assigned to\n    list_of_customers_the_manager_is_responsible_for = models.ManyToManyField(\n        Customer, blank=True\n    )\n    # A list of all the epmloyees that are managed by this manager\n    list_of_employees_the_manager_has_given_the_role_to = models.ManyToManyField(\n        Employee,",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerManager",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class CustomerManager(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    employee = models.ForeignKey(Employee, on_delete=models.SET_NULL, null=True)\n    can_give_manager_role = models.BooleanField(default=False)\n    list_of_customers_the_manager_is_responsible_for = models.ManyToManyField(\n        Customer, blank=True\n    )\n    list_of_employees_the_manager_has_given_the_role_to = models.ManyToManyField(\n        Employee,\n        blank=True,",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_key.migrations.0001_initial",
        "description": "app.nadooit_key.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='KeyManager',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "app.nadooit_key.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_key.migrations.0002_keymanager_key_managers_assigened_by_this_key_manager",
        "description": "app.nadooit_key.migrations.0002_keymanager_key_managers_assigened_by_this_key_manager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_key', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='keymanager',\n            name='key_managers_assigened_by_this_key_manager',\n            field=models.ManyToManyField(blank=True, to='nadooit_key.keymanager'),\n        ),",
        "detail": "app.nadooit_key.migrations.0002_keymanager_key_managers_assigened_by_this_key_manager",
        "documentation": {}
    },
    {
        "label": "NadooitKeyConfig",
        "kind": 6,
        "importPath": "app.nadooit_key.apps",
        "description": "app.nadooit_key.apps",
        "peekOfCode": "class NadooitKeyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_key'",
        "detail": "app.nadooit_key.apps",
        "documentation": {}
    },
    {
        "label": "KeyManager",
        "kind": 6,
        "importPath": "app.nadooit_key.models",
        "description": "app.nadooit_key.models",
        "peekOfCode": "class KeyManager(models.Model):\n    user = models.OneToOneField(Employee, on_delete=models.CASCADE)\n    can_create_keys = models.BooleanField(default=False)\n    can_delete_keys = models.BooleanField(default=False)\n    can_update_keys = models.BooleanField(default=False)\n    can_create_key_managers = models.BooleanField(default=False)\n    can_delete_key_managers = models.BooleanField(default=False)\n    can_update_key_managers = models.BooleanField(default=False)\n    key_managers_assigened_by_this_key_manager = models.ManyToManyField(\"self\", blank=True)\n    def __str__(self):",
        "detail": "app.nadooit_key.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_network.migrations.0001_initial",
        "description": "app.nadooit_network.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        (\"nadooit_program_ownership_system\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"NadooitInventory\",\n            fields=[",
        "detail": "app.nadooit_network.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkConfig",
        "kind": 6,
        "importPath": "app.nadooit_network.apps",
        "description": "app.nadooit_network.apps",
        "peekOfCode": "class NadooitNetworkConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_network'",
        "detail": "app.nadooit_network.apps",
        "documentation": {}
    },
    {
        "label": "NadooitInventory",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitInventory(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # Holds the amount of money in the inventory\n    money = models.IntegerField(default=0)\n    # Holds shares of programs\n    list_of_nadooit_program_ownership_shares = models.ManyToManyField(\n        ProgramShare, blank=True\n    )\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkMember",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitNetworkMember(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    inventory = models.ForeignKey(NadooitInventory, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.user.display_name + \" \" + self.user.user_code\nclass NadooitNetworkFriendslist(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(NadooitNetworkMember, on_delete=models.CASCADE)\n    friend_list = models.ManyToManyField(",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkFriendslist",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitNetworkFriendslist(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(NadooitNetworkMember, on_delete=models.CASCADE)\n    friend_list = models.ManyToManyField(\n        NadooitNetworkMember, related_name=\"friend_list\"\n    )\n    def __str__(self):\n        return (\n            self.user.user.display_name\n            + \" \"",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkGroup",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitNetworkGroup(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # the group is made up of members. There is a limit of 10 members in a group.\n    members = models.ManyToManyField(NadooitNetworkMember, blank=True)\n    created_by = models.ForeignKey(\n        NadooitNetworkMember, on_delete=models.CASCADE, related_name=\"created_by\"\n    )\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self) -> str:",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkGuildMember",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitNetworkGuildMember(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    nadooit_network_member = models.ForeignKey(\n        NadooitNetworkMember, on_delete=models.CASCADE\n    )\n    GUILD_ROLES = (\n        (\"MEMBER\", \"MEMBER\"),\n        (\"MODERATOR\", \"MODERATOR\"),\n        (\"ADMIN\", \"ADMIN\"),\n    )",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitGuildBank",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitGuildBank(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    guild_inventory = models.ForeignKey(NadooitInventory, on_delete=models.CASCADE)\n    # the amount of money the user has in the guild bank.\nclass NadooitGuild(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitGuild",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitGuild(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    # Every guild has a members of type NadooitNetworkMember. Every NadooitNetworkMember can be a member of one guild.\n    member_list = models.ManyToManyField(NadooitNetworkGuildMember, blank=True)\n    guild_logo = models.ImageField(upload_to=\"guild_logo\", blank=True, null=True)\n    def __str__(self):",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitOsConfig",
        "kind": 6,
        "importPath": "app.nadooit_os.apps",
        "description": "app.nadooit_os.apps",
        "peekOfCode": "class NadooitOsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_os'",
        "detail": "app.nadooit_os.apps",
        "documentation": {}
    },
    {
        "label": "UserCodeModelChoiceField",
        "kind": 6,
        "importPath": "app.nadooit_os.forms",
        "description": "app.nadooit_os.forms",
        "peekOfCode": "class UserCodeModelChoiceField(ModelChoiceField):\n    def label_from_instance(self, obj):\n        return obj.user_code\nclass ApiKeyForm(forms.Form):\n    user_code = UserCodeModelChoiceField(\n        queryset=User.objects.all(),\n        to_field_name=\"user_code\",\n        required=True,\n        label=\"Schlüssel User code eingeben:\",\n        widget=forms.Select(",
        "detail": "app.nadooit_os.forms",
        "documentation": {}
    },
    {
        "label": "ApiKeyForm",
        "kind": 6,
        "importPath": "app.nadooit_os.forms",
        "description": "app.nadooit_os.forms",
        "peekOfCode": "class ApiKeyForm(forms.Form):\n    user_code = UserCodeModelChoiceField(\n        queryset=User.objects.all(),\n        to_field_name=\"user_code\",\n        required=True,\n        label=\"Schlüssel User code eingeben:\",\n        widget=forms.Select(\n            attrs={\n                \"class\": \"form-control\",\n                \"style\": \"width: 150px;\",",
        "detail": "app.nadooit_os.forms",
        "documentation": {}
    },
    {
        "label": "ApiKeyManagerForm",
        "kind": 6,
        "importPath": "app.nadooit_os.forms",
        "description": "app.nadooit_os.forms",
        "peekOfCode": "class ApiKeyManagerForm(forms.Form):\n    # Text input for user code not choice field\n    user_code = forms.CharField(\n        required=True,\n        label=\"Schlüssel User code eingeben:\",\n        widget=forms.TextInput(\n            attrs={\n                \"class\": \"form-control\",\n                \"style\": \"width: 150px;\",\n                \"class\": \"form-control\",",
        "detail": "app.nadooit_os.forms",
        "documentation": {}
    },
    {
        "label": "CustomerTimeAccountManagerForm",
        "kind": 6,
        "importPath": "app.nadooit_os.forms",
        "description": "app.nadooit_os.forms",
        "peekOfCode": "class CustomerTimeAccountManagerForm(forms.Form):\n    # Text input for user code not choice field\n    user_code = forms.CharField(\n        required=True,\n        label=\"Schlüssel User code eingeben:\",\n        widget=forms.TextInput(\n            attrs={\n                \"class\": \"form-control\",\n                \"style\": \"width: 150px;\",\n                \"class\": \"form-control\",",
        "detail": "app.nadooit_os.forms",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "app.nadooit_os.urls",
        "description": "app.nadooit_os.urls",
        "peekOfCode": "app_name = \"nadooit_os\"\nurlpatterns = [\n    path(\"\", index_nadooit_os, name=\"nadooit-os\"),\n    path(\n        \"customer-time-account-overview\",\n        customer_time_account_overview,\n        name=\"customer-time-account-overview\",\n    ),\n    path(\n        \"customer-program-execution/customer-order-overview\",",
        "detail": "app.nadooit_os.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_os.urls",
        "description": "app.nadooit_os.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", index_nadooit_os, name=\"nadooit-os\"),\n    path(\n        \"customer-time-account-overview\",\n        customer_time_account_overview,\n        name=\"customer-time-account-overview\",\n    ),\n    path(\n        \"customer-program-execution/customer-order-overview\",\n        customer_program_execution_overview,",
        "detail": "app.nadooit_os.urls",
        "documentation": {}
    },
    {
        "label": "user_is_Time_Account_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Time_Account_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"timeaccountmanager\"):\n        return True\n    return False\ndef user_is_Time_Account_Manager_and_can_give_manager_role(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"timeaccountmanager\"):\n        if user.employee.timeaccountmanager.can_give_manager_role:\n            return True",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Time_Account_Manager_and_can_give_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Time_Account_Manager_and_can_give_manager_role(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"timeaccountmanager\"):\n        if user.employee.timeaccountmanager.can_give_manager_role:\n            return True\n    return False\n# Tests for Api Key Manager\ndef user_is_Api_Key_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"nadooitapikeymanager\"):",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Api_Key_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Api_Key_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"nadooitapikeymanager\"):\n        return True\n    return False\ndef user_is_Api_Key_Manager_and_can_give_manager_role(user: User) -> bool:\n    if hasattr(user.employee, \"nadooitapikeymanager\"):\n        if user.employee.nadooitapikeymanager.can_give_manager_role:\n            return True\n    return False\n# Tests for Customer Program Execution Manager",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Api_Key_Manager_and_can_give_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Api_Key_Manager_and_can_give_manager_role(user: User) -> bool:\n    if hasattr(user.employee, \"nadooitapikeymanager\"):\n        if user.employee.nadooitapikeymanager.can_give_manager_role:\n            return True\n    return False\n# Tests for Customer Program Execution Manager\ndef user_is_Customer_Program_Execution_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"customerprogramexecutionmanager\"):\n        return True\n    return False",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Customer_Program_Execution_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Customer_Program_Execution_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"customerprogramexecutionmanager\"):\n        return True\n    return False\ndef user_is_Customer_Program_Execution_Manager_and_can_give_Customer_Program_Execution_Manager_role(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"customerprogramexecutionmanager\"):\n        if user.employee.customerprogramexecutionmanager.can_give_manager_role:\n            return True",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Customer_Program_Execution_Manager_and_can_give_Customer_Program_Execution_Manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Customer_Program_Execution_Manager_and_can_give_Customer_Program_Execution_Manager_role(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"customerprogramexecutionmanager\"):\n        if user.employee.customerprogramexecutionmanager.can_give_manager_role:\n            return True\n    return False\n# Tests for Customer Program Manager\ndef user_is_Customer_Program_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"customerprogrammanager\"):",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Customer_Program_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Customer_Program_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"customerprogrammanager\"):\n        return True\n    return False\ndef user_is_Customer_Program_Manager_and_can_give_Customer_Program_Manager_role(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"customerprogrammanager\"):\n        if user.employee.customerprogrammanager.can_give_manager_role:\n            return True",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Customer_Program_Manager_and_can_give_Customer_Program_Manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Customer_Program_Manager_and_can_give_Customer_Program_Manager_role(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"customerprogrammanager\"):\n        if user.employee.customerprogrammanager.can_give_manager_role:\n            return True\n    return False\n# Tests for Employee Manager\ndef user_is_Employee_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"employeemanager\"):",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Employee_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Employee_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"employeemanager\"):\n        return True\n    return False\ndef user_is_Employee_Manager_and_can_give_Employee_Manager_role(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"employeemanager\"):\n        if user.employee.employeemanager.can_give_manager_role:\n            return True",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Employee_Manager_and_can_give_Employee_Manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Employee_Manager_and_can_give_Employee_Manager_role(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"employeemanager\"):\n        if user.employee.employeemanager.can_give_manager_role:\n            return True\n    return False\ndef user_is_Employee_Manager_and_can_can_add_new_employee(\n    user: User,\n) -> bool:",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Employee_Manager_and_can_can_add_new_employee",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Employee_Manager_and_can_can_add_new_employee(\n    user: User,\n) -> bool:\n    if hasattr(user.employee, \"employeemanager\"):\n        if user.employee.employeemanager.can_add_new_employee:\n            return True\n    return False\n# Getting the user roles\n# If new roles are added, they need to be added here\n# this function uses the user_is_... functions above",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "get__user__roles_and_rights",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def get__user__roles_and_rights(request: HttpRequest) -> dict:\n    return {\n        \"is_time_account_manager\": user_is_Time_Account_Manager(request.user),\n        \"user_is_Time_Account_Manager_and_can_give_manager_role\": user_is_Time_Account_Manager_and_can_give_manager_role(\n            request.user\n        ),\n        \"is_api_key_manager\": user_is_Api_Key_Manager(request.user),\n        \"user_is_api_key_manager_and_can_give_manager_role\": user_is_Api_Key_Manager_and_can_give_manager_role(\n            request.user\n        ),",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "index_nadooit_os",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def index_nadooit_os(request: HttpRequest):\n    return render(\n        request,\n        \"nadooit_os/index.html\",\n        # context as dict\n        # first item is page_title\n        # dict from get__user__roles_and_rights is added\n        {\n            \"page_title\": \"Nadooit OS\",\n            **get__user__roles_and_rights(request),",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_time_account_overview",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_time_account_overview(request: HttpRequest):\n    time_accounts_the_user_is_responsible_for = list(\n        TimeAccountManager.objects.get(\n            employee=Employee.objects.get(user=request.user)\n        ).time_accounts.all()\n    )\n    list_of_customer_time_accounts = []\n    for time_account in time_accounts_the_user_is_responsible_for:\n        # get the customertimeaccount for the time account\n        customer_time_account = CustomerTimeAccount.objects.get(",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "create_api_key",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def create_api_key(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        form = ApiKeyForm(request.POST)\n        if form.is_valid():\n            new_api_key = NadooitApiKey(\n                api_key=form.cleaned_data[\"api_key\"],\n                user=form.cleaned_data[\"user_code\"],\n                is_active=form.cleaned_data[\"is_active\"],\n            )",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "revoke_api_key",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def revoke_api_key(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        # get list of all api keys that are active for the user and set them to inactive\n        api_keys = NadooitApiKey.objects.filter(user=request.user, is_active=True)\n        for api_key in api_keys:\n            api_key.is_active = False\n            api_key.save()\n        return HttpResponseRedirect(\"/nadooit-os/api_key/revoke-api-key?submitted=True\")\n    else:",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_api_key_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_api_key_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        form = ApiKeyManagerForm(\n            request.POST,\n        )\n        if form.is_valid():\n            user_code = form.cleaned_data[\"user_code\"]\n            # get the employee object for the user\n            employee = Employee.objects.get(user__user_code=user_code)",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_customer_time_account_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_customer_time_account_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        form = CustomerTimeAccountManagerForm(\n            request.POST,\n        )\n        if form.is_valid():\n            user_code = form.cleaned_data[\"user_code\"]\n            # get the employee object for the user\n            employee = Employee.objects.get(user__user_code=user_code)",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_program_execution_overview",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_program_execution_overview(request: HttpRequest):\n    # All orders for the current customer\n    # orders are the executions of customerprograms\n    # the employee is the logged in user\n    employee = Employee.objects.get(user=request.user)\n    # the list of customers that the time accounts that the employee is responsible for belong to\n    # the list has for its first element the customer that the employee is responsible for\n    # the list has for its second element the ccustomer programm execution for the customer that the employee is responsible for\n    customers_the_employee_is_responsible_for_and_the_customer_programm_executions = []\n    for (",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_customer_program_execution_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_customer_program_execution_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        # check that user_code is not empty\n        if User.objects.filter(user_code=user_code).exists():\n            # check if there is an emplyee for that user code\n            if Employee.objects.filter(user__user_code=user_code).exists():\n                # get the employee object for the user\n                employee = Employee.objects.get(user__user_code=user_code)",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_program_overview",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_program_overview(request: HttpRequest):\n    # All orders for the current customer\n    # orders are the executions of customerprograms\n    # the employee is the logged in user\n    employee = Employee.objects.get(user=request.user)\n    # the list of customers that the time accounts that the employee is responsible for belong to\n    # the list has for its first element the customer that the employee is responsible for\n    # the list has for its second element the ccustomer programm execution for the customer that the employee is responsible for\n    customers_the_user_is_responsible_for_and_the_customer_programms = []\n    for (",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_customer_program_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_customer_program_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        # check that user_code is not empty\n        if User.objects.filter(user_code=user_code).exists():\n            # check if there is an emplyee for that user code\n            if Employee.objects.filter(user__user_code=user_code).exists():\n                # get the employee object for the user\n                employee = Employee.objects.get(user__user_code=user_code)",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "employee_overview",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def employee_overview(request: HttpRequest):\n    # This page displays all the employees that the logged in user is responsible for\n    # The user can be the employee manager of multiple companies\n    # Each company has multiple employees\n    # The page displays all the employees of all the companies the user is responsible for as a lists\n    # Each list is a company and the employees are the employees of that company\n    customers_the_user_is_responsible_for_and_the_customers_employees = []\n    # get all the customers the user is responsible for\n    employee = Employee.objects.get(user=request.user)\n    # get all the customers the user is responsible for",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "employee_profile",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def employee_profile(request: HttpRequest, employee_id: int):\n    #TODO This is not doen yet and can and should not be used\n    # get the employee object\n    employee = Employee.objects.get(id=employee_id)\n    # A list of all the customers the user is responsible for so that in the profile the user only sees the infroation of the employee that is also part of the customers the user is responsible for\n    customers_the_user_is_responsible_for = (request.user.employee.employeemanager.list_of_customers_the_manager_is_responsible_for.all())\n    # get the employee contracts of the employee that are part of the customers the user is responsible for\n    employee_contracts_of_customers_the_user_is_responsible_for = EmployeeContract.objects.filter(employee=employee, customer__in=customers_the_user_is_responsible_for)\t\n    return render(\t\n        request,\t\t",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "add_employee",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def add_employee(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        # check that user_code is not empty\n        if User.objects.filter(user_code=user_code).exists():\n            # check if there is an emplyee for that user code\n            if not Employee.objects.filter(user__user_code=user_code).exists():\n                # create new employee for the user_code\n                Employee.objects.create(user=User.objects.get(user_code=user_code))",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_employee_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_employee_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        # check that user_code is not empty\n        if User.objects.filter(user_code=user_code).exists():\n            # check if there is an emplyee for that user code\n            if not Employee.objects.filter(user__user_code=user_code).exists():\n                # create new employee for the user_code\n                Employee.objects.create(user=User.objects.get(user_code=user_code))",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program.migrations.0001_initial",
        "description": "app.nadooit_program.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"NadooitProgram\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "app.nadooit_program.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program.migrations.0002_rename_nadooitprogram_program",
        "description": "app.nadooit_program.migrations.0002_rename_nadooitprogram_program",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0010_rename_nadooitprogramshare_programshare'),\n        ('nadooit_workflow', '0001_initial'),\n        ('nadooit_program', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='NadooitProgram',\n            new_name='Program',",
        "detail": "app.nadooit_program.migrations.0002_rename_nadooitprogram_program",
        "documentation": {}
    },
    {
        "label": "NadooitProgramConfig",
        "kind": 6,
        "importPath": "app.nadooit_program.apps",
        "description": "app.nadooit_program.apps",
        "peekOfCode": "class NadooitProgramConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_program'",
        "detail": "app.nadooit_program.apps",
        "documentation": {}
    },
    {
        "label": "Program",
        "kind": 6,
        "importPath": "app.nadooit_program.models",
        "description": "app.nadooit_program.models",
        "peekOfCode": "class Program(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    # program_dependencies is a list of programs that this program depends on. They are represented as a list of strings. The list is empty if there are no dependencies.\n    program_dependencies = models.TextField(\n        default=\"\", blank=True, null=True, editable=True\n    )",
        "detail": "app.nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0001_initial",
        "description": "app.nadooit_program_ownership_system.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"nadooit_time_account\", \"0001_initial\"),\n        (\"nadooit_crm\", \"0001_initial\"),\n        (\"nadooit_program\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"NadooitProgramShare\",",
        "detail": "app.nadooit_program_ownership_system.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0002_nadooitcustomerprogrammanager",
        "description": "app.nadooit_program_ownership_system.migrations.0002_nadooitcustomerprogrammanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0002_rename_customers_employee_customers_the_employee_works_for'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_program_ownership_system', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitCustomerProgramManager',\n            fields=[",
        "detail": "app.nadooit_program_ownership_system.migrations.0002_nadooitcustomerprogrammanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0003_rename_employee_nadooitcustomerprogrammanager_employee",
        "description": "app.nadooit_program_ownership_system.migrations.0003_rename_employee_nadooitcustomerprogrammanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0002_nadooitcustomerprogrammanager'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='nadooitcustomerprogrammanager',\n            old_name='Employee',\n            new_name='employee',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0003_rename_employee_nadooitcustomerprogrammanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0004_rename_customers_the_manager_is_responsible_for_nadooitcustomerprogrammanager_list_of_customers_the_",
        "description": "app.nadooit_program_ownership_system.migrations.0004_rename_customers_the_manager_is_responsible_for_nadooitcustomerprogrammanager_list_of_customers_the_",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0003_rename_employee_nadooitcustomerprogrammanager_employee'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='nadooitcustomerprogrammanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0004_rename_customers_the_manager_is_responsible_for_nadooitcustomerprogrammanager_list_of_customers_the_",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0005_rename_nadooitcustomerprogram_customerprogram_and_more",
        "description": "app.nadooit_program_ownership_system.migrations.0005_rename_nadooitcustomerprogram_customerprogram_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th'),\n        ('nadooit_program', '0001_initial'),\n        ('nadooit_time_account', '0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n        ('nadooit_program_ownership_system', '0004_rename_customers_the_manager_is_responsible_for_nadooitcustomerprogrammanager_list_of_customers_the_'),\n    ]\n    operations = [",
        "detail": "app.nadooit_program_ownership_system.migrations.0005_rename_nadooitcustomerprogram_customerprogram_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0006_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "description": "app.nadooit_program_ownership_system.migrations.0006_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n        ('nadooit_program_ownership_system', '0005_rename_nadooitcustomerprogram_customerprogram_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogrammanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_manager_has_given_the_role_to', to='nadooit_hr.employee'),",
        "detail": "app.nadooit_program_ownership_system.migrations.0006_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0007_alter_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "description": "app.nadooit_program_ownership_system.migrations.0007_alter_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n        ('nadooit_program_ownership_system', '0006_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customerprogrammanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_customer_program_manager_has_given_the_role_to', to='nadooit_hr.employee'),",
        "detail": "app.nadooit_program_ownership_system.migrations.0007_alter_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0008_customerprogrammanager_can_give_customerprogrammanager_role",
        "description": "app.nadooit_program_ownership_system.migrations.0008_customerprogrammanager_can_give_customerprogrammanager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0007_alter_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogrammanager',\n            name='can_give_CustomerProgramManager_role',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0008_customerprogrammanager_can_give_customerprogrammanager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0009_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_customerprogrammanager_r",
        "description": "app.nadooit_program_ownership_system.migrations.0009_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_customerprogrammanager_r",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0008_customerprogrammanager_can_give_customerprogrammanager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogrammanager',\n            old_name='can_give_CustomerProgramManager_role',\n            new_name='can_give_customerprogrammanager_role',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0009_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_customerprogrammanager_r",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0010_rename_nadooitprogramshare_programshare",
        "description": "app.nadooit_program_ownership_system.migrations.0010_rename_nadooitprogramshare_programshare",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_network', '0001_initial'),\n        ('nadooit_program', '0001_initial'),\n        ('nadooit_program_ownership_system', '0009_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_customerprogrammanager_r'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='NadooitProgramShare',\n            new_name='ProgramShare',",
        "detail": "app.nadooit_program_ownership_system.migrations.0010_rename_nadooitprogramshare_programshare",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0011_customerprogram_price_per_hour_in_cent",
        "description": "app.nadooit_program_ownership_system.migrations.0011_customerprogram_price_per_hour_in_cent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0010_rename_nadooitprogramshare_programshare'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogram',\n            name='price_per_hour_in_cent',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0011_customerprogram_price_per_hour_in_cent",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0012_rename_price_per_hour_in_cent_customerprogram_price_per_second_in_cent",
        "description": "app.nadooit_program_ownership_system.migrations.0012_rename_price_per_hour_in_cent_customerprogram_price_per_second_in_cent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0011_customerprogram_price_per_hour_in_cent'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogram',\n            old_name='price_per_hour_in_cent',\n            new_name='price_per_second_in_cent',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0012_rename_price_per_hour_in_cent_customerprogram_price_per_second_in_cent",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0013_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_manager_role",
        "description": "app.nadooit_program_ownership_system.migrations.0013_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0012_rename_price_per_hour_in_cent_customerprogram_price_per_second_in_cent'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogrammanager',\n            old_name='can_give_customerprogrammanager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0013_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "NadooitProgramOwnershipSystemConfig",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.apps",
        "description": "app.nadooit_program_ownership_system.apps",
        "peekOfCode": "class NadooitProgramOwnershipSystemConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_program_ownership_system'",
        "detail": "app.nadooit_program_ownership_system.apps",
        "documentation": {}
    },
    {
        "label": "ProgramShare",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.models",
        "description": "app.nadooit_program_ownership_system.models",
        "peekOfCode": "class ProgramShare(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    share_of = models.ForeignKey(Program, on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.id\nclass CustomerProgram(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    program_time_saved_per_execution_in_seconds = models.IntegerField(default=0)",
        "detail": "app.nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.models",
        "description": "app.nadooit_program_ownership_system.models",
        "peekOfCode": "class CustomerProgram(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    program_time_saved_per_execution_in_seconds = models.IntegerField(default=0)\n    # TODO this relation means that every program can only be assigned to one time account. This is not correct. A program can be assigned to multiple time accounts.\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.SET_NULL, null=True)\n    over_charge = models.BooleanField(default=False)\n    program = models.ForeignKey(Program, on_delete=models.SET_NULL, null=True)\n    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True)\n    price_per_second_in_cent = models.IntegerField(default=0)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)",
        "detail": "app.nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramManager",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.models",
        "description": "app.nadooit_program_ownership_system.models",
        "peekOfCode": "class CustomerProgramManager(models.Model):\n    employee = models.OneToOneField(\n        Employee, on_delete=models.CASCADE, primary_key=True\n    )\n    can_create_customer_program = models.BooleanField(default=False)\n    can_delete_customer_program = models.BooleanField(default=False)\n    can_give_manager_role = models.BooleanField(default=False)\n    list_of_customers_the_manager_is_responsible_for = models.ManyToManyField(\n        Customer, blank=True\n    )",
        "detail": "app.nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_program_ownership_system.urls",
        "description": "app.nadooit_program_ownership_system.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin\", views.admin, name=\"customer_program_ownership_overview_adminpage\"),\n    path(\n        \"customer_program_ownership_overview\",\n        views.customer_program_ownership_overview,\n        name=\"customer_program_ownership_overview\",\n    ),\n]",
        "detail": "app.nadooit_program_ownership_system.urls",
        "documentation": {}
    },
    {
        "label": "customer_program_ownership_overview",
        "kind": 2,
        "importPath": "app.nadooit_program_ownership_system.views",
        "description": "app.nadooit_program_ownership_system.views",
        "peekOfCode": "def customer_program_ownership_overview(request):\n    # if the logged in user is a time account manager show the time account manager view\n    return render(\n        request,\n        \"nadooit_program_ownership_system/customer_program_ownership_overview.html\",\n        {\n            \"page_title\": \"Übersicht der Zeitkonten\",\n        },\n    )\n@login_required(login_url=\"/auth/login-user\")",
        "detail": "app.nadooit_program_ownership_system.views",
        "documentation": {}
    },
    {
        "label": "admin",
        "kind": 2,
        "importPath": "app.nadooit_program_ownership_system.views",
        "description": "app.nadooit_program_ownership_system.views",
        "peekOfCode": "def admin(request):\n    # if the logged in user is a time account manager show the time account manager view\n    return render(\n        request,\n        \"nadooit_program_ownership_system/customer_program_ownership_overview.html\",\n        {\n            \"page_title\": \"Übersicht der Zeitkonten\",\n        },\n    )",
        "detail": "app.nadooit_program_ownership_system.views",
        "documentation": {}
    },
    {
        "label": "NadooitQuestionsAndAnswersConfig",
        "kind": 6,
        "importPath": "app.nadooit_questions_and_answers.apps",
        "description": "app.nadooit_questions_and_answers.apps",
        "peekOfCode": "class NadooitQuestionsAndAnswersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_questions_and_answers'",
        "detail": "app.nadooit_questions_and_answers.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0001_initial",
        "description": "app.nadooit_time_account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"nadooit_crm\", \"0001_initial\"),\n        (\"nadooit_hr\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"TimeAccount\",\n            fields=[",
        "detail": "app.nadooit_time_account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0002_rename_timeaccountemployee_employeetimeaccount_and_more",
        "description": "app.nadooit_time_account.migrations.0002_rename_timeaccountemployee_employeetimeaccount_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_time_account', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='TimeAccountEmployee',\n            new_name='EmployeeTimeAccount',",
        "detail": "app.nadooit_time_account.migrations.0002_rename_timeaccountemployee_employeetimeaccount_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0003_rename_customernadooittimeaccount_customertimeaccount",
        "description": "app.nadooit_time_account.migrations.0003_rename_customernadooittimeaccount_customertimeaccount",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_time_account', '0002_rename_timeaccountemployee_employeetimeaccount_and_more'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='CustomerNadooitTimeAccount',\n            new_name='CustomerTimeAccount',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0003_rename_customernadooittimeaccount_customertimeaccount",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0004_rename_time_account_worktimeaccountentry_employee_time_account",
        "description": "app.nadooit_time_account.migrations.0004_rename_time_account_worktimeaccountentry_employee_time_account",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0003_rename_customernadooittimeaccount_customertimeaccount'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='worktimeaccountentry',\n            old_name='time_account',\n            new_name='employee_time_account',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0004_rename_time_account_worktimeaccountentry_employee_time_account",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0005_timeaccount_name",
        "description": "app.nadooit_time_account.migrations.0005_timeaccount_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0004_rename_time_account_worktimeaccountentry_employee_time_account'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='timeaccount',\n            name='name',\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "app.nadooit_time_account.migrations.0005_timeaccount_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0006_customertimeaccount_name",
        "description": "app.nadooit_time_account.migrations.0006_customertimeaccount_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0005_timeaccount_name'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customertimeaccount',\n            name='name',\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "app.nadooit_time_account.migrations.0006_customertimeaccount_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0007_alter_customertimeaccount_name",
        "description": "app.nadooit_time_account.migrations.0007_alter_customertimeaccount_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0006_customertimeaccount_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customertimeaccount',\n            name='name',\n            field=models.CharField(default='FIXME', max_length=255),\n            preserve_default=False,",
        "detail": "app.nadooit_time_account.migrations.0007_alter_customertimeaccount_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0008_alter_timeaccountmanager_employee",
        "description": "app.nadooit_time_account.migrations.0008_alter_timeaccountmanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n        ('nadooit_time_account', '0007_alter_customertimeaccount_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='timeaccountmanager',\n            name='employee',\n            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='nadooit_hr.employee'),",
        "detail": "app.nadooit_time_account.migrations.0008_alter_timeaccountmanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0009_timeaccountmanager_customers_the_manager_is_responsible_for",
        "description": "app.nadooit_time_account.migrations.0009_timeaccountmanager_customers_the_manager_is_responsible_for",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_time_account', '0008_alter_timeaccountmanager_employee'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='timeaccountmanager',\n            name='customers_the_manager_is_responsible_for',\n            field=models.ManyToManyField(blank=True, to='nadooit_crm.customer'),",
        "detail": "app.nadooit_time_account.migrations.0009_timeaccountmanager_customers_the_manager_is_responsible_for",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0010_timeaccount_is_active_and_more",
        "description": "app.nadooit_time_account.migrations.0010_timeaccount_is_active_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0009_timeaccountmanager_customers_the_manager_is_responsible_for'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='timeaccount',\n            name='is_active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "app.nadooit_time_account.migrations.0010_timeaccount_is_active_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0011_rename_can_delete_api_key_timeaccountmanager_can_delete_time_accounts_and_more",
        "description": "app.nadooit_time_account.migrations.0011_rename_can_delete_api_key_timeaccountmanager_can_delete_time_accounts_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0010_timeaccount_is_active_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='timeaccountmanager',\n            old_name='can_delete_api_key',\n            new_name='can_delete_time_accounts',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0011_rename_can_delete_api_key_timeaccountmanager_can_delete_time_accounts_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_",
        "description": "app.nadooit_time_account.migrations.0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0011_rename_can_delete_api_key_timeaccountmanager_can_delete_time_accounts_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='timeaccountmanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0013_rename_can_give_timeaccountmanager_role_timeaccountmanager_can_give_manager_role",
        "description": "app.nadooit_time_account.migrations.0013_rename_can_give_timeaccountmanager_role_timeaccountmanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='timeaccountmanager',\n            old_name='can_give_TimeAccountManager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0013_rename_can_give_timeaccountmanager_role_timeaccountmanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "NadooitTimeaccountConfig",
        "kind": 6,
        "importPath": "app.nadooit_time_account.apps",
        "description": "app.nadooit_time_account.apps",
        "peekOfCode": "class NadooitTimeaccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_time_account'",
        "detail": "app.nadooit_time_account.apps",
        "documentation": {}
    },
    {
        "label": "get__total_of_all_customer_time_account_balances__for__user",
        "kind": 2,
        "importPath": "app.nadooit_time_account.logic",
        "description": "app.nadooit_time_account.logic",
        "peekOfCode": "def get__total_of_all_customer_time_account_balances__for__user(User):\n    if Employee.objects.filter(user=User).exists():\n        print(\"Employee exists\")\n        print(Employee.objects.get(user=User))\n        time_accounts_the_user_is_responsible_for = TimeAccountManager.objects.get(\n            employee=Employee.objects.get(user=User)\n        ).time_accounts.all()\n        total_of_all_customer_time_account_balances = 0\n        print(time_accounts_the_user_is_responsible_for)\n        for time_account in time_accounts_the_user_is_responsible_for:",
        "detail": "app.nadooit_time_account.logic",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class TimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    time_balance_in_seconds = models.BigIntegerField(null=True, blank=True, default=0)\n    name = models.CharField(max_length=255, null=True, blank=True)\n    is_active = models.BooleanField(default=True)\n    def __str__(self):\n        time_balance_in_seconds = (\n            get_time_as_string_in_hour_format_for_time_in_seconds_as_integer(\n                self.time_balance_in_seconds\n            )",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "EmployeeTimeAccount",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class EmployeeTimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.CASCADE)\n    employee = models.ForeignKey(Employee, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        if self.employee.user.display_name == \"\":\n            return (",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerTimeAccount",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class CustomerTimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    name = models.CharField(max_length=255, null=False, blank=False)\n    def __str__(self):\n        return (\n            self.customer.name",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "WorkTimeAccountEntry",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class WorkTimeAccountEntry(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    employee_time_account = models.ForeignKey(\n        EmployeeTimeAccount, on_delete=models.CASCADE\n    )\n    work_time = models.TimeField(null=True, blank=True)\n    work_date = models.DateField(null=True, blank=True)\n    ENTRY_TYPE = (\n        (\"IN\", \"IN\"),\n        (\"OUT\", \"OUT\"),",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountManager",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class TimeAccountManager(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # A list of all time accounts the manager is responsible for\n    time_accounts = models.ManyToManyField(TimeAccount, blank=True)\n    employee = models.OneToOneField(Employee, on_delete=models.CASCADE)\n    # employee = models.ForeignKey(Employee, on_delete=models.CASCADE)\n    can_create_time_accounts = models.BooleanField(default=False)\n    can_delete_time_accounts = models.BooleanField(default=False)\n    can_give_manager_role = models.BooleanField(default=False)\n    list_of_customers_the_manager_is_responsible_for = models.ManyToManyField(",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "get_time_as_string_in_hour_format_for_time_in_seconds_as_integer",
        "kind": 2,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "def get_time_as_string_in_hour_format_for_time_in_seconds_as_integer(time):\n    return (\n        str(time // 3600)\n        + \" std : \"\n        + str((time % 3600) // 60)\n        + \" min : \"\n        + str(time % 60)\n        + \" sek\"\n    )\n# Create your models here.",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_time_account.urls",
        "description": "app.nadooit_time_account.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin\", views.admin, name=\"adminpage\"),\n]",
        "detail": "app.nadooit_time_account.urls",
        "documentation": {}
    },
    {
        "label": "NadooitWebsiteConfig",
        "kind": 6,
        "importPath": "app.nadooit_website.apps",
        "description": "app.nadooit_website.apps",
        "peekOfCode": "class NadooitWebsiteConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_website'",
        "detail": "app.nadooit_website.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_website.urls",
        "description": "app.nadooit_website.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.index, name=\"index\"),\n    path(\"impressum\", views.impressum, name=\"impressum\"),\n    path(\"datenschutz\", views.datenschutz, name=\"datenschutz\"),\n]",
        "detail": "app.nadooit_website.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app.nadooit_website.views",
        "description": "app.nadooit_website.views",
        "peekOfCode": "def index(request):\n    return render(request, \"nadooit_website/index.html\", {\"page_title\": \"Home\"})\ndef impressum(request):\n    return render(\n        request, \"nadooit_website/impressum.html\", {\"page_title\": \"Impressum\"}\n    )\ndef datenschutz(request):\n    return render(\n        request,\n        \"nadooit_website/datenschutz.html\",",
        "detail": "app.nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "impressum",
        "kind": 2,
        "importPath": "app.nadooit_website.views",
        "description": "app.nadooit_website.views",
        "peekOfCode": "def impressum(request):\n    return render(\n        request, \"nadooit_website/impressum.html\", {\"page_title\": \"Impressum\"}\n    )\ndef datenschutz(request):\n    return render(\n        request,\n        \"nadooit_website/datenschutz.html\",\n        {\"page_title\": \"Datenschutzerklärung\"},\n    )",
        "detail": "app.nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "datenschutz",
        "kind": 2,
        "importPath": "app.nadooit_website.views",
        "description": "app.nadooit_website.views",
        "peekOfCode": "def datenschutz(request):\n    return render(\n        request,\n        \"nadooit_website/datenschutz.html\",\n        {\"page_title\": \"Datenschutzerklärung\"},\n    )",
        "detail": "app.nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_workflow.migrations.0001_initial",
        "description": "app.nadooit_workflow.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"nadooit_crm\", \"0001_initial\"),\n        (\"nadooit_program\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Process\",\n            fields=[",
        "detail": "app.nadooit_workflow.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitWorkflowConfig",
        "kind": 6,
        "importPath": "app.nadooit_workflow.apps",
        "description": "app.nadooit_workflow.apps",
        "peekOfCode": "class NadooitWorkflowConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"nadooit_workflow\"",
        "detail": "app.nadooit_workflow.apps",
        "documentation": {}
    },
    {
        "label": "Process",
        "kind": 6,
        "importPath": "app.nadooit_workflow.models",
        "description": "app.nadooit_workflow.models",
        "peekOfCode": "class Process(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    # process_trigger_evnets is a list of events that trigger the process. They are represented as a list of strings.\n    # process_trigger_events = models.CharField(max_length=255)\t#list of events that trigger the process.\n    # process_subscriptions = models.CharField(max_length=255)\n    trigger_process = models.ForeignKey(\"self\", on_delete=models.SET_NULL, null=True)\n    tiggers_process = models.ManyToManyField(\"self\", blank=True)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    description = models.TextField()",
        "detail": "app.nadooit_workflow.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app.manage",
        "description": "app.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nadooit.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "app.manage",
        "documentation": {}
    }
]