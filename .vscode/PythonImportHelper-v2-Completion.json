[
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "mfa",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mfa",
        "description": "mfa",
        "detail": "mfa",
        "documentation": {}
    },
    {
        "label": "mfa.TrustedDevice",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mfa.TrustedDevice",
        "description": "mfa.TrustedDevice",
        "detail": "mfa.TrustedDevice",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "nadooit",
        "description": "nadooit",
        "isExtraImport": true,
        "detail": "nadooit",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "NadooitCustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "NadooitCustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "NadooitProgramShare",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "NadooitCustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "NadooitProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "create_execution",
        "importPath": "nadooit_api_executions_system.views",
        "description": "nadooit_api_executions_system.views",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "check_user",
        "importPath": "nadooit_api_executions_system.views",
        "description": "nadooit_api_executions_system.views",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "ModelChoiceField",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "api_key_interface",
        "importPath": "nadooit_api_key.views",
        "description": "nadooit_api_key.views",
        "isExtraImport": true,
        "detail": "nadooit_api_key.views",
        "documentation": {}
    },
    {
        "label": "create_api_key",
        "importPath": "nadooit_api_key.views",
        "description": "nadooit_api_key.views",
        "isExtraImport": true,
        "detail": "nadooit_api_key.views",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "ApiKeyForm",
        "importPath": "nadooit_api_key.forms",
        "description": "nadooit_api_key.forms",
        "isExtraImport": true,
        "detail": "nadooit_api_key.forms",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "nadooit_auth.user_code",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "get__new_user_code",
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "isExtraImport": true,
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "login_user",
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "isExtraImport": true,
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "isExtraImport": true,
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "BillingAdress",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "ShippingAdress",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "index_nadooit_os",
        "importPath": "nadooit_os.views",
        "description": "nadooit_os.views",
        "isExtraImport": true,
        "detail": "nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "NadooitProgram",
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "isExtraImport": true,
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "NadooitProgram",
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "isExtraImport": true,
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerNadooitTimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountEmployee",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "WorkTimeAccountEntry",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "Process",
        "importPath": "nadooit_workflow.models",
        "description": "nadooit_workflow.models",
        "isExtraImport": true,
        "detail": "nadooit_workflow.models",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "pygraphviz",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pygraphviz",
        "description": "pygraphviz",
        "detail": "pygraphviz",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "pygraphviz",
        "description": "pygraphviz",
        "isExtraImport": true,
        "detail": "pygraphviz",
        "documentation": {}
    },
    {
        "label": "is_url_active",
        "kind": 2,
        "importPath": "django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "description": "django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "peekOfCode": "def is_url_active(request, url):\n    # Main idea is to check if the url and the current path is a match\n    if reverse(url) == request.path:\n        return \"active-url\"\n    print(\"url: \", url)\n    print(\"request.path: \", request.path)\n    if request.path in reverse(url) and len(request.path) > 1:\n        return \"active-url\"\n    return \"\"",
        "detail": "django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "description": "django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "peekOfCode": "register = template.Library()\n@register.simple_tag\ndef is_url_active(request, url):\n    # Main idea is to check if the url and the current path is a match\n    if reverse(url) == request.path:\n        return \"active-url\"\n    print(\"url: \", url)\n    print(\"request.path: \", request.path)\n    if request.path in reverse(url) and len(request.path) > 1:\n        return \"active-url\"",
        "detail": "django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "documentation": {}
    },
    {
        "label": "DjangoIsUrlActiveTemplatetagConfig",
        "kind": 6,
        "importPath": "django_is_url_active_templatetag.apps",
        "description": "django_is_url_active_templatetag.apps",
        "peekOfCode": "class DjangoIsUrlActiveTemplatetagConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'django_is_url_active_templatetag'",
        "detail": "django_is_url_active_templatetag.apps",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "nadooit.asgi",
        "description": "nadooit.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "nadooit.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Production\n# config_json = Path.home().joinpath('NADOOIT').joinpath('config').joinpath('config.json')\n# Development\nconfig_json = (\n    Path.home().joinpath(\"NADOOIT\").joinpath(\"config\").joinpath(\"config_dev.json\")\n)\nwith open(config_json) as config_file:\n    config = json.load(config_file)\n# Quick-start development settings - unsuitable for production",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "config_json",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "config_json = (\n    Path.home().joinpath(\"NADOOIT\").joinpath(\"config\").joinpath(\"config_dev.json\")\n)\nwith open(config_json) as config_file:\n    config = json.load(config_file)\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\n# SECRET_KEY = 'django-insecure-r_!=ggg^bx66haa&uq%q9!u1)%rax+f((om7_!c3qn)8#ch3#t'\nSECRET_KEY = config.get(\"SECRET_KEY\")",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "SECRET_KEY = config.get(\"SECRET_KEY\")\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django_is_url_active_templatetag\",\n    \"grappelli\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django_is_url_active_templatetag\",\n    \"grappelli\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "ALLOWED_HOSTS = [\"*\"]\n# Application definition\nINSTALLED_APPS = [\n    \"django_is_url_active_templatetag\",\n    \"grappelli\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django_is_url_active_templatetag\",\n    \"grappelli\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"nadooit_auth\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_STORAGE",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "STATICFILES_STORAGE = \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\nROOT_URLCONF = \"nadooit.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "ROOT_URLCONF = \"nadooit.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "WSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": config.get(\"POSTGRE_SQL_DB_NAME\"),\n        \"USER\": config.get(\"POSTGRE_SQL_DB_USER\"),\n        \"PASSWORD\": config.get(\"POSTGRE_SQL_DB_PASSWORD\"),\n        \"HOST\": \"localhost\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.postgresql\",\n        \"NAME\": config.get(\"POSTGRE_SQL_DB_NAME\"),\n        \"USER\": config.get(\"POSTGRE_SQL_DB_USER\"),\n        \"PASSWORD\": config.get(\"POSTGRE_SQL_DB_PASSWORD\"),\n        \"HOST\": \"localhost\",\n        \"PORT\": config.get(\"POSTGRE_SQL_DB_PORT\"),\n    }\n}",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"nadooit_auth.User\"\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\n# according to doc STATIC_ROOT = \"/var/www/nadooit.de/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = \"static/\"\nINTERNAL_IPS = [",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\n# according to doc STATIC_ROOT = \"/var/www/nadooit.de/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = \"static/\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\n# according to doc STATIC_ROOT = \"/var/www/nadooit.de/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = \"static/\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\n# according to doc STATIC_ROOT = \"/var/www/nadooit.de/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = \"static/\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nSTATICFILES_DIRS = [",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, \"staticfiles\")\nSTATIC_URL = \"static/\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\n# Default primary key field type",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    \"127.0.0.1\",\n]\nSTATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR / \"static\",\n    \"/var/www/static/\",\n]\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "STATICFILES_DIRS = (os.path.join(BASE_DIR, \"static\"),)\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_SERVICE_WORKER_PATH",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_NAME",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DESCRIPTION",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_THEME_COLOR",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_BACKGROUND_COLOR",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DISPLAY",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_SCOPE",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ORIENTATION",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"static/splashscreen/nadooit.png\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_START_URL",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_STATUS_BAR_COLOR",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",\n    }",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ICONS",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_ICONS = [{\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",\n    }\n]",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ICONS_APPLE",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_ICONS_APPLE = [\n    {\"src\": \"static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",\n    }\n]\nPWA_APP_DIR = \"ltr\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_SPLASH_SCREEN",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",\n    }\n]\nPWA_APP_DIR = \"ltr\"\nPWA_APP_LANG = \"de-DE\"\n# FIDO2\nMFA_UNALLOWED_METHODS = ()  # Methods that shouldn't be allowed for the user",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DIR",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_DIR = \"ltr\"\nPWA_APP_LANG = \"de-DE\"\n# FIDO2\nMFA_UNALLOWED_METHODS = ()  # Methods that shouldn't be allowed for the user\nMFA_LOGIN_CALLBACK = (\n    \"\"  # A function that should be called by username to login the user in session\n)\nMFA_RECHECK = True  # Allow random rechecking of the user\nMFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit-os\"  # Allows Changing the page after successful registeration",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_LANG",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "PWA_APP_LANG = \"de-DE\"\n# FIDO2\nMFA_UNALLOWED_METHODS = ()  # Methods that shouldn't be allowed for the user\nMFA_LOGIN_CALLBACK = (\n    \"\"  # A function that should be called by username to login the user in session\n)\nMFA_RECHECK = True  # Allow random rechecking of the user\nMFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit-os\"  # Allows Changing the page after successful registeration\n)",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_UNALLOWED_METHODS",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_UNALLOWED_METHODS = ()  # Methods that shouldn't be allowed for the user\nMFA_LOGIN_CALLBACK = (\n    \"\"  # A function that should be called by username to login the user in session\n)\nMFA_RECHECK = True  # Allow random rechecking of the user\nMFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit-os\"  # Allows Changing the page after successful registeration\n)\nMFA_SUCCESS_REGISTRATION_MSG = \"Go to Security Home\"  # The text of the link\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_LOGIN_CALLBACK",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_LOGIN_CALLBACK = (\n    \"\"  # A function that should be called by username to login the user in session\n)\nMFA_RECHECK = True  # Allow random rechecking of the user\nMFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit-os\"  # Allows Changing the page after successful registeration\n)\nMFA_SUCCESS_REGISTRATION_MSG = \"Go to Security Home\"  # The text of the link\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_RECHECK = True  # Allow random rechecking of the user\nMFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit-os\"  # Allows Changing the page after successful registeration\n)\nMFA_SUCCESS_REGISTRATION_MSG = \"Go to Security Home\"  # The text of the link\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_REDIRECT_AFTER_REGISTRATION",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit-os\"  # Allows Changing the page after successful registeration\n)\nMFA_SUCCESS_REGISTRATION_MSG = \"Go to Security Home\"  # The text of the link\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_SUCCESS_REGISTRATION_MSG",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_SUCCESS_REGISTRATION_MSG = \"Go to Security Home\"  # The text of the link\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nU2F_APPID = \"https://localhost\"  # URL For U2F\nFIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK_MIN",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nU2F_APPID = \"https://localhost\"  # URL For U2F\nFIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project\n)",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK_MAX",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nU2F_APPID = \"https://localhost\"  # URL For U2F\nFIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project\n)\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_QUICKLOGIN",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nU2F_APPID = \"https://localhost\"  # URL For U2F\nFIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project\n)\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_HIDE_DISABLE",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nU2F_APPID = \"https://localhost\"  # URL For U2F\nFIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project\n)\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_OWNED_BY_ENTERPRISE",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "MFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nU2F_APPID = \"https://localhost\"  # URL For U2F\nFIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project\n)\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TOKEN_ISSUER_NAME",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "TOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nU2F_APPID = \"https://localhost\"  # URL For U2F\nFIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project\n)\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "U2F_APPID",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "U2F_APPID = \"https://localhost\"  # URL For U2F\nFIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project\n)\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "FIDO_SERVER_ID",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "FIDO_SERVER_ID = (\n    \"localehost\"  # Server rp id for FIDO2, it the full domain of your project\n)\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "FIDO_SERVER_NAME",
        "kind": 5,
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "peekOfCode": "FIDO_SERVER_NAME = \"nadooit\"",
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "nadooit.urls",
        "description": "nadooit.urls",
        "peekOfCode": "admin.site.site_header = \"NADOOIT Administration\"  # default: \"Django Administration\"\nadmin.site.index_title = \"NADOOIT Administration Site\"  # default: \"Site administration\"\nadmin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    path(\"\", include(\"nadooit_website.urls\")),\n    path(\"auth/\", include(\"nadooit_auth.urls\")),\n    path(\"nadooit-os/\", include(\"nadooit_os.urls\")),\n    path(\"nadooit-api-key/\", include(\"nadooit_api_key.urls\")),\n    path(\"api/\", include(\"nadooit_api_executions_system.urls\")),",
        "detail": "nadooit.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "nadooit.urls",
        "description": "nadooit.urls",
        "peekOfCode": "admin.site.index_title = \"NADOOIT Administration Site\"  # default: \"Site administration\"\nadmin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    path(\"\", include(\"nadooit_website.urls\")),\n    path(\"auth/\", include(\"nadooit_auth.urls\")),\n    path(\"nadooit-os/\", include(\"nadooit_os.urls\")),\n    path(\"nadooit-api-key/\", include(\"nadooit_api_key.urls\")),\n    path(\"api/\", include(\"nadooit_api_executions_system.urls\")),\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),",
        "detail": "nadooit.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "nadooit.urls",
        "description": "nadooit.urls",
        "peekOfCode": "admin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    path(\"\", include(\"nadooit_website.urls\")),\n    path(\"auth/\", include(\"nadooit_auth.urls\")),\n    path(\"nadooit-os/\", include(\"nadooit_os.urls\")),\n    path(\"nadooit-api-key/\", include(\"nadooit_api_key.urls\")),\n    path(\"api/\", include(\"nadooit_api_executions_system.urls\")),\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),\n    path(\"grappelli/\", include(\"grappelli.urls\")),",
        "detail": "nadooit.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "nadooit.urls",
        "description": "nadooit.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", include(\"nadooit_website.urls\")),\n    path(\"auth/\", include(\"nadooit_auth.urls\")),\n    path(\"nadooit-os/\", include(\"nadooit_os.urls\")),\n    path(\"nadooit-api-key/\", include(\"nadooit_api_key.urls\")),\n    path(\"api/\", include(\"nadooit_api_executions_system.urls\")),\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),\n    path(\"grappelli/\", include(\"grappelli.urls\")),\n    path(\"admin/\", admin.site.urls),\n    path(\"\", include(\"pwa.urls\")),",
        "detail": "nadooit.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "nadooit.wsgi",
        "description": "nadooit.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "nadooit.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_api_executions_system.migrations.0001_initial",
        "description": "nadooit_api_executions_system.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomerProgramExecution',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),\n                ('program_time_saved_in_seconds', models.IntegerField(default=0)),",
        "detail": "nadooit_api_executions_system.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_api_executions_system.migrations.0002_initial",
        "description": "nadooit_api_executions_system.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_program_ownership_system', '0001_initial'),\n        ('nadooit_api_executions_system', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecution',\n            name='customer_program',",
        "detail": "nadooit_api_executions_system.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecutionAdmin",
        "kind": 6,
        "importPath": "nadooit_api_executions_system.admin",
        "description": "nadooit_api_executions_system.admin",
        "peekOfCode": "class CustomerProgramExecutionAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in CustomerProgramExecution._meta.fields]\nadmin.site.register(CustomerProgramExecution, CustomerProgramExecutionAdmin)",
        "detail": "nadooit_api_executions_system.admin",
        "documentation": {}
    },
    {
        "label": "NadooitApiExecutionsSystemConfig",
        "kind": 6,
        "importPath": "nadooit_api_executions_system.apps",
        "description": "nadooit_api_executions_system.apps",
        "peekOfCode": "class NadooitApiExecutionsSystemConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_api_executions_system'",
        "detail": "nadooit_api_executions_system.apps",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "kind": 6,
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "peekOfCode": "class CustomerProgramExecution(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    program_time_saved_in_seconds = models.IntegerField(default=0)\n    customer_program = models.ForeignKey(\n        NadooitCustomerProgram, on_delete=models.SET_NULL, null=True\n    )\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.customer_program.program.name",
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "cutomer_program_execution_was_created",
        "kind": 2,
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "peekOfCode": "def cutomer_program_execution_was_created(sender, instance, created, *args, **kwargs):\n    if created:\n        # reduce the customer_programs time_account by the program_time_saved_in_seconds\n        obj = NadooitCustomerProgram.objects.get(id=instance.customer_program.id)\n        obj.time_account.time_balance_in_seconds = (\n            obj.time_account.time_balance_in_seconds\n            - instance.program_time_saved_in_seconds\n        )\n        obj.time_account.save()\n@receiver(models.signals.post_delete, sender=CustomerProgramExecution)",
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "customer_program_execution_was_deleted",
        "kind": 2,
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "peekOfCode": "def customer_program_execution_was_deleted(sender, instance, *args, **kwargs):\n    # increase the customer_programs time_account by the program_time_saved_in_seconds\n    obj = NadooitCustomerProgram.objects.get(id=instance.customer_program.id)\n    obj.time_account.time_balance_in_seconds = (\n        obj.time_account.time_balance_in_seconds\n        + instance.program_time_saved_in_seconds\n    )\n    obj.time_account.save()",
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "nadooit_api_executions_system.urls",
        "description": "nadooit_api_executions_system.urls",
        "peekOfCode": "urlpatterns = [\n    path('executions', create_execution, name=\"create\"),\n    path('users/check', check_user, name=\"check\"),\n]",
        "detail": "nadooit_api_executions_system.urls",
        "documentation": {}
    },
    {
        "label": "create_execution",
        "kind": 2,
        "importPath": "nadooit_api_executions_system.views",
        "description": "nadooit_api_executions_system.views",
        "peekOfCode": "def create_execution(request):\n    try:\n        hashed_api_key = hashlib.sha256(\n            request.data.get(\"NADOOIT__API_KEY\").encode()\n        ).hexdigest()\n        try:\n            found_nadooit_api_key = NadooitApiKey.objects.get(\n                api_key=hashed_api_key, is_active=True\n            )\n            if found_nadooit_api_key.user.user_code != request.data.get(",
        "detail": "nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "check_user",
        "kind": 2,
        "importPath": "nadooit_api_executions_system.views",
        "description": "nadooit_api_executions_system.views",
        "peekOfCode": "def check_user(request):\n    try:\n        hashed_api_key = hashlib.sha256(\n            request.data.get(\"NADOOIT__API_KEY\").encode()\n        ).hexdigest()\n        try:\n            found_nadooit_api_key = NadooitApiKey.objects.get(\n                api_key=hashed_api_key, is_active=True\n            )\n            if found_nadooit_api_key.user.user_code == request.data.get(",
        "detail": "nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_api_key.migrations.0001_initial",
        "description": "nadooit_api_key.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitApiKey',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),\n                ('api_key', models.CharField(default=uuid.uuid4, max_length=255, unique=True)),",
        "detail": "nadooit_api_key.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_api_key.migrations.0002_initial",
        "description": "nadooit_api_key.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_api_key', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='nadooitapikey',\n            name='user',",
        "detail": "nadooit_api_key.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "NadooitApiKeyConfig",
        "kind": 6,
        "importPath": "nadooit_api_key.apps",
        "description": "nadooit_api_key.apps",
        "peekOfCode": "class NadooitApiKeyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_api_key'",
        "detail": "nadooit_api_key.apps",
        "documentation": {}
    },
    {
        "label": "UserCodeModelChoiceField",
        "kind": 6,
        "importPath": "nadooit_api_key.forms",
        "description": "nadooit_api_key.forms",
        "peekOfCode": "class UserCodeModelChoiceField(ModelChoiceField):\n    def label_from_instance(self, obj):\n        return obj.user_code\nclass ApiKeyForm(forms.Form):\n    user_code = UserCodeModelChoiceField(\n        queryset=User.objects.all(),\n        to_field_name=\"user_code\",\n        required=True,\n        widget=forms.Select(\n            attrs={",
        "detail": "nadooit_api_key.forms",
        "documentation": {}
    },
    {
        "label": "ApiKeyForm",
        "kind": 6,
        "importPath": "nadooit_api_key.forms",
        "description": "nadooit_api_key.forms",
        "peekOfCode": "class ApiKeyForm(forms.Form):\n    user_code = UserCodeModelChoiceField(\n        queryset=User.objects.all(),\n        to_field_name=\"user_code\",\n        required=True,\n        widget=forms.Select(\n            attrs={\n                \"class\": \"form-control\",\n                \"style\": \"width: 150px;\",\n                \"class\": \"form-control\",",
        "detail": "nadooit_api_key.forms",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "kind": 6,
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "peekOfCode": "class NadooitApiKey(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    #api_keys are unique and are stored in the database as a hash of the api key\n    api_key = models.CharField(max_length=255, unique=True, editable=True, null=False, blank=False,default=uuid.uuid4)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    is_active = models.BooleanField(default=True) \n    def __str__(self):\n        if self.user.display_name != \"\":",
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "hash_api_key_when_created",
        "kind": 2,
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "peekOfCode": "def hash_api_key_when_created(sender, instance, created, *args, **kwargs):\n    if created:\n        #hashes the api_key\n        obj = NadooitApiKey.objects.get(id = instance.id)\n        obj.api_key = hashlib.sha256(str(obj.api_key).encode()).hexdigest()\n        obj.save()",
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "nadooit_api_key.urls",
        "description": "nadooit_api_key.urls",
        "peekOfCode": "urlpatterns = [\n    path('', api_key_interface, name=\"api-key-interface\"),\t\n    path('create-api-key', create_api_key, name=\"create-api-key\"),\n]",
        "detail": "nadooit_api_key.urls",
        "documentation": {}
    },
    {
        "label": "api_key_interface",
        "kind": 2,
        "importPath": "nadooit_api_key.views",
        "description": "nadooit_api_key.views",
        "peekOfCode": "def api_key_interface(request):\n    return render(request, 'nadooit_api_key/index.html')\n@login_required(login_url='/auth/login-user')\ndef create_api_key(request):\n    submitted = False\n    if request.method == \"POST\":\n        form = ApiKeyForm(request.POST)\n        if form.is_valid():\n            new_api_key = NadooitApiKey(api_key = form.cleaned_data['api_key'], user = form.cleaned_data['user_code'], is_active = form.cleaned_data['is_active'])\n            new_api_key.updated_at = timezone.now()",
        "detail": "nadooit_api_key.views",
        "documentation": {}
    },
    {
        "label": "create_api_key",
        "kind": 2,
        "importPath": "nadooit_api_key.views",
        "description": "nadooit_api_key.views",
        "peekOfCode": "def create_api_key(request):\n    submitted = False\n    if request.method == \"POST\":\n        form = ApiKeyForm(request.POST)\n        if form.is_valid():\n            new_api_key = NadooitApiKey(api_key = form.cleaned_data['api_key'], user = form.cleaned_data['user_code'], is_active = form.cleaned_data['is_active'])\n            new_api_key.updated_at = timezone.now()\n            new_api_key.created_at = timezone.now()\n            new_api_key.save()\n            return HttpResponseRedirect('/nadooit-api-key/create-api-key?submitted=True')",
        "detail": "nadooit_api_key.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_auth.migrations.0001_initial",
        "description": "nadooit_auth.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('password', models.CharField(max_length=128, verbose_name='password')),",
        "detail": "nadooit_auth.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AuthConfig",
        "kind": 6,
        "importPath": "nadooit_auth.apps",
        "description": "nadooit_auth.apps",
        "peekOfCode": "class AuthConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_auth'",
        "detail": "nadooit_auth.apps",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "peekOfCode": "class User(AbstractUser,PermissionsMixin):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user_code = models.CharField(max_length=32, unique=True, editable=True, null=False, blank=False,default=get__new_user_code)\n    display_name = models.CharField(max_length=32, editable=True)\n    def __str__(self):\n        if self.display_name != \"\":\n            return self.display_name\n        else:\n            return self.username",
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "nadooit_auth.urls",
        "description": "nadooit_auth.urls",
        "peekOfCode": "urlpatterns = [\n    path('login-user', login_user, name=\"login-user\"),\n    path('logout-user', logout_user, name=\"logout-user\"),\n]",
        "detail": "nadooit_auth.urls",
        "documentation": {}
    },
    {
        "label": "get__new_user_code",
        "kind": 2,
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "peekOfCode": "def get__new_user_code() -> str:\n    user_code = ''.join(random.choice(string.ascii_letters + string.digits) for _ in range(6))\n    return user_code",
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "login_user",
        "kind": 2,
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "peekOfCode": "def login_user(request):\n    if request.method == \"POST\":\n        username = request.POST[\"username\"]\n        password = request.POST[\"password\"]\n        user = authenticate(request, username=username, password=password)\n        if user is not None:\n            print(\"found user\")\n            if user is not None:  # if the user object exist\n                from mfa.helpers import has_mfa\n                res = has_mfa(",
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "login_user_old",
        "kind": 2,
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "peekOfCode": "def login_user_old(request):\n    if request.method == \"POST\":\n        username = request.POST[\"username\"]\n        password = request.POST[\"password\"]\n        user = authenticate(request, username=username, password=password)\n        if user is not None:\n            login(request, user)\n            return redirect(request.GET.get(\"next\") or \"/nadooit-os\")\n        else:\n            messages.success(request, \"Username or Password is incorrect\")",
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "kind": 2,
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "peekOfCode": "def logout_user(request):\n    logout(request)\n    return redirect(\"/auth/login-user\")",
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_crm.migrations.0001_initial",
        "description": "nadooit_crm.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Address',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "nadooit_crm.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_crm.migrations.0002_remove_employee_customers_remove_employee_user",
        "description": "nadooit_crm.migrations.0002_remove_employee_customers_remove_employee_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='employee',\n            name='customers',\n        ),\n        migrations.RemoveField(",
        "detail": "nadooit_crm.migrations.0002_remove_employee_customers_remove_employee_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_crm.migrations.0003_delete_employee",
        "description": "nadooit_crm.migrations.0003_delete_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0002_remove_employee_customers_remove_employee_user'),\n        ('nadooit_time_account', '0002_alter_timeaccountemployee_employee'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='Employee',\n        ),\n    ]",
        "detail": "nadooit_crm.migrations.0003_delete_employee",
        "documentation": {}
    },
    {
        "label": "CustomerAdmin",
        "kind": 6,
        "importPath": "nadooit_crm.admin",
        "description": "nadooit_crm.admin",
        "peekOfCode": "class CustomerAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Customer._meta.fields]\nclass AddressAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Address._meta.fields]\n# Register your models here.\nadmin.site.register(Customer, CustomerAdmin)\nadmin.site.register(Address, AddressAdmin)\nadmin.site.register(ShippingAdress)\nadmin.site.register(BillingAdress)",
        "detail": "nadooit_crm.admin",
        "documentation": {}
    },
    {
        "label": "AddressAdmin",
        "kind": 6,
        "importPath": "nadooit_crm.admin",
        "description": "nadooit_crm.admin",
        "peekOfCode": "class AddressAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Address._meta.fields]\n# Register your models here.\nadmin.site.register(Customer, CustomerAdmin)\nadmin.site.register(Address, AddressAdmin)\nadmin.site.register(ShippingAdress)\nadmin.site.register(BillingAdress)",
        "detail": "nadooit_crm.admin",
        "documentation": {}
    },
    {
        "label": "NadooitCrmConfig",
        "kind": 6,
        "importPath": "nadooit_crm.apps",
        "description": "nadooit_crm.apps",
        "peekOfCode": "class NadooitCrmConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_crm'",
        "detail": "nadooit_crm.apps",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "peekOfCode": "class Address(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    street = models.CharField(max_length=255, null=True, blank=True)\n    house_number = models.CharField(max_length=255, null=True, blank=True)\n    town = models.CharField(max_length=255, null=True, blank=True)\n    postal_code = models.CharField(max_length=255, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return (",
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "ShippingAdress",
        "kind": 6,
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "peekOfCode": "class ShippingAdress(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    adress = models.ForeignKey(Address, on_delete=models.SET_NULL, null=True)\n    addressed_to = models.CharField(max_length=255, null=True, blank=True)\n    def __str__(self):\n        return (\n            self.addressed_to\n            + \", \"\n            + self.adress.street\n            + \" \"",
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "BillingAdress",
        "kind": 6,
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "peekOfCode": "class BillingAdress(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    adress = models.ForeignKey(Address, on_delete=models.SET_NULL, null=True)\n    addressed_to = models.CharField(max_length=255, null=True, blank=True)\n    def __str__(self):\n        return (\n            self.addressed_to\n            + \", \"\n            + self.adress.street\n            + \" \"",
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "peekOfCode": "class Customer(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    shipping_address = models.ForeignKey(\n        ShippingAdress, on_delete=models.SET_NULL, null=True\n    )\n    billing_address = models.ForeignKey(\n        BillingAdress, on_delete=models.SET_NULL, null=True",
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "NadooitDeliveryConfig",
        "kind": 6,
        "importPath": "nadooit_delivery.apps",
        "description": "nadooit_delivery.apps",
        "peekOfCode": "class NadooitDeliveryConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"nadooit_delivery\"",
        "detail": "nadooit_delivery.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "nadooit_delivery.models",
        "description": "nadooit_delivery.models",
        "peekOfCode": "class Order(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.customer.name + ' ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')\nclass OrderItem(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    order = models.ForeignKey(Order, on_delete=models.CASCADE)",
        "detail": "nadooit_delivery.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "nadooit_delivery.models",
        "description": "nadooit_delivery.models",
        "peekOfCode": "class OrderItem(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    order = models.ForeignKey(Order, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.product.name + ' ' + self.quantity.__str__()",
        "detail": "nadooit_delivery.models",
        "documentation": {}
    },
    {
        "label": "NadooitFunnelConfig",
        "kind": 6,
        "importPath": "nadooit_funnel.apps",
        "description": "nadooit_funnel.apps",
        "peekOfCode": "class NadooitFunnelConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_funnel'",
        "detail": "nadooit_funnel.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_hr.migrations.0001_initial",
        "description": "nadooit_hr.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_crm', '0002_remove_employee_customers_remove_employee_user'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Employee',\n            fields=[",
        "detail": "nadooit_hr.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitHrConfig",
        "kind": 6,
        "importPath": "nadooit_hr.apps",
        "description": "nadooit_hr.apps",
        "peekOfCode": "class NadooitHrConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_hr'",
        "detail": "nadooit_hr.apps",
        "documentation": {}
    },
    {
        "label": "Employee",
        "kind": 6,
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "peekOfCode": "class Employee(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    # a customers field that shows what customers the employee is assigned to\n    customers = models.ManyToManyField(Customer)\n    def __str__(self):\n        if self.user.display_name != \"\":\n            return self.user.display_name\n        else:\n            return self.user.username",
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_network.migrations.0001_initial",
        "description": "nadooit_network.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_program_ownership_system', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitInventory',\n            fields=[",
        "detail": "nadooit_network.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkConfig",
        "kind": 6,
        "importPath": "nadooit_network.apps",
        "description": "nadooit_network.apps",
        "peekOfCode": "class NadooitNetworkConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_network'",
        "detail": "nadooit_network.apps",
        "documentation": {}
    },
    {
        "label": "NadooitInventory",
        "kind": 6,
        "importPath": "nadooit_network.models",
        "description": "nadooit_network.models",
        "peekOfCode": "class NadooitInventory(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # Holds the amount of money in the inventory\n    money = models.IntegerField(default=0)\n    # Holds shares of programs\n    list_of_nadooit_program_ownership_shares = models.ManyToManyField(\n        NadooitProgramShare, blank=True\n    )\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)",
        "detail": "nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkMember",
        "kind": 6,
        "importPath": "nadooit_network.models",
        "description": "nadooit_network.models",
        "peekOfCode": "class NadooitNetworkMember(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    inventory = models.ForeignKey(NadooitInventory, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.user.display_name + \" \" + self.user.user_code\nclass NadooitNetworkFriendslist(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(NadooitNetworkMember, on_delete=models.CASCADE)\n    friend_list = models.ManyToManyField(",
        "detail": "nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkFriendslist",
        "kind": 6,
        "importPath": "nadooit_network.models",
        "description": "nadooit_network.models",
        "peekOfCode": "class NadooitNetworkFriendslist(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(NadooitNetworkMember, on_delete=models.CASCADE)\n    friend_list = models.ManyToManyField(\n        NadooitNetworkMember, related_name=\"friend_list\"\n    )\n    def __str__(self):\n        return (\n            self.user.user.display_name\n            + \" \"",
        "detail": "nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkGroup",
        "kind": 6,
        "importPath": "nadooit_network.models",
        "description": "nadooit_network.models",
        "peekOfCode": "class NadooitNetworkGroup(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # the group is made up of members. There is a limit of 10 members in a group.\n    members = models.ManyToManyField(NadooitNetworkMember, blank=True)\n    created_by = models.ForeignKey(\n        NadooitNetworkMember, on_delete=models.CASCADE, related_name=\"created_by\"\n    )\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self) -> str:",
        "detail": "nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkGuildMember",
        "kind": 6,
        "importPath": "nadooit_network.models",
        "description": "nadooit_network.models",
        "peekOfCode": "class NadooitNetworkGuildMember(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    nadooit_network_member = models.ForeignKey(\n        NadooitNetworkMember, on_delete=models.CASCADE\n    )\n    GUILD_ROLES = (\n        (\"MEMBER\", \"MEMBER\"),\n        (\"MODERATOR\", \"MODERATOR\"),\n        (\"ADMIN\", \"ADMIN\"),\n    )",
        "detail": "nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitGuildBank",
        "kind": 6,
        "importPath": "nadooit_network.models",
        "description": "nadooit_network.models",
        "peekOfCode": "class NadooitGuildBank(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    guild_inventory = models.ForeignKey(NadooitInventory, on_delete=models.CASCADE)\n    # the amount of money the user has in the guild bank.\nclass NadooitGuild(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)",
        "detail": "nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitGuild",
        "kind": 6,
        "importPath": "nadooit_network.models",
        "description": "nadooit_network.models",
        "peekOfCode": "class NadooitGuild(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    # Every guild has a members of type NadooitNetworkMember. Every NadooitNetworkMember can be a member of one guild.\n    member_list = models.ManyToManyField(NadooitNetworkGuildMember, blank=True)\n    guild_logo = models.ImageField(upload_to=\"guild_logo\", blank=True, null=True)\n    def __str__(self):",
        "detail": "nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitOsConfig",
        "kind": 6,
        "importPath": "nadooit_os.apps",
        "description": "nadooit_os.apps",
        "peekOfCode": "class NadooitOsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_os'",
        "detail": "nadooit_os.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "nadooit_os.urls",
        "description": "nadooit_os.urls",
        "peekOfCode": "urlpatterns = [\n    path('', index_nadooit_os, name=\"nadooit-os\"),\n]",
        "detail": "nadooit_os.urls",
        "documentation": {}
    },
    {
        "label": "index_nadooit_os",
        "kind": 2,
        "importPath": "nadooit_os.views",
        "description": "nadooit_os.views",
        "peekOfCode": "def index_nadooit_os(request):\n    return render(request, \"nadooit_os/index.html\")",
        "detail": "nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_program.migrations.0001_initial",
        "description": "nadooit_program.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitProgram',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),\n                ('name', models.CharField(max_length=255)),",
        "detail": "nadooit_program.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitProgramConfig",
        "kind": 6,
        "importPath": "nadooit_program.apps",
        "description": "nadooit_program.apps",
        "peekOfCode": "class NadooitProgramConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_program'",
        "detail": "nadooit_program.apps",
        "documentation": {}
    },
    {
        "label": "NadooitProgram",
        "kind": 6,
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "peekOfCode": "class NadooitProgram(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    # program_dependencies is a list of programs that this program depends on. They are represented as a list of strings. The list is empty if there are no dependencies.\n    program_dependencies = models.TextField(\n        default=\"\", blank=True, null=True, editable=True\n    )",
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_program_ownership_system.migrations.0001_initial",
        "description": "nadooit_program_ownership_system.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_time_account', '0001_initial'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_program', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitProgramShare',",
        "detail": "nadooit_program_ownership_system.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitProgramOwnershipSystemConfig",
        "kind": 6,
        "importPath": "nadooit_program_ownership_system.apps",
        "description": "nadooit_program_ownership_system.apps",
        "peekOfCode": "class NadooitProgramOwnershipSystemConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_program_ownership_system'",
        "detail": "nadooit_program_ownership_system.apps",
        "documentation": {}
    },
    {
        "label": "NadooitProgramShare",
        "kind": 6,
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "peekOfCode": "class NadooitProgramShare(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    share_of = models.ForeignKey(NadooitProgram, on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.id\nclass NadooitCustomerProgram(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    program_time_saved_per_execution_in_seconds = models.IntegerField(default=0)",
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "NadooitCustomerProgram",
        "kind": 6,
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "peekOfCode": "class NadooitCustomerProgram(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    program_time_saved_per_execution_in_seconds = models.IntegerField(default=0)\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.SET_NULL, null=True)\n    over_charge = models.BooleanField(default=False)\n    program = models.ForeignKey(NadooitProgram, on_delete=models.SET_NULL, null=True)\n    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):",
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "NadooitQuestionsAndAnswersConfig",
        "kind": 6,
        "importPath": "nadooit_questions_and_answers.apps",
        "description": "nadooit_questions_and_answers.apps",
        "peekOfCode": "class NadooitQuestionsAndAnswersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_questions_and_answers'",
        "detail": "nadooit_questions_and_answers.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_time_account.migrations.0001_initial",
        "description": "nadooit_time_account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='TimeAccount',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "nadooit_time_account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_time_account.migrations.0002_alter_timeaccountemployee_employee",
        "description": "nadooit_time_account.migrations.0002_alter_timeaccountemployee_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n        ('nadooit_time_account', '0001_initial'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='timeaccountemployee',\n            name='employee',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nadooit_hr.employee'),",
        "detail": "nadooit_time_account.migrations.0002_alter_timeaccountemployee_employee",
        "documentation": {}
    },
    {
        "label": "NadooitTimeaccountConfig",
        "kind": 6,
        "importPath": "nadooit_time_account.apps",
        "description": "nadooit_time_account.apps",
        "peekOfCode": "class NadooitTimeaccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_time_account'",
        "detail": "nadooit_time_account.apps",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "kind": 6,
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "peekOfCode": "class TimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    time_balance_in_seconds = models.BigIntegerField(null=True, blank=True, default=0)\n    def __str__(self):\n        return (\n            get_time_as_string_in_hour_format_for_time_in_seconds_as_integer(\n                self.time_balance_in_seconds\n            )\n            + \" \"\n            + str(self.id)",
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountEmployee",
        "kind": 6,
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "peekOfCode": "class TimeAccountEmployee(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.CASCADE)\n    employee = models.ForeignKey(Employee, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        if self.employee.user.display_name == \"\":\n            return (",
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerNadooitTimeAccount",
        "kind": 6,
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "peekOfCode": "class CustomerNadooitTimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return (\n            self.customer.name\n            + \" \"",
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "WorkTimeAccountEntry",
        "kind": 6,
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "peekOfCode": "class WorkTimeAccountEntry(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    time_account = models.ForeignKey(TimeAccountEmployee, on_delete=models.CASCADE)\n    work_time = models.TimeField(null=True, blank=True)\n    work_date = models.DateField(null=True, blank=True)\n    ENTRY_TYPE = (\n        (\"IN\", \"IN\"),\n        (\"OUT\", \"OUT\"),\n    )\n    entry_trype = models.CharField(max_length=3, choices=ENTRY_TYPE, default=\"IN\")",
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "get_time_as_string_in_hour_format_for_time_in_seconds_as_integer",
        "kind": 2,
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "peekOfCode": "def get_time_as_string_in_hour_format_for_time_in_seconds_as_integer(time):\n    return str(time // 3600) + \":\" + str((time % 3600) // 60) + \":\" + str(time % 60)\n# Create your models here.\nclass TimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    time_balance_in_seconds = models.BigIntegerField(null=True, blank=True, default=0)\n    def __str__(self):\n        return (\n            get_time_as_string_in_hour_format_for_time_in_seconds_as_integer(\n                self.time_balance_in_seconds",
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "NadooitWebsiteConfig",
        "kind": 6,
        "importPath": "nadooit_website.apps",
        "description": "nadooit_website.apps",
        "peekOfCode": "class NadooitWebsiteConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_website'",
        "detail": "nadooit_website.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "nadooit_website.urls",
        "description": "nadooit_website.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.index, name=\"index\"),\n    path(\"impressum\", views.impressum, name=\"impressum\"),\n    path(\"datenschutz\", views.datenschutz, name=\"datenschutz\"),\n]",
        "detail": "nadooit_website.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "nadooit_website.views",
        "description": "nadooit_website.views",
        "peekOfCode": "def index(request):\n    return render(request, \"nadooit_website/index.html\", {})\ndef impressum(request):\n    return render(request, \"nadooit_website/impressum.html\", {})\ndef datenschutz(request):\n    return render(request, \"nadooit_website/datenschutz.html\", {})",
        "detail": "nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "impressum",
        "kind": 2,
        "importPath": "nadooit_website.views",
        "description": "nadooit_website.views",
        "peekOfCode": "def impressum(request):\n    return render(request, \"nadooit_website/impressum.html\", {})\ndef datenschutz(request):\n    return render(request, \"nadooit_website/datenschutz.html\", {})",
        "detail": "nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "datenschutz",
        "kind": 2,
        "importPath": "nadooit_website.views",
        "description": "nadooit_website.views",
        "peekOfCode": "def datenschutz(request):\n    return render(request, \"nadooit_website/datenschutz.html\", {})",
        "detail": "nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "nadooit_workflow.migrations.0001_initial",
        "description": "nadooit_workflow.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_program', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Process',\n            fields=[",
        "detail": "nadooit_workflow.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitWorkflowConfig",
        "kind": 6,
        "importPath": "nadooit_workflow.apps",
        "description": "nadooit_workflow.apps",
        "peekOfCode": "class NadooitWorkflowConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"nadooit_workflow\"",
        "detail": "nadooit_workflow.apps",
        "documentation": {}
    },
    {
        "label": "Process",
        "kind": 6,
        "importPath": "nadooit_workflow.models",
        "description": "nadooit_workflow.models",
        "peekOfCode": "class Process(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    # process_trigger_evnets is a list of events that trigger the process. They are represented as a list of strings.\n    # process_trigger_events = models.CharField(max_length=255)\t#list of events that trigger the process.\n    # process_subscriptions = models.CharField(max_length=255)\n    trigger_process = models.ForeignKey(\"self\", on_delete=models.SET_NULL, null=True)\n    tiggers_process = models.ManyToManyField(\"self\", blank=True)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    description = models.TextField()",
        "detail": "nadooit_workflow.models",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "A",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_attributes",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_attributes",
        "peekOfCode": "A = pgv.AGraph(directed=True, strict=True, rankdir=\"LR\")\n# add node 1 with color red\nA.add_node(1, color=\"red\")\nA.add_node(5, color=\"blue\")\n# add some edges\nA.add_edge(1, 2, color=\"green\")\nA.add_edge(2, 3)\nA.add_edge(1, 3)\nA.add_edge(3, 4)\nA.add_edge(3, 5)",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_attributes",
        "documentation": {}
    },
    {
        "label": "A.graph_attr[\"epsilon\"]",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_attributes",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_attributes",
        "peekOfCode": "A.graph_attr[\"epsilon\"] = \"0.001\"\nprint(A.string())  # print dot file to standard output\nA.layout(\"dot\")  # layout with dot\nA.draw(\"foo.png\")  # write to file",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_attributes",
        "documentation": {}
    },
    {
        "label": "miles_graph",
        "kind": 2,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_miles",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_miles",
        "peekOfCode": "def miles_graph():\n    \"\"\"Return a graph from the data in miles_dat.txt.\n    Edges are made between cities that are less then 300 miles apart.\n    \"\"\"\n    import math\n    import re\n    import gzip\n    G = pgv.AGraph(name=\"miles_dat\")\n    G.node_attr[\"shape\"] = \"circle\"\n    G.node_attr[\"fixedsize\"] = \"true\"",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_miles",
        "documentation": {}
    },
    {
        "label": "__author__",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_miles",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_miles",
        "peekOfCode": "__author__ = \"\"\"Aric Hagberg (aric.hagberg@gmail.com)\"\"\"\ndef miles_graph():\n    \"\"\"Return a graph from the data in miles_dat.txt.\n    Edges are made between cities that are less then 300 miles apart.\n    \"\"\"\n    import math\n    import re\n    import gzip\n    G = pgv.AGraph(name=\"miles_dat\")\n    G.node_attr[\"shape\"] = \"circle\"",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_miles",
        "documentation": {}
    },
    {
        "label": "__author__",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "peekOfCode": "__author__ = \"\"\"Aric Hagberg (hagberg@lanl.gov)\"\"\"\nimport pygraphviz as pgv\nA = pgv.AGraph()\nA.add_edge(1, 2)\nA.add_edge(2, 3)\nA.add_edge(1, 3)\nprint(A.string())  # print to screen\nA.write(\"simple.dot\")  # write to simple.dot\nB = pgv.AGraph(\"simple.dot\")  # create a new graph from file\nB.layout()  # layout with default (neato)",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "documentation": {}
    },
    {
        "label": "A",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "peekOfCode": "A = pgv.AGraph()\nA.add_edge(1, 2)\nA.add_edge(2, 3)\nA.add_edge(1, 3)\nprint(A.string())  # print to screen\nA.write(\"simple.dot\")  # write to simple.dot\nB = pgv.AGraph(\"simple.dot\")  # create a new graph from file\nB.layout()  # layout with default (neato)\nB.draw(\"simple.png\")  # draw png",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "documentation": {}
    },
    {
        "label": "B",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "peekOfCode": "B = pgv.AGraph(\"simple.dot\")  # create a new graph from file\nB.layout()  # layout with default (neato)\nB.draw(\"simple.png\")  # draw png",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_simple",
        "documentation": {}
    },
    {
        "label": "__author__",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "peekOfCode": "__author__ = \"\"\"Aric Hagberg (hagberg@lanl.gov)\"\"\"\nfrom pygraphviz import *\nA = AGraph()\n# set some default node attributes\nA.node_attr[\"style\"] = \"filled\"\nA.node_attr[\"shape\"] = \"circle\"\nA.node_attr[\"fixedsize\"] = \"true\"\nA.node_attr[\"fontcolor\"] = \"#FFFFFF\"\n# make a star in shades of red\nfor i in range(1, 16):",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "documentation": {}
    },
    {
        "label": "A",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "peekOfCode": "A = AGraph()\n# set some default node attributes\nA.node_attr[\"style\"] = \"filled\"\nA.node_attr[\"shape\"] = \"circle\"\nA.node_attr[\"fixedsize\"] = \"true\"\nA.node_attr[\"fontcolor\"] = \"#FFFFFF\"\n# make a star in shades of red\nfor i in range(1, 16):\n    A.add_edge(0, i)\n    n = A.get_node(i)",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "documentation": {}
    },
    {
        "label": "A.node_attr[\"style\"]",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "peekOfCode": "A.node_attr[\"style\"] = \"filled\"\nA.node_attr[\"shape\"] = \"circle\"\nA.node_attr[\"fixedsize\"] = \"true\"\nA.node_attr[\"fontcolor\"] = \"#FFFFFF\"\n# make a star in shades of red\nfor i in range(1, 16):\n    A.add_edge(0, i)\n    n = A.get_node(i)\n    n.attr[\"fillcolor\"] = f\"#{i * 16:2x}0000\"\n    n.attr[\"height\"] = f\"{i / 16.0 + 0.5}\"",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "documentation": {}
    },
    {
        "label": "A.node_attr[\"shape\"]",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "peekOfCode": "A.node_attr[\"shape\"] = \"circle\"\nA.node_attr[\"fixedsize\"] = \"true\"\nA.node_attr[\"fontcolor\"] = \"#FFFFFF\"\n# make a star in shades of red\nfor i in range(1, 16):\n    A.add_edge(0, i)\n    n = A.get_node(i)\n    n.attr[\"fillcolor\"] = f\"#{i * 16:2x}0000\"\n    n.attr[\"height\"] = f\"{i / 16.0 + 0.5}\"\n    n.attr[\"width\"] = f\"{i / 16.0 + 0.5}\"",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "documentation": {}
    },
    {
        "label": "A.node_attr[\"fixedsize\"]",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "peekOfCode": "A.node_attr[\"fixedsize\"] = \"true\"\nA.node_attr[\"fontcolor\"] = \"#FFFFFF\"\n# make a star in shades of red\nfor i in range(1, 16):\n    A.add_edge(0, i)\n    n = A.get_node(i)\n    n.attr[\"fillcolor\"] = f\"#{i * 16:2x}0000\"\n    n.attr[\"height\"] = f\"{i / 16.0 + 0.5}\"\n    n.attr[\"width\"] = f\"{i / 16.0 + 0.5}\"\nprint(A.string())  # print to screen",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "documentation": {}
    },
    {
        "label": "A.node_attr[\"fontcolor\"]",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "peekOfCode": "A.node_attr[\"fontcolor\"] = \"#FFFFFF\"\n# make a star in shades of red\nfor i in range(1, 16):\n    A.add_edge(0, i)\n    n = A.get_node(i)\n    n.attr[\"fillcolor\"] = f\"#{i * 16:2x}0000\"\n    n.attr[\"height\"] = f\"{i / 16.0 + 0.5}\"\n    n.attr[\"width\"] = f\"{i / 16.0 + 0.5}\"\nprint(A.string())  # print to screen\nA.write(\"star.dot\")  # write to simple.dot",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_star",
        "documentation": {}
    },
    {
        "label": "A",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "peekOfCode": "A = pgv.AGraph()\n# add some edges\nA.add_edge(1, 2)\nA.add_edge(2, 3)\nA.add_edge(1, 3)\nA.add_edge(3, 4)\nA.add_edge(3, 5)\nA.add_edge(3, 6)\nA.add_edge(4, 6)\n# make a subgraph with rank='same'",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "documentation": {}
    },
    {
        "label": "B",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "peekOfCode": "B = A.add_subgraph([4, 5, 6], name=\"s1\", rank=\"same\")\nB.graph_attr[\"rank\"] = \"same\"\nprint(A.string())  # print dot file to standard output\nA.draw(\"subgraph.png\", prog=\"neato\")",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "documentation": {}
    },
    {
        "label": "B.graph_attr[\"rank\"]",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "description": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "peekOfCode": "B.graph_attr[\"rank\"] = \"same\"\nprint(A.string())  # print dot file to standard output\nA.draw(\"subgraph.png\", prog=\"neato\")",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.plot_subgraph",
        "documentation": {}
    },
    {
        "label": "pygraphviz_graph",
        "kind": 2,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.skip_django_simple",
        "description": "venv.share.doc.pygraphviz-1.10.examples.skip_django_simple",
        "peekOfCode": "def pygraphviz_graph(request):\n    import pygraphviz as P\n    A = P.AGraph()  # init empty graph\n    # set some default node attributes\n    A.node_attr[\"style\"] = \"filled\"\n    A.node_attr[\"shape\"] = \"circle\"\n    # Add edges (and nodes)\n    A.add_edge(1, 2)\n    A.add_edge(2, 3)\n    A.add_edge(1, 3)",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.skip_django_simple",
        "documentation": {}
    },
    {
        "label": "__author__",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.skip_django_simple",
        "description": "venv.share.doc.pygraphviz-1.10.examples.skip_django_simple",
        "peekOfCode": "__author__ = \"\"\"Aric Hagberg (hagberg@lanl.gov)\"\"\"\ntry:\n    from django.http import HttpResponse\nexcept ImportError:  # this won't run without Django, print message\n    print(\"Django not found.\")\ndef pygraphviz_graph(request):\n    import pygraphviz as P\n    A = P.AGraph()  # init empty graph\n    # set some default node attributes\n    A.node_attr[\"style\"] = \"filled\"",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.skip_django_simple",
        "documentation": {}
    },
    {
        "label": "A",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "description": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "peekOfCode": "A = pgv.AGraph(encoding=\"UTF-8\")\n# nodes, attributes, etc can be strings or unicode\nA.add_node(1, label=\"plain string\")\nA.add_node(2, label=\"unicode\")\n# you can enter unicode text as\nhello = \"Здравствуйте!\"\nA.add_node(3, label=hello)\n# or using unicode code points\nhello = \"\\u0417\\u0434\\u0440\\u0430\\u0432\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435!\"\nA.add_node(hello)  # unicode node label",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "documentation": {}
    },
    {
        "label": "hello",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "description": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "peekOfCode": "hello = \"Здравствуйте!\"\nA.add_node(3, label=hello)\n# or using unicode code points\nhello = \"\\u0417\\u0434\\u0440\\u0430\\u0432\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435!\"\nA.add_node(hello)  # unicode node label\ngoodbye = \"До свидания\"\nA.add_edge(1, hello, key=goodbye)\nA.add_edge(\"שלום\", hello)\n# A.add_edge(1,3,hello=\"こんにちは / ｺﾝﾆﾁﾊ\")\nA.add_edge(1, \"こんにちは\")",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "documentation": {}
    },
    {
        "label": "hello",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "description": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "peekOfCode": "hello = \"\\u0417\\u0434\\u0440\\u0430\\u0432\\u0441\\u0442\\u0432\\u0443\\u0439\\u0442\\u0435!\"\nA.add_node(hello)  # unicode node label\ngoodbye = \"До свидания\"\nA.add_edge(1, hello, key=goodbye)\nA.add_edge(\"שלום\", hello)\n# A.add_edge(1,3,hello=\"こんにちは / ｺﾝﾆﾁﾊ\")\nA.add_edge(1, \"こんにちは\")\nprint(A)  # print to screen\nA.write(\"utf8.dot\")  # write to simple.dot",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "documentation": {}
    },
    {
        "label": "goodbye",
        "kind": 5,
        "importPath": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "description": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "peekOfCode": "goodbye = \"До свидания\"\nA.add_edge(1, hello, key=goodbye)\nA.add_edge(\"שלום\", hello)\n# A.add_edge(1,3,hello=\"こんにちは / ｺﾝﾆﾁﾊ\")\nA.add_edge(1, \"こんにちは\")\nprint(A)  # print to screen\nA.write(\"utf8.dot\")  # write to simple.dot",
        "detail": "venv.share.doc.pygraphviz-1.10.examples.skip_utf8_encoding",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nadooit.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]