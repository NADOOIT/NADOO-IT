[
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpRequest",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "template",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "messages",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "mfa",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mfa",
        "description": "mfa",
        "detail": "mfa",
        "documentation": {}
    },
    {
        "label": "mfa.TrustedDevice",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mfa.TrustedDevice",
        "description": "mfa.TrustedDevice",
        "detail": "mfa.TrustedDevice",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "decimal",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "decimal",
        "description": "decimal",
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "Decimal",
        "importPath": "decimal",
        "description": "decimal",
        "isExtraImport": true,
        "detail": "decimal",
        "documentation": {}
    },
    {
        "label": "djmoney.models.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "djmoney.models.fields",
        "description": "djmoney.models.fields",
        "detail": "djmoney.models.fields",
        "documentation": {}
    },
    {
        "label": "MoneyField",
        "importPath": "djmoney.models.fields",
        "description": "djmoney.models.fields",
        "isExtraImport": true,
        "detail": "djmoney.models.fields",
        "documentation": {}
    },
    {
        "label": "MoneyField",
        "importPath": "djmoney.models.fields",
        "description": "djmoney.models.fields",
        "isExtraImport": true,
        "detail": "djmoney.models.fields",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Address",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "BillingAdress",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "ShippingAdress",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "nadooit_crm.models",
        "description": "nadooit_crm.models",
        "isExtraImport": true,
        "detail": "nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecutionManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecutionManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountManagerContract",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Employee",
        "importPath": "nadooit_hr.models",
        "description": "nadooit_hr.models",
        "isExtraImport": true,
        "detail": "nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "ProgramShare",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "nadooit_program_ownership_system.models",
        "description": "nadooit_program_ownership_system.models",
        "isExtraImport": true,
        "detail": "nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "isExtraImport": true,
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "isExtraImport": true,
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "Program",
        "importPath": "nadooit_program.models",
        "description": "nadooit_program.models",
        "isExtraImport": true,
        "detail": "nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerTimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "get_time_as_string_in_hour_format_for_time_in_seconds_as_integer",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerTimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "EmployeeTimeAccount",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "WorkTimeAccountEntry",
        "importPath": "nadooit_time_account.models",
        "description": "nadooit_time_account.models",
        "isExtraImport": true,
        "detail": "nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "importPath": "nadooit_api_executions_system.models",
        "description": "nadooit_api_executions_system.models",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "baker",
        "importPath": "model_bakery",
        "description": "model_bakery",
        "isExtraImport": true,
        "detail": "model_bakery",
        "documentation": {}
    },
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "create_execution",
        "importPath": "nadooit_api_executions_system.views",
        "description": "nadooit_api_executions_system.views",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "check_user",
        "importPath": "nadooit_api_executions_system.views",
        "description": "nadooit_api_executions_system.views",
        "isExtraImport": true,
        "detail": "nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKeyManager",
        "importPath": "nadooit_api_key.models",
        "description": "nadooit_api_key.models",
        "isExtraImport": true,
        "detail": "nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "nadooit_auth.models",
        "description": "nadooit_auth.models",
        "isExtraImport": true,
        "detail": "nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "get__nadooit_api_key__for__hashed_api_key",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__hashed_api_key__for__request",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__nadooit_api_key__has__is_active",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__user_code__for__nadooit_api_key",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__new_price_per_second__for__customer_program",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_contract__for__employee__and__customer_id",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_contract__for__employee_contract_id",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee__for__user_code",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_manager_contract__for__employee_contract",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "set__employee_contract__is_active_state__for__employee_contract_id",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "set_employee_contract__as_inactive__for__employee_contract_id",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__user__exists__for__user_code",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_manager_contract__exists__for__employee_contract",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_manager_contract__for__user__can_deactivate__employee_contracts",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_manager_contract__for__user__can_give_manager_role",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__more_then_one_contract_between__user_code__and__customer_id",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_manager_contract__for__user_code__and__customer_id",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__customer__exists__for__customer_id",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_contract__for__user_code__and__customer_id",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__list_of_customers__for__employee_manager_contract__for_user",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_manager_contract__exists__for__employee_manager_and_customer__and__can_add_users__and__is_active",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__next_price_level__for__customer_program",
        "importPath": "nadooit_os.services",
        "description": "nadooit_os.services",
        "isExtraImport": true,
        "detail": "nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "PermissionsMixin",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "nadooit_auth.user_code",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "get__new_user_code",
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "isExtraImport": true,
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "check__valid_user_code",
        "importPath": "nadooit_auth.user_code",
        "description": "nadooit_auth.user_code",
        "isExtraImport": true,
        "detail": "nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "BaseBackend",
        "importPath": "django.contrib.auth.backends",
        "description": "django.contrib.auth.backends",
        "isExtraImport": true,
        "detail": "django.contrib.auth.backends",
        "documentation": {}
    },
    {
        "label": "login_user",
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "isExtraImport": true,
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "isExtraImport": true,
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "register_user",
        "importPath": "nadooit_auth.views",
        "description": "nadooit_auth.views",
        "isExtraImport": true,
        "detail": "nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "string",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "string",
        "description": "string",
        "detail": "string",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user_passes_test",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user_passes_test",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "importPath": "nadooit.settings",
        "description": "nadooit.settings",
        "isExtraImport": true,
        "detail": "nadooit.settings",
        "documentation": {}
    },
    {
        "label": "get__new_username",
        "importPath": "nadooit_auth.username",
        "description": "nadooit_auth.username",
        "isExtraImport": true,
        "detail": "nadooit_auth.username",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "default",
        "importPath": "email.policy",
        "description": "email.policy",
        "isExtraImport": true,
        "detail": "email.policy",
        "documentation": {}
    },
    {
        "label": "KeyManager",
        "importPath": "nadooit_key.models",
        "description": "nadooit_key.models",
        "isExtraImport": true,
        "detail": "nadooit_key.models",
        "documentation": {}
    },
    {
        "label": "label",
        "importPath": "cProfile",
        "description": "cProfile",
        "isExtraImport": true,
        "detail": "cProfile",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "ModelChoiceField",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "nadooit_os.views",
        "description": "nadooit_os.views",
        "isExtraImport": true,
        "detail": "nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "require_POST",
        "importPath": "django.views.decorators.http",
        "description": "django.views.decorators.http",
        "isExtraImport": true,
        "detail": "django.views.decorators.http",
        "documentation": {}
    },
    {
        "label": "Complaint",
        "importPath": "nadoo_complaint_management.models",
        "description": "nadoo_complaint_management.models",
        "isExtraImport": true,
        "detail": "nadoo_complaint_management.models",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "requests",
        "description": "requests",
        "isExtraImport": true,
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "Process",
        "importPath": "nadooit_workflow.models",
        "description": "nadooit_workflow.models",
        "isExtraImport": true,
        "detail": "nadooit_workflow.models",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "is_url_active",
        "kind": 2,
        "importPath": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "description": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "peekOfCode": "def is_url_active(request: HttpRequest, url: str) -> str:\n    # Main idea is to check if the url and the current path is a match\n    if reverse(url) == request.path:\n        return \"active-link\"\n    # print(\"url: \", url)\n    # print(\"request.path: \", request.path)\n    if request.path in reverse(url) and len(request.path) > 1:\n        return \"active-link\"\n    return \"\"",
        "detail": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "documentation": {}
    },
    {
        "label": "register",
        "kind": 5,
        "importPath": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "description": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "peekOfCode": "register = template.Library()\n@register.simple_tag\ndef is_url_active(request: HttpRequest, url: str) -> str:\n    # Main idea is to check if the url and the current path is a match\n    if reverse(url) == request.path:\n        return \"active-link\"\n    # print(\"url: \", url)\n    # print(\"request.path: \", request.path)\n    if request.path in reverse(url) and len(request.path) > 1:\n        return \"active-link\"",
        "detail": "app.django_is_url_active_templatetag.templatetags.is_url_active_templatetag",
        "documentation": {}
    },
    {
        "label": "DjangoIsUrlActiveTemplatetagConfig",
        "kind": 6,
        "importPath": "app.django_is_url_active_templatetag.apps",
        "description": "app.django_is_url_active_templatetag.apps",
        "peekOfCode": "class DjangoIsUrlActiveTemplatetagConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'django_is_url_active_templatetag'",
        "detail": "app.django_is_url_active_templatetag.apps",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.nadooit.asgi",
        "description": "app.nadooit.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "app.nadooit.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = os.environ.get(\"DJANGO_SECRET_KEY\", \"changeme\")\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBUG = True\nDEBUG = bool(int(os.environ.get(\"DJANGO_DEBUG\", 0)))\n# The list of allowed hosts is set in the environment variable DJANGO_ALLOWED_HOSTS\n# The value is a comma separated list of hosts",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "SECRET_KEY = os.environ.get(\"DJANGO_SECRET_KEY\", \"changeme\")\n# SECURITY WARNING: don't run with debug turned on in production!\n# DEBUG = True\nDEBUG = bool(int(os.environ.get(\"DJANGO_DEBUG\", 0)))\n# The list of allowed hosts is set in the environment variable DJANGO_ALLOWED_HOSTS\n# The value is a comma separated list of hosts\n# Example: DJANGO_ALLOWED_HOSTS= \"localhost, nadooit.de,\nALLOWED_HOSTS = [] if DEBUG else os.environ.get(\"DJANGO_ALLOWED_HOSTS\", \"\").split(\",\")\n# Application definition\n# This is the list of installed apps. If a new app is added, it must be added here.",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "DEBUG = bool(int(os.environ.get(\"DJANGO_DEBUG\", 0)))\n# The list of allowed hosts is set in the environment variable DJANGO_ALLOWED_HOSTS\n# The value is a comma separated list of hosts\n# Example: DJANGO_ALLOWED_HOSTS= \"localhost, nadooit.de,\nALLOWED_HOSTS = [] if DEBUG else os.environ.get(\"DJANGO_ALLOWED_HOSTS\", \"\").split(\",\")\n# Application definition\n# This is the list of installed apps. If a new app is added, it must be added here.\n# The order of the apps is important. The apps are loaded in the order they are listed here.\n# See the documentation of the apps for more information.\nINSTALLED_APPS = [",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "ALLOWED_HOSTS = [] if DEBUG else os.environ.get(\"DJANGO_ALLOWED_HOSTS\", \"\").split(\",\")\n# Application definition\n# This is the list of installed apps. If a new app is added, it must be added here.\n# The order of the apps is important. The apps are loaded in the order they are listed here.\n# See the documentation of the apps for more information.\nINSTALLED_APPS = [\n    \"sslserver\",\n    \"django_is_url_active_templatetag\",\n    \"grappelli\",\n    \"django.contrib.admin\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"sslserver\",\n    \"django_is_url_active_templatetag\",\n    \"grappelli\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"django_htmx.middleware.HtmxMiddleware\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "AUTHENTICATION_BACKENDS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "AUTHENTICATION_BACKENDS = [\n    \"django.contrib.auth.backends.ModelBackend\",\n    \"nadooit_auth.custom_user_code_auth_backend.UserCodeBackend\",\n]\n# Configure how templates are loaded.\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [os.path.join(BASE_DIR, \"templates\")],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "STATICFILES_DIRS = [(os.path.join(BASE_DIR, \"static\")), \"/var/www/static/\"]\n# STATIC_URL = \"/static/\"\nSTATIC_URL = \"/static/static/\"\nMEDIA_URL = \"/static/media/\"\nSTATIC_ROOT = \"/vol/web/static/\"\nMEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "STATIC_URL = \"/static/static/\"\nMEDIA_URL = \"/static/media/\"\nSTATIC_ROOT = \"/vol/web/static/\"\nMEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MEDIA_URL = \"/static/media/\"\nSTATIC_ROOT = \"/vol/web/static/\"\nMEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "STATIC_ROOT = \"/vol/web/static/\"\nMEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MEDIA_ROOT = \"/vol/web/media/\"\nROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "ROOT_URLCONF = \"nadooit.urls\"\n# The WSGI application is used to serve the application.\n# The WSGI application is called by the webserver.\n# This is the entry point for the application.\nWSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django_cockroachdb\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "WSGI_APPLICATION = \"nadooit.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django_cockroachdb\",\n        \"NAME\": os.environ.get(\"COCKROACH_DB_NAME\"),\n        \"USER\": os.environ.get(\"COCKROACH_DB_USER\"),\n        \"PASSWORD\": os.environ.get(\"COCKROACH_DB_PASSWORD\"),\n        \"HOST\": os.environ.get(\"COCKROACH_DB_HOST\"),",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django_cockroachdb\",\n        \"NAME\": os.environ.get(\"COCKROACH_DB_NAME\"),\n        \"USER\": os.environ.get(\"COCKROACH_DB_USER\"),\n        \"PASSWORD\": os.environ.get(\"COCKROACH_DB_PASSWORD\"),\n        \"HOST\": os.environ.get(\"COCKROACH_DB_HOST\"),\n        \"PORT\": os.environ.get(\"COCKROACH_DB_PORT\"),\n        \"OPTIONS\": {\n            \"sslmode\": \"verify-full\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "AUTH_USER_MODEL = \"nadooit_auth.User\"\n# Password validation\nCSRF_TRUSTED_ORIGINS = [os.environ.get(\"DJANGO_CSRF_TRUSTED_ORIGINS\")]\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "CSRF_TRUSTED_ORIGINS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "CSRF_TRUSTED_ORIGINS = [os.environ.get(\"DJANGO_CSRF_TRUSTED_ORIGINS\")]\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nINTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Settings for additional apps",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "INTERNAL_IPS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "INTERNAL_IPS = [\n    \"127.0.0.1\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Settings for additional apps\n# Settings for Django Crispy Forms\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n# Settings for additional apps\n# Settings for Django Crispy Forms\nCRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_ALLOWED_TEMPLATE_PACKS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "CRISPY_ALLOWED_TEMPLATE_PACKS = \"bootstrap5\"\nCRISPY_TEMPLATE_PACK = \"bootstrap5\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "CRISPY_TEMPLATE_PACK",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "CRISPY_TEMPLATE_PACK = \"bootstrap5\"\n# PWA settings\nPWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_SERVICE_WORKER_PATH",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_SERVICE_WORKER_PATH = os.path.join(\n    BASE_DIR, \"static\", \"static\", \"js\", \"nadooit_serviceworker.js\"\n)\nPWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_NAME",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_NAME = \"NADOOIT\"\nPWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DESCRIPTION",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_DESCRIPTION = \"NADOOIT PWA\"\nPWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_THEME_COLOR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_THEME_COLOR = \"#000000\"\nPWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_BACKGROUND_COLOR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_BACKGROUND_COLOR = \"#ffffff\"\nPWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DISPLAY",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_DISPLAY = \"standalone\"\nPWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_SCOPE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_SCOPE = \"/\"\nPWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ORIENTATION",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_ORIENTATION = \"any\"\nPWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_START_URL",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_START_URL = \"/nadooit-os\"\nPWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_STATUS_BAR_COLOR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_STATUS_BAR_COLOR = \"default\"\nPWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"/static/static/splashscreen/nadooit.png\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ICONS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_ICONS = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"/static/static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_ICONS_APPLE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_ICONS_APPLE = [\n    {\"src\": \"/static/static/static/appicon/maskable_icon_x192.png\", \"sizes\": \"192x192\"}\n]\nPWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"/static/static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",\n    }\n]\nPWA_APP_DIR = \"ltr\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_SPLASH_SCREEN",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_SPLASH_SCREEN = [\n    {\n        \"src\": \"/static/static/splashscreen/nadooit.png\",\n        \"media\": \"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\",\n    }\n]\nPWA_APP_DIR = \"ltr\"\nPWA_APP_LANG = \"de-DE\"\n# MFA settings\nMFA_UNALLOWED_METHODS = (",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_DIR",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_DIR = \"ltr\"\nPWA_APP_LANG = \"de-DE\"\n# MFA settings\nMFA_UNALLOWED_METHODS = (\n    \"TOTP\",\n    \"Email\",\n    \"U2F\",\n    \"Trusted_Devices\",\n    \"RECOVERY\",\n)  # Methods that shouldn't be allowed for the user",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "PWA_APP_LANG",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "PWA_APP_LANG = \"de-DE\"\n# MFA settings\nMFA_UNALLOWED_METHODS = (\n    \"TOTP\",\n    \"Email\",\n    \"U2F\",\n    \"Trusted_Devices\",\n    \"RECOVERY\",\n)  # Methods that shouldn't be allowed for the user\nMFA_LOGIN_CALLBACK = \"nadooit_auth.views.log_user_in\"  # A function that should be called by username to login the user in session",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_UNALLOWED_METHODS",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_UNALLOWED_METHODS = (\n    \"TOTP\",\n    \"Email\",\n    \"U2F\",\n    \"Trusted_Devices\",\n    \"RECOVERY\",\n)  # Methods that shouldn't be allowed for the user\nMFA_LOGIN_CALLBACK = \"nadooit_auth.views.log_user_in\"  # A function that should be called by username to login the user in session\nMFA_RECHECK = True  # Allow random rechecking of the user\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_LOGIN_CALLBACK",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_LOGIN_CALLBACK = \"nadooit_auth.views.log_user_in\"  # A function that should be called by username to login the user in session\nMFA_RECHECK = True  # Allow random rechecking of the user\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_RECHECK = True  # Allow random rechecking of the user\nMFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK_MIN",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_RECHECK_MIN = 10  # Minimum interval in seconds\nMFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_RECHECK_MAX",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_RECHECK_MAX = 30  # Maximum in seconds\nMFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_QUICKLOGIN",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_QUICKLOGIN = True  # Allow quick login for returning users by provide only their 2FA\nMFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )\nelse:",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_HIDE_DISABLE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_HIDE_DISABLE = (\"FIDO2\",)  # Can the user disable his key (Added in 1.2.0).\nMFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )\nelse:\n    U2F_APPID = \"https://nadooit.de\"  # URL For U2F",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_OWNED_BY_ENTERPRISE",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_OWNED_BY_ENTERPRISE = False  # Who owns security keys\nTOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )\nelse:\n    U2F_APPID = \"https://nadooit.de\"  # URL For U2F\n    FIDO_SERVER_ID = \"nadooit.de\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "TOKEN_ISSUER_NAME",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "TOKEN_ISSUER_NAME = \"nadooit\"  # TOTP Issuer name\nif DEBUG:\n    U2F_APPID = \"https://localhost\"  # URL For U2F\n    FIDO_SERVER_ID = (\n        \"localhost\"  # Server rp id for FIDO2, it is the full domain of your project\n    )\nelse:\n    U2F_APPID = \"https://nadooit.de\"  # URL For U2F\n    FIDO_SERVER_ID = \"nadooit.de\"\nFIDO_SERVER_NAME = \"nadooit\"",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "FIDO_SERVER_NAME",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "FIDO_SERVER_NAME = \"nadooit\"\nMFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit_os:nadooit-os\"  # Allows Changing the page after successful registeration\n)\nMFA_SUCCESS_REGISTRATION_MSG = (\n    \"Schlüssel erfolgreich registriert\"  # The text of the link\n)",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_REDIRECT_AFTER_REGISTRATION",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_REDIRECT_AFTER_REGISTRATION = (\n    \"nadooit_os:nadooit-os\"  # Allows Changing the page after successful registeration\n)\nMFA_SUCCESS_REGISTRATION_MSG = (\n    \"Schlüssel erfolgreich registriert\"  # The text of the link\n)",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "MFA_SUCCESS_REGISTRATION_MSG",
        "kind": 5,
        "importPath": "app.nadooit.settings",
        "description": "app.nadooit.settings",
        "peekOfCode": "MFA_SUCCESS_REGISTRATION_MSG = (\n    \"Schlüssel erfolgreich registriert\"  # The text of the link\n)",
        "detail": "app.nadooit.settings",
        "documentation": {}
    },
    {
        "label": "admin.site.site_header",
        "kind": 5,
        "importPath": "app.nadooit.urls",
        "description": "app.nadooit.urls",
        "peekOfCode": "admin.site.site_header = \"NADOOIT Administration\"  # default: \"Django Administration\"\nadmin.site.index_title = \"NADOOIT Administration Site\"  # default: \"Site administration\"\nadmin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    # These are the urls for the webpage\n    path(\"\", include(\"nadooit_website.urls\")),\n    # These are the urls for the adminbackend\n    path(\"admin/\", admin.site.urls),\n    # These are the urls for the django debug toolbar",
        "detail": "app.nadooit.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.index_title",
        "kind": 5,
        "importPath": "app.nadooit.urls",
        "description": "app.nadooit.urls",
        "peekOfCode": "admin.site.index_title = \"NADOOIT Administration Site\"  # default: \"Site administration\"\nadmin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    # These are the urls for the webpage\n    path(\"\", include(\"nadooit_website.urls\")),\n    # These are the urls for the adminbackend\n    path(\"admin/\", admin.site.urls),\n    # These are the urls for the django debug toolbar\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),",
        "detail": "app.nadooit.urls",
        "documentation": {}
    },
    {
        "label": "admin.site.site_title",
        "kind": 5,
        "importPath": "app.nadooit.urls",
        "description": "app.nadooit.urls",
        "peekOfCode": "admin.site.site_title = \"NADOOIT\"\n# This is where the urls are placed\nurlpatterns = [\n    # These are the urls for the webpage\n    path(\"\", include(\"nadooit_website.urls\")),\n    # These are the urls for the adminbackend\n    path(\"admin/\", admin.site.urls),\n    # These are the urls for the django debug toolbar\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),\n    # These are the urls for the grappelli skin for the admin page",
        "detail": "app.nadooit.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit.urls",
        "description": "app.nadooit.urls",
        "peekOfCode": "urlpatterns = [\n    # These are the urls for the webpage\n    path(\"\", include(\"nadooit_website.urls\")),\n    # These are the urls for the adminbackend\n    path(\"admin/\", admin.site.urls),\n    # These are the urls for the django debug toolbar\n    path(\"__debug__/\", include(\"debug_toolbar.urls\")),\n    # These are the urls for the grappelli skin for the admin page\n    path(\"grappelli/\", include(\"grappelli.urls\")),\n    # These are the the urls for implementing the pwa for the django app",
        "detail": "app.nadooit.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "app.nadooit.wsgi",
        "description": "app.nadooit.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "app.nadooit.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0001_initial",
        "description": "app.nadooit_api_executions_system.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"CustomerProgramExecution\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "app.nadooit_api_executions_system.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0002_initial",
        "description": "app.nadooit_api_executions_system.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"nadooit_program_ownership_system\", \"0001_initial\"),\n        (\"nadooit_api_executions_system\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"customerprogramexecution\",\n            name=\"customer_program\",",
        "detail": "app.nadooit_api_executions_system.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0003_customerprogramexecutionmanager",
        "description": "app.nadooit_api_executions_system.migrations.0003_customerprogramexecutionmanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0002_rename_customers_employee_customers_the_employee_works_for'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_api_executions_system', '0002_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomerProgramExecutionManager',\n            fields=[",
        "detail": "app.nadooit_api_executions_system.migrations.0003_customerprogramexecutionmanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0004_rename_employee_customerprogramexecutionmanager_employee",
        "description": "app.nadooit_api_executions_system.migrations.0004_rename_employee_customerprogramexecutionmanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0003_customerprogramexecutionmanager'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogramexecutionmanager',\n            old_name='Employee',\n            new_name='employee',\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0004_rename_employee_customerprogramexecutionmanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0005_customerprogramexecutionmanager_can_give_customerprogramexecutionmanager_role",
        "description": "app.nadooit_api_executions_system.migrations.0005_customerprogramexecutionmanager_can_give_customerprogramexecutionmanager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0004_rename_employee_customerprogramexecutionmanager_employee'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecutionmanager',\n            name='can_give_customerprogramexecutionmanager_role',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0005_customerprogramexecutionmanager_can_give_customerprogramexecutionmanager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th",
        "description": "app.nadooit_api_executions_system.migrations.0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0005_customerprogramexecutionmanager_can_give_customerprogramexecutionmanager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogramexecutionmanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0007_customerprogramexecutionmanager_list_of_employees_the_manager_has_given_the_role_to",
        "description": "app.nadooit_api_executions_system.migrations.0007_customerprogramexecutionmanager_list_of_employees_the_manager_has_given_the_role_to",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more'),\n        ('nadooit_api_executions_system', '0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecutionmanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_customer_program_execution_manager_has_given_the_role_to', to='nadooit_hr.employee'),",
        "detail": "app.nadooit_api_executions_system.migrations.0007_customerprogramexecutionmanager_list_of_employees_the_manager_has_given_the_role_to",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0008_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "description": "app.nadooit_api_executions_system.migrations.0008_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0007_customerprogramexecutionmanager_list_of_employees_the_manager_has_given_the_role_to'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecution',\n            name='price_per_second_in_cent_at_the_time_of_execution',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0008_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0009_rename_can_give_customerprogramexecutionmanager_role_customerprogramexecutionmanager_can_give_manage",
        "description": "app.nadooit_api_executions_system.migrations.0009_rename_can_give_customerprogramexecutionmanager_role_customerprogramexecutionmanager_can_give_manage",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0008_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogramexecutionmanager',\n            old_name='can_give_customerprogramexecutionmanager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0009_rename_can_give_customerprogramexecutionmanager_role_customerprogramexecutionmanager_can_give_manage",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0010_delete_customerprogramexecutionmanager",
        "description": "app.nadooit_api_executions_system.migrations.0010_delete_customerprogramexecutionmanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0009_rename_can_give_customerprogramexecutionmanager_role_customerprogramexecutionmanager_can_give_manage'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='CustomerProgramExecutionManager',\n        ),\n    ]",
        "detail": "app.nadooit_api_executions_system.migrations.0010_delete_customerprogramexecutionmanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0011_customerprogramexecution_payment_status",
        "description": "app.nadooit_api_executions_system.migrations.0011_customerprogramexecution_payment_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0010_delete_customerprogramexecutionmanager'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecution',\n            name='payment_status',\n            field=models.CharField(choices=[('NOT_PAID', 'Not Paid'), ('PAID', 'Paid'), ('REFUNDED', 'Refunded'), ('REVOKED', 'Revoked')], default='NOT_PAID', max_length=20),\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0011_customerprogramexecution_payment_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0012_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution_currency_and_more",
        "description": "app.nadooit_api_executions_system.migrations.0012_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution_currency_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0011_customerprogramexecution_payment_status'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogramexecution',\n            name='price_per_second_in_cent_at_the_time_of_execution_currency',\n            field=djmoney.models.fields.CurrencyField(choices=[('XUA', 'ADB Unit of Account'), ('AFN', 'Afghan Afghani'), ('AFA', 'Afghan Afghani (1927–2002)'), ('ALL', 'Albanian Lek'), ('ALK', 'Albanian Lek (1946–1965)'), ('DZD', 'Algerian Dinar'), ('ADP', 'Andorran Peseta'), ('AOA', 'Angolan Kwanza'), ('AOK', 'Angolan Kwanza (1977–1991)'), ('AON', 'Angolan New Kwanza (1990–2000)'), ('AOR', 'Angolan Readjusted Kwanza (1995–1999)'), ('ARA', 'Argentine Austral'), ('ARS', 'Argentine Peso'), ('ARM', 'Argentine Peso (1881–1970)'), ('ARP', 'Argentine Peso (1983–1985)'), ('ARL', 'Argentine Peso Ley (1970–1983)'), ('AMD', 'Armenian Dram'), ('AWG', 'Aruban Florin'), ('AUD', 'Australian Dollar'), ('ATS', 'Austrian Schilling'), ('AZN', 'Azerbaijani Manat'), ('AZM', 'Azerbaijani Manat (1993–2006)'), ('BSD', 'Bahamian Dollar'), ('BHD', 'Bahraini Dinar'), ('BDT', 'Bangladeshi Taka'), ('BBD', 'Barbadian Dollar'), ('BYN', 'Belarusian Ruble'), ('BYB', 'Belarusian Ruble (1994–1999)'), ('BYR', 'Belarusian Ruble (2000–2016)'), ('BEF', 'Belgian Franc'), ('BEC', 'Belgian Franc (convertible)'), ('BEL', 'Belgian Franc (financial)'), ('BZD', 'Belize Dollar'), ('BMD', 'Bermudan Dollar'), ('BTN', 'Bhutanese Ngultrum'), ('BOB', 'Bolivian Boliviano'), ('BOL', 'Bolivian Boliviano (1863–1963)'), ('BOV', 'Bolivian Mvdol'), ('BOP', 'Bolivian Peso'), ('BAM', 'Bosnia-Herzegovina Convertible Mark'), ('BAD', 'Bosnia-Herzegovina Dinar (1992–1994)'), ('BAN', 'Bosnia-Herzegovina New Dinar (1994–1997)'), ('BWP', 'Botswanan Pula'), ('BRC', 'Brazilian Cruzado (1986–1989)'), ('BRZ', 'Brazilian Cruzeiro (1942–1967)'), ('BRE', 'Brazilian Cruzeiro (1990–1993)'), ('BRR', 'Brazilian Cruzeiro (1993–1994)'), ('BRN', 'Brazilian New Cruzado (1989–1990)'), ('BRB', 'Brazilian New Cruzeiro (1967–1986)'), ('BRL', 'Brazilian Real'), ('GBP', 'British Pound'), ('BND', 'Brunei Dollar'), ('BGL', 'Bulgarian Hard Lev'), ('BGN', 'Bulgarian Lev'), ('BGO', 'Bulgarian Lev (1879–1952)'), ('BGM', 'Bulgarian Socialist Lev'), ('BUK', 'Burmese Kyat'), ('BIF', 'Burundian Franc'), ('XPF', 'CFP Franc'), ('KHR', 'Cambodian Riel'), ('CAD', 'Canadian Dollar'), ('CVE', 'Cape Verdean Escudo'), ('KYD', 'Cayman Islands Dollar'), ('XAF', 'Central African CFA Franc'), ('CLE', 'Chilean Escudo'), ('CLP', 'Chilean Peso'), ('CLF', 'Chilean Unit of Account (UF)'), ('CNX', 'Chinese People’s Bank Dollar'), ('CNY', 'Chinese Yuan'), ('CNH', 'Chinese Yuan (offshore)'), ('COP', 'Colombian Peso'), ('COU', 'Colombian Real Value Unit'), ('KMF', 'Comorian Franc'), ('CDF', 'Congolese Franc'), ('CRC', 'Costa Rican Colón'), ('HRD', 'Croatian Dinar'), ('HRK', 'Croatian Kuna'), ('CUC', 'Cuban Convertible Peso'), ('CUP', 'Cuban Peso'), ('CYP', 'Cypriot Pound'), ('CZK', 'Czech Koruna'), ('CSK', 'Czechoslovak Hard Koruna'), ('DKK', 'Danish Krone'), ('DJF', 'Djiboutian Franc'), ('DOP', 'Dominican Peso'), ('NLG', 'Dutch Guilder'), ('XCD', 'East Caribbean Dollar'), ('DDM', 'East German Mark'), ('ECS', 'Ecuadorian Sucre'), ('ECV', 'Ecuadorian Unit of Constant Value'), ('EGP', 'Egyptian Pound'), ('GQE', 'Equatorial Guinean Ekwele'), ('ERN', 'Eritrean Nakfa'), ('EEK', 'Estonian Kroon'), ('ETB', 'Ethiopian Birr'), ('EUR', 'Euro'), ('XBA', 'European Composite Unit'), ('XEU', 'European Currency Unit'), ('XBB', 'European Monetary Unit'), ('XBC', 'European Unit of Account (XBC)'), ('XBD', 'European Unit of Account (XBD)'), ('FKP', 'Falkland Islands Pound'), ('FJD', 'Fijian Dollar'), ('FIM', 'Finnish Markka'), ('FRF', 'French Franc'), ('XFO', 'French Gold Franc'), ('XFU', 'French UIC-Franc'), ('GMD', 'Gambian Dalasi'), ('GEK', 'Georgian Kupon Larit'), ('GEL', 'Georgian Lari'), ('DEM', 'German Mark'), ('GHS', 'Ghanaian Cedi'), ('GHC', 'Ghanaian Cedi (1979–2007)'), ('GIP', 'Gibraltar Pound'), ('XAU', 'Gold'), ('GRD', 'Greek Drachma'), ('GTQ', 'Guatemalan Quetzal'), ('GWP', 'Guinea-Bissau Peso'), ('GNF', 'Guinean Franc'), ('GNS', 'Guinean Syli'), ('GYD', 'Guyanaese Dollar'), ('HTG', 'Haitian Gourde'), ('HNL', 'Honduran Lempira'), ('HKD', 'Hong Kong Dollar'), ('HUF', 'Hungarian Forint'), ('IMP', 'IMP'), ('ISK', 'Icelandic Króna'), ('ISJ', 'Icelandic Króna (1918–1981)'), ('INR', 'Indian Rupee'), ('IDR', 'Indonesian Rupiah'), ('IRR', 'Iranian Rial'), ('IQD', 'Iraqi Dinar'), ('IEP', 'Irish Pound'), ('ILS', 'Israeli New Shekel'), ('ILP', 'Israeli Pound'), ('ILR', 'Israeli Shekel (1980–1985)'), ('ITL', 'Italian Lira'), ('JMD', 'Jamaican Dollar'), ('JPY', 'Japanese Yen'), ('JOD', 'Jordanian Dinar'), ('KZT', 'Kazakhstani Tenge'), ('KES', 'Kenyan Shilling'), ('KWD', 'Kuwaiti Dinar'), ('KGS', 'Kyrgystani Som'), ('LAK', 'Laotian Kip'), ('LVL', 'Latvian Lats'), ('LVR', 'Latvian Ruble'), ('LBP', 'Lebanese Pound'), ('LSL', 'Lesotho Loti'), ('LRD', 'Liberian Dollar'), ('LYD', 'Libyan Dinar'), ('LTL', 'Lithuanian Litas'), ('LTT', 'Lithuanian Talonas'), ('LUL', 'Luxembourg Financial Franc'), ('LUC', 'Luxembourgian Convertible Franc'), ('LUF', 'Luxembourgian Franc'), ('MOP', 'Macanese Pataca'), ('MKD', 'Macedonian Denar'), ('MKN', 'Macedonian Denar (1992–1993)'), ('MGA', 'Malagasy Ariary'), ('MGF', 'Malagasy Franc'), ('MWK', 'Malawian Kwacha'), ('MYR', 'Malaysian Ringgit'), ('MVR', 'Maldivian Rufiyaa'), ('MVP', 'Maldivian Rupee (1947–1981)'), ('MLF', 'Malian Franc'), ('MTL', 'Maltese Lira'), ('MTP', 'Maltese Pound'), ('MRU', 'Mauritanian Ouguiya'), ('MRO', 'Mauritanian Ouguiya (1973–2017)'), ('MUR', 'Mauritian Rupee'), ('MXV', 'Mexican Investment Unit'), ('MXN', 'Mexican Peso'), ('MXP', 'Mexican Silver Peso (1861–1992)'), ('MDC', 'Moldovan Cupon'), ('MDL', 'Moldovan Leu'), ('MCF', 'Monegasque Franc'), ('MNT', 'Mongolian Tugrik'), ('MAD', 'Moroccan Dirham'), ('MAF', 'Moroccan Franc'), ('MZE', 'Mozambican Escudo'), ('MZN', 'Mozambican Metical'), ('MZM', 'Mozambican Metical (1980–2006)'), ('MMK', 'Myanmar Kyat'), ('NAD', 'Namibian Dollar'), ('NPR', 'Nepalese Rupee'), ('ANG', 'Netherlands Antillean Guilder'), ('TWD', 'New Taiwan Dollar'), ('NZD', 'New Zealand Dollar'), ('NIO', 'Nicaraguan Córdoba'), ('NIC', 'Nicaraguan Córdoba (1988–1991)'), ('NGN', 'Nigerian Naira'), ('KPW', 'North Korean Won'), ('NOK', 'Norwegian Krone'), ('OMR', 'Omani Rial'), ('PKR', 'Pakistani Rupee'), ('XPD', 'Palladium'), ('PAB', 'Panamanian Balboa'), ('PGK', 'Papua New Guinean Kina'), ('PYG', 'Paraguayan Guarani'), ('PEI', 'Peruvian Inti'), ('PEN', 'Peruvian Sol'), ('PES', 'Peruvian Sol (1863–1965)'), ('PHP', 'Philippine Peso'), ('XPT', 'Platinum'), ('PLN', 'Polish Zloty'), ('PLZ', 'Polish Zloty (1950–1995)'), ('PTE', 'Portuguese Escudo'), ('GWE', 'Portuguese Guinea Escudo'), ('QAR', 'Qatari Rial'), ('XRE', 'RINET Funds'), ('RHD', 'Rhodesian Dollar'), ('RON', 'Romanian Leu'), ('ROL', 'Romanian Leu (1952–2006)'), ('RUB', 'Russian Ruble'), ('RUR', 'Russian Ruble (1991–1998)'), ('RWF', 'Rwandan Franc'), ('SVC', 'Salvadoran Colón'), ('WST', 'Samoan Tala'), ('SAR', 'Saudi Riyal'), ('RSD', 'Serbian Dinar'), ('CSD', 'Serbian Dinar (2002–2006)'), ('SCR', 'Seychellois Rupee'), ('SLL', 'Sierra Leonean Leone'), ('XAG', 'Silver'), ('SGD', 'Singapore Dollar'), ('SKK', 'Slovak Koruna'), ('SIT', 'Slovenian Tolar'), ('SBD', 'Solomon Islands Dollar'), ('SOS', 'Somali Shilling'), ('ZAR', 'South African Rand'), ('ZAL', 'South African Rand (financial)'), ('KRH', 'South Korean Hwan (1953–1962)'), ('KRW', 'South Korean Won'), ('KRO', 'South Korean Won (1945–1953)'), ('SSP', 'South Sudanese Pound'), ('SUR', 'Soviet Rouble'), ('ESP', 'Spanish Peseta'), ('ESA', 'Spanish Peseta (A account)'), ('ESB', 'Spanish Peseta (convertible account)'), ('XDR', 'Special Drawing Rights'), ('LKR', 'Sri Lankan Rupee'), ('SHP', 'St. Helena Pound'), ('XSU', 'Sucre'), ('SDD', 'Sudanese Dinar (1992–2007)'), ('SDG', 'Sudanese Pound'), ('SDP', 'Sudanese Pound (1957–1998)'), ('SRD', 'Surinamese Dollar'), ('SRG', 'Surinamese Guilder'), ('SZL', 'Swazi Lilangeni'), ('SEK', 'Swedish Krona'), ('CHF', 'Swiss Franc'), ('SYP', 'Syrian Pound'), ('STN', 'São Tomé & Príncipe Dobra'), ('STD', 'São Tomé & Príncipe Dobra (1977–2017)'), ('TVD', 'TVD'), ('TJR', 'Tajikistani Ruble'), ('TJS', 'Tajikistani Somoni'), ('TZS', 'Tanzanian Shilling'), ('XTS', 'Testing Currency Code'), ('THB', 'Thai Baht'), ('XXX', 'The codes assigned for transactions where no currency is involved'), ('TPE', 'Timorese Escudo'), ('TOP', 'Tongan Paʻanga'), ('TTD', 'Trinidad & Tobago Dollar'), ('TND', 'Tunisian Dinar'), ('TRY', 'Turkish Lira'), ('TRL', 'Turkish Lira (1922–2005)'), ('TMT', 'Turkmenistani Manat'), ('TMM', 'Turkmenistani Manat (1993–2009)'), ('USD', 'US Dollar'), ('USN', 'US Dollar (Next day)'), ('USS', 'US Dollar (Same day)'), ('UGX', 'Ugandan Shilling'), ('UGS', 'Ugandan Shilling (1966–1987)'), ('UAH', 'Ukrainian Hryvnia'), ('UAK', 'Ukrainian Karbovanets'), ('AED', 'United Arab Emirates Dirham'), ('UYW', 'Uruguayan Nominal Wage Index Unit'), ('UYU', 'Uruguayan Peso'), ('UYP', 'Uruguayan Peso (1975–1993)'), ('UYI', 'Uruguayan Peso (Indexed Units)'), ('UZS', 'Uzbekistani Som'), ('VUV', 'Vanuatu Vatu'), ('VES', 'Venezuelan Bolívar'), ('VEB', 'Venezuelan Bolívar (1871–2008)'), ('VEF', 'Venezuelan Bolívar (2008–2018)'), ('VND', 'Vietnamese Dong'), ('VNN', 'Vietnamese Dong (1978–1985)'), ('CHE', 'WIR Euro'), ('CHW', 'WIR Franc'), ('XOF', 'West African CFA Franc'), ('YDD', 'Yemeni Dinar'), ('YER', 'Yemeni Rial'), ('YUN', 'Yugoslavian Convertible Dinar (1990–1992)'), ('YUD', 'Yugoslavian Hard Dinar (1966–1990)'), ('YUM', 'Yugoslavian New Dinar (1994–2002)'), ('YUR', 'Yugoslavian Reformed Dinar (1992–1993)'), ('ZWN', 'ZWN'), ('ZRN', 'Zairean New Zaire (1993–1998)'), ('ZRZ', 'Zairean Zaire (1971–1993)'), ('ZMW', 'Zambian Kwacha'), ('ZMK', 'Zambian Kwacha (1968–2012)'), ('ZWD', 'Zimbabwean Dollar (1980–2008)'), ('ZWR', 'Zimbabwean Dollar (2008)'), ('ZWL', 'Zimbabwean Dollar (2009)')], default='EUR', editable=False, max_length=3),\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0012_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution_currency_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0013_alter_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "description": "app.nadooit_api_executions_system.migrations.0013_alter_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0012_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution_currency_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customerprogramexecution',\n            name='price_per_second_in_cent_at_the_time_of_execution',\n            field=djmoney.models.fields.MoneyField(decimal_places=6, default=Decimal('0'), default_currency='EUR', max_digits=14),\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0013_alter_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.migrations.0014_rename_price_per_second_in_cent_at_the_time_of_execution_customerprogramexecution_price_per_second_a",
        "description": "app.nadooit_api_executions_system.migrations.0014_rename_price_per_second_in_cent_at_the_time_of_execution_customerprogramexecution_price_per_second_a",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0013_alter_customerprogramexecution_price_per_second_in_cent_at_the_time_of_execution'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogramexecution',\n            old_name='price_per_second_in_cent_at_the_time_of_execution',\n            new_name='price_per_second_at_the_time_of_execution',\n        ),",
        "detail": "app.nadooit_api_executions_system.migrations.0014_rename_price_per_second_in_cent_at_the_time_of_execution_customerprogramexecution_price_per_second_a",
        "documentation": {}
    },
    {
        "label": "NadooitApiExecutionsSystemConfig",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.apps",
        "description": "app.nadooit_api_executions_system.apps",
        "peekOfCode": "class NadooitApiExecutionsSystemConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_api_executions_system'",
        "detail": "app.nadooit_api_executions_system.apps",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecution",
        "kind": 6,
        "importPath": "app.nadooit_api_executions_system.models",
        "description": "app.nadooit_api_executions_system.models",
        "peekOfCode": "class CustomerProgramExecution(models.Model):\n    \"\"\"_summary_\n    model for a single execution of a nadooit program.\n    \"\"\"\n    class PaymentStatus(models.TextChoices):\n        NOT_PAID = \"NOT_PAID\", _(\"Not Paid\")\n        PAID = \"PAID\", _(\"Paid\")\n        REFUNDED = \"REFUNDED\", _(\"Refunded\")\n        REVOKED = \"REVOKED\", _(\"Revoked\")\n    # id of the execution",
        "detail": "app.nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "cutomer_program_execution_was_created",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.models",
        "description": "app.nadooit_api_executions_system.models",
        "peekOfCode": "def cutomer_program_execution_was_created(sender, instance, created, *args, **kwargs):\n    \"\"\"\n    a new execution is created, the time saved is charged to the time account of the customer that is assigned to the program.\n    \"\"\"\n    if created:\n        # reduce the customer_programs time_account by the program_time_saved_in_seconds\n        # gets the customer program of the execution\n        nadooit_customer_program = CustomerProgram.objects.get(\n            id=instance.customer_program.id\n        )",
        "detail": "app.nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "customer_program_execution_was_deleted",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.models",
        "description": "app.nadooit_api_executions_system.models",
        "peekOfCode": "def customer_program_execution_was_deleted(sender, instance, *args, **kwargs):\n    \"\"\"\n        Whenever a customer program execution is deleted this signal is triggered.\n    Args:\n        sender (_type_): _description_\n        instance (_type_): _description_\n    \"\"\"\n    # increase the customer_programs time_account by the program_time_saved_in_seconds\n    obj = CustomerProgram.objects.get(id=instance.customer_program.id)\n    obj.time_account.time_balance_in_seconds = (",
        "detail": "app.nadooit_api_executions_system.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountTestModel",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.tests",
        "description": "app.nadooit_api_executions_system.tests",
        "peekOfCode": "def TimeAccountTestModel():\n    return baker.make(\n        TimeAccount,\n        time_balance_in_seconds=1000,\n    )\ndef test_using_model_bakery(TimeAccountTestModel):\n    assert isinstance(TimeAccountTestModel, TimeAccount)",
        "detail": "app.nadooit_api_executions_system.tests",
        "documentation": {}
    },
    {
        "label": "test_using_model_bakery",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.tests",
        "description": "app.nadooit_api_executions_system.tests",
        "peekOfCode": "def test_using_model_bakery(TimeAccountTestModel):\n    assert isinstance(TimeAccountTestModel, TimeAccount)",
        "detail": "app.nadooit_api_executions_system.tests",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_api_executions_system.urls",
        "description": "app.nadooit_api_executions_system.urls",
        "peekOfCode": "urlpatterns = [\n    # path for the api requests for program executions\n    path('executions', create_execution, name=\"create\"),\n    # path for the api requests for checking if a user is valid or not\n    path('users/check', check_user, name=\"check\"),\n]",
        "detail": "app.nadooit_api_executions_system.urls",
        "documentation": {}
    },
    {
        "label": "get__user_code__for__request",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.views",
        "description": "app.nadooit_api_executions_system.views",
        "peekOfCode": "def get__user_code__for__request(request) -> str:\n    \"\"\"\n    gets the user code from the request\n    Returns:\n        _type_: the user code as a string\n    \"\"\"\n    return request.data.get(\"NADOOIT__USER_CODE\")\n# Create your views here.\n# view for creating a new execution\n@api_view([\"POST\"])",
        "detail": "app.nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "create_execution",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.views",
        "description": "app.nadooit_api_executions_system.views",
        "peekOfCode": "def create_execution(request):\n    try:\n        # gets the hashed api key from the request\n        hashed_api_key = get__hashed_api_key__for__request(request)\n        try:\n            # checks if the api key is active\n            if check__nadooit_api_key__has__is_active(hashed_api_key):\n                nadooit_api_key = get__nadooit_api_key__for__hashed_api_key(\n                    hashed_api_key\n                )",
        "detail": "app.nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "check_user",
        "kind": 2,
        "importPath": "app.nadooit_api_executions_system.views",
        "description": "app.nadooit_api_executions_system.views",
        "peekOfCode": "def check_user(request):\n    try:\n        hashed_api_key = get__hashed_api_key__for__request(request)\n        try:\n            found_nadooit_api_key = NadooitApiKey.objects.get(\n                api_key=hashed_api_key, is_active=True\n            )\n            if found_nadooit_api_key.user.user_code == request.data.get(\n                \"NADOOIT__USER_CODE\"\n            ):",
        "detail": "app.nadooit_api_executions_system.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0001_initial",
        "description": "app.nadooit_api_key.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"NadooitApiKey\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "app.nadooit_api_key.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0002_initial",
        "description": "app.nadooit_api_key.migrations.0002_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        (\"nadooit_api_key\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"nadooitapikey\",\n            name=\"user\",",
        "detail": "app.nadooit_api_key.migrations.0002_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0003_nadooitapikeymanager",
        "description": "app.nadooit_api_key.migrations.0003_nadooitapikeymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_auth', '0003_delete_keymanager'),\n        ('nadooit_api_key', '0002_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitApiKeyManager',\n            fields=[\n                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),",
        "detail": "app.nadooit_api_key.migrations.0003_nadooitapikeymanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0004_remove_nadooitapikeymanager_can_edit_api_key_and_more",
        "description": "app.nadooit_api_key.migrations.0004_remove_nadooitapikeymanager_can_edit_api_key_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_api_key', '0003_nadooitapikeymanager'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='nadooitapikeymanager',\n            name='can_edit_api_key',\n        ),",
        "detail": "app.nadooit_api_key.migrations.0004_remove_nadooitapikeymanager_can_edit_api_key_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0005_nadooitapikeymanager_employee",
        "description": "app.nadooit_api_key.migrations.0005_nadooitapikeymanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0003_employeemanager'),\n        ('nadooit_api_key', '0004_remove_nadooitapikeymanager_can_edit_api_key_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='nadooitapikeymanager',\n            name='employee',\n            field=models.OneToOneField(default='dced8968-c013-4b0e-9406-bf23b8a7723b', on_delete=django.db.models.deletion.CASCADE, to='nadooit_hr.employee'),",
        "detail": "app.nadooit_api_key.migrations.0005_nadooitapikeymanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0006_remove_nadooitapikeymanager_employee",
        "description": "app.nadooit_api_key.migrations.0006_remove_nadooitapikeymanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0005_nadooitapikeymanager_employee'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='nadooitapikeymanager',\n            name='employee',\n        ),\n    ]",
        "detail": "app.nadooit_api_key.migrations.0006_remove_nadooitapikeymanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0007_delete_nadooitapikeymanager",
        "description": "app.nadooit_api_key.migrations.0007_delete_nadooitapikeymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0006_remove_nadooitapikeymanager_employee'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='NadooitApiKeyManager',\n        ),\n    ]",
        "detail": "app.nadooit_api_key.migrations.0007_delete_nadooitapikeymanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0008_nadooitapikeymanager",
        "description": "app.nadooit_api_key.migrations.0008_nadooitapikeymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0003_employeemanager'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_api_key', '0007_delete_nadooitapikeymanager'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitApiKeyManager',\n            fields=[",
        "detail": "app.nadooit_api_key.migrations.0008_nadooitapikeymanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0009_nadooitapikeymanager_can_give_apikeymanager_role",
        "description": "app.nadooit_api_key.migrations.0009_nadooitapikeymanager_can_give_apikeymanager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0008_nadooitapikeymanager'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='nadooitapikeymanager',\n            name='can_give_ApiKeyManager_role',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_api_key.migrations.0009_nadooitapikeymanager_can_give_apikeymanager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0010_rename_customers_the_manager_is_responsible_for_nadooitapikeymanager_list_of_customers_the_manager_i",
        "description": "app.nadooit_api_key.migrations.0010_rename_customers_the_manager_is_responsible_for_nadooitapikeymanager_list_of_customers_the_manager_i",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0009_nadooitapikeymanager_can_give_apikeymanager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='nadooitapikeymanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',\n        ),",
        "detail": "app.nadooit_api_key.migrations.0010_rename_customers_the_manager_is_responsible_for_nadooitapikeymanager_list_of_customers_the_manager_i",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0011_nadooitapikeymanager_list_of_employees_the_manager_has_given_the_role_to",
        "description": "app.nadooit_api_key.migrations.0011_nadooitapikeymanager_list_of_employees_the_manager_has_given_the_role_to",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n        ('nadooit_api_key', '0010_rename_customers_the_manager_is_responsible_for_nadooitapikeymanager_list_of_customers_the_manager_i'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='nadooitapikeymanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_api_key_manager_has_given_the_role_to', to='nadooit_hr.employee'),",
        "detail": "app.nadooit_api_key.migrations.0011_nadooitapikeymanager_list_of_employees_the_manager_has_given_the_role_to",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_api_key.migrations.0012_rename_can_give_apikeymanager_role_nadooitapikeymanager_can_give_manager_role",
        "description": "app.nadooit_api_key.migrations.0012_rename_can_give_apikeymanager_role_nadooitapikeymanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_key', '0011_nadooitapikeymanager_list_of_employees_the_manager_has_given_the_role_to'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='nadooitapikeymanager',\n            old_name='can_give_ApiKeyManager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_api_key.migrations.0012_rename_can_give_apikeymanager_role_nadooitapikeymanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "NadooitApiKeyConfig",
        "kind": 6,
        "importPath": "app.nadooit_api_key.apps",
        "description": "app.nadooit_api_key.apps",
        "peekOfCode": "class NadooitApiKeyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_api_key'",
        "detail": "app.nadooit_api_key.apps",
        "documentation": {}
    },
    {
        "label": "NadooitApiKey",
        "kind": 6,
        "importPath": "app.nadooit_api_key.models",
        "description": "app.nadooit_api_key.models",
        "peekOfCode": "class NadooitApiKey(models.Model):\n    # id of the api key\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # the user that owns the api key\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    # api_keys are unique and are stored in the database as a hash of the api key\n    # this is done to prevent the api key from being stored in plain text in the database\n    api_key = models.CharField(\n        max_length=255,\n        unique=True,",
        "detail": "app.nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "NadooitApiKeyManager",
        "kind": 6,
        "importPath": "app.nadooit_api_key.models",
        "description": "app.nadooit_api_key.models",
        "peekOfCode": "class NadooitApiKeyManager(models.Model):\n    employee = models.OneToOneField(\n        Employee, on_delete=models.CASCADE, primary_key=True\n    )\n    can_create_api_key = models.BooleanField(default=False)\n    can_delete_api_key = models.BooleanField(default=False)\n    can_give_manager_role = models.BooleanField(default=False)\n    list_of_customers_the_manager_is_responsible_for = models.ManyToManyField(\n        Customer, blank=True\n    )",
        "detail": "app.nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "hash_api_key_when_created",
        "kind": 2,
        "importPath": "app.nadooit_api_key.models",
        "description": "app.nadooit_api_key.models",
        "peekOfCode": "def hash_api_key_when_created(sender, instance, created, *args, **kwargs):\n    if created:\n        # hashes the api_key\n        obj = NadooitApiKey.objects.get(id=instance.id)\n        obj.api_key = hashlib.sha256(str(obj.api_key).encode()).hexdigest()\n        obj.save()\n# A role class that gets added to the user model\n# It is used to determine what the user can do in regards to the Nadooit Api Key\nclass NadooitApiKeyManager(models.Model):\n    employee = models.OneToOneField(",
        "detail": "app.nadooit_api_key.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_auth.migrations.0001_initial",
        "description": "app.nadooit_auth.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"auth\", \"0012_alter_user_first_name_max_length\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"User\",\n            fields=[\n                (\"password\", models.CharField(max_length=128, verbose_name=\"password\")),",
        "detail": "app.nadooit_auth.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_auth.migrations.0002_keymanager",
        "description": "app.nadooit_auth.migrations.0002_keymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_auth', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='KeyManager',\n            fields=[\n                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),\n                ('can_create_keys', models.BooleanField(default=False)),",
        "detail": "app.nadooit_auth.migrations.0002_keymanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_auth.migrations.0003_delete_keymanager",
        "description": "app.nadooit_auth.migrations.0003_delete_keymanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_auth', '0002_keymanager'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='KeyManager',\n        ),\n    ]",
        "detail": "app.nadooit_auth.migrations.0003_delete_keymanager",
        "documentation": {}
    },
    {
        "label": "AuthConfig",
        "kind": 6,
        "importPath": "app.nadooit_auth.apps",
        "description": "app.nadooit_auth.apps",
        "peekOfCode": "class AuthConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_auth'",
        "detail": "app.nadooit_auth.apps",
        "documentation": {}
    },
    {
        "label": "UserCodeBackend",
        "kind": 6,
        "importPath": "app.nadooit_auth.custom_user_code_auth_backend",
        "description": "app.nadooit_auth.custom_user_code_auth_backend",
        "peekOfCode": "class UserCodeBackend(BaseBackend):\n    def authenticate(self, request, user_code=None):\n        from nadooit_auth.models import User\n        try:\n            user = User.objects.get(user_code=user_code)\n            return user\n        except User.DoesNotExist:\n            return None\n    def get_user(self, user_code):\n        from nadooit_auth.models import User",
        "detail": "app.nadooit_auth.custom_user_code_auth_backend",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "app.nadooit_auth.models",
        "description": "app.nadooit_auth.models",
        "peekOfCode": "class User(AbstractUser, PermissionsMixin):\n    # id is a unique identifier for the user\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # The user code is a unique code that is used to identify the user.\n    # The user code is generated automatically when the user is created.\n    # The user can change the user code in the settings.\n    # The user code is wirrten on the user's security key.\n    user_code = models.CharField(\n        max_length=32,\n        unique=True,",
        "detail": "app.nadooit_auth.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "app.nadooit_auth.urls",
        "description": "app.nadooit_auth.urls",
        "peekOfCode": "app_name = \"nadooit_auth\"\nurlpatterns = [\n    # path for login\n    path(\"login-user\", login_user, name=\"login-user\"),\n    # path for logout\n    path(\"logout-user\", logout_user, name=\"logout-user\"),\n    # path for registering a new user\n    path(\"register-user\", register_user, name=\"register-user\"),\n]",
        "detail": "app.nadooit_auth.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_auth.urls",
        "description": "app.nadooit_auth.urls",
        "peekOfCode": "urlpatterns = [\n    # path for login\n    path(\"login-user\", login_user, name=\"login-user\"),\n    # path for logout\n    path(\"logout-user\", logout_user, name=\"logout-user\"),\n    # path for registering a new user\n    path(\"register-user\", register_user, name=\"register-user\"),\n]",
        "detail": "app.nadooit_auth.urls",
        "documentation": {}
    },
    {
        "label": "get__new_username",
        "kind": 2,
        "importPath": "app.nadooit_auth.username",
        "description": "app.nadooit_auth.username",
        "peekOfCode": "def get__new_username() -> str:\n    \"\"\"\n    This function generates a new username for a new user.\t\n    \"\"\"\n    username = \"\".join(\n        random.choice(string.ascii_letters + string.digits) for _ in range(20)\n    )\n    return username",
        "detail": "app.nadooit_auth.username",
        "documentation": {}
    },
    {
        "label": "get__new_user_code",
        "kind": 2,
        "importPath": "app.nadooit_auth.user_code",
        "description": "app.nadooit_auth.user_code",
        "peekOfCode": "def get__new_user_code() -> str:\n    \"\"\"\n    Generates a new user code.\n    \"\"\"\n    user_code = \"\".join(\n        random.choice(string.ascii_letters + string.digits) for _ in range(6)\n    )\n    return user_code\ndef check__valid_user_code(user_code: str) -> bool:\n    \"\"\"\t",
        "detail": "app.nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "check__valid_user_code",
        "kind": 2,
        "importPath": "app.nadooit_auth.user_code",
        "description": "app.nadooit_auth.user_code",
        "peekOfCode": "def check__valid_user_code(user_code: str) -> bool:\n    \"\"\"\t\n    Checks if a user code is valid.\t\n    \"\"\"\n    # A user code is valid if it is a string of 6 characters.\n    if len(user_code) > 6:\n        return False\n    if len(user_code) < 6:\n        return False\n    # A user code is valid if it contains only letters and digits.",
        "detail": "app.nadooit_auth.user_code",
        "documentation": {}
    },
    {
        "label": "user_is_KeyManager_that_can_create_new_keys",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def user_is_KeyManager_that_can_create_new_keys(user):\n    if hasattr(user.employee, \"keymanager\"):\n        return user.employee.keymanager.can_create_keys\n    return False\ndef log_user_in(request, username):\n    user = User.objects.get(username=username)\n    user.backend = \"django.contrib.auth.backends.ModelBackend\"\n    # loging in the user\n    login(request, user)\n    # request.POST containing redirect might be wrong here and should be request.GET \"next\" instead. Test this.",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "log_user_in",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def log_user_in(request, username):\n    user = User.objects.get(username=username)\n    user.backend = \"django.contrib.auth.backends.ModelBackend\"\n    # loging in the user\n    login(request, user)\n    # request.POST containing redirect might be wrong here and should be request.GET \"next\" instead. Test this.\n    if \"redirect\" in request.POST:\n        return redirect(request.POST[\"redirect\"])\n    else:\n        return redirect(reverse(\"nadooit_os:nadooit-os\"))",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "login_user",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def login_user(request):\n    if request.method == \"POST\":\n        user_code = request.POST[\"user_code\"]\n        user = authenticate(request, user_code=user_code)\n        print(\"user: \", user)\n        err = \"\"\n        if user is not None:\n            print(\"found user\")\n            if user.is_active:  # if the user object exist\n                if \"mfa\" in settings.INSTALLED_APPS and settings.DEBUG == False:",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "logout_user",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def logout_user(request):\n    logout(request)\n    messages.success(request, \"You habe successfully logged out\")\n    return redirect(\"/auth/login-user\")\n@login_required(login_url=\"/auth/login-user\")\n@user_passes_test(\n    user_is_KeyManager_that_can_create_new_keys,\n    redirect_field_name=None,\n    login_url=\"/auth/login-user\",\n)",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "register_user",
        "kind": 2,
        "importPath": "app.nadooit_auth.views",
        "description": "app.nadooit_auth.views",
        "peekOfCode": "def register_user(request):\n    if request.method == \"POST\":\n        error = \"\"\n        user_code = request.POST.get(\"user_code\").replace(\"/\", \"\")\n        display_name = request.POST.get(\"display_name\")\n        if not check__valid_user_code(user_code):\n            error = \"Invalid user_code\"\n            return render(\n                request,\n                \"nadooit_auth/register.html\",",
        "detail": "app.nadooit_auth.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_crm.migrations.0001_initial",
        "description": "app.nadooit_crm.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Address\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "app.nadooit_crm.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CustomerAdmin",
        "kind": 6,
        "importPath": "app.nadooit_crm.admin",
        "description": "app.nadooit_crm.admin",
        "peekOfCode": "class CustomerAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Customer._meta.fields]\nclass AddressAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Address._meta.fields]\n# Register your models here.\nadmin.site.register(Customer, CustomerAdmin)\nadmin.site.register(Address, AddressAdmin)\nadmin.site.register(ShippingAdress)\nadmin.site.register(BillingAdress)",
        "detail": "app.nadooit_crm.admin",
        "documentation": {}
    },
    {
        "label": "AddressAdmin",
        "kind": 6,
        "importPath": "app.nadooit_crm.admin",
        "description": "app.nadooit_crm.admin",
        "peekOfCode": "class AddressAdmin(admin.ModelAdmin):\n    list_display = [field.name for field in Address._meta.fields]\n# Register your models here.\nadmin.site.register(Customer, CustomerAdmin)\nadmin.site.register(Address, AddressAdmin)\nadmin.site.register(ShippingAdress)\nadmin.site.register(BillingAdress)",
        "detail": "app.nadooit_crm.admin",
        "documentation": {}
    },
    {
        "label": "NadooitCrmConfig",
        "kind": 6,
        "importPath": "app.nadooit_crm.apps",
        "description": "app.nadooit_crm.apps",
        "peekOfCode": "class NadooitCrmConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_crm'",
        "detail": "app.nadooit_crm.apps",
        "documentation": {}
    },
    {
        "label": "Address",
        "kind": 6,
        "importPath": "app.nadooit_crm.models",
        "description": "app.nadooit_crm.models",
        "peekOfCode": "class Address(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    street = models.CharField(max_length=255, null=True, blank=True)\n    house_number = models.CharField(max_length=255, null=True, blank=True)\n    town = models.CharField(max_length=255, null=True, blank=True)\n    postal_code = models.CharField(max_length=255, null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return (",
        "detail": "app.nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "ShippingAdress",
        "kind": 6,
        "importPath": "app.nadooit_crm.models",
        "description": "app.nadooit_crm.models",
        "peekOfCode": "class ShippingAdress(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    adress = models.ForeignKey(Address, on_delete=models.SET_NULL, null=True)\n    addressed_to = models.CharField(max_length=255, null=True, blank=True)\n    def __str__(self):\n        return (\n            self.addressed_to\n            + \", \"\n            + self.adress.street\n            + \" \"",
        "detail": "app.nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "BillingAdress",
        "kind": 6,
        "importPath": "app.nadooit_crm.models",
        "description": "app.nadooit_crm.models",
        "peekOfCode": "class BillingAdress(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    adress = models.ForeignKey(Address, on_delete=models.SET_NULL, null=True)\n    addressed_to = models.CharField(max_length=255, null=True, blank=True)\n    def __str__(self):\n        return (\n            self.addressed_to\n            + \", \"\n            + self.adress.street\n            + \" \"",
        "detail": "app.nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "app.nadooit_crm.models",
        "description": "app.nadooit_crm.models",
        "peekOfCode": "class Customer(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    shipping_address = models.ForeignKey(\n        ShippingAdress, on_delete=models.SET_NULL, null=True\n    )\n    billing_address = models.ForeignKey(\n        BillingAdress, on_delete=models.SET_NULL, null=True",
        "detail": "app.nadooit_crm.models",
        "documentation": {}
    },
    {
        "label": "NadooitDeliveryConfig",
        "kind": 6,
        "importPath": "app.nadooit_delivery.apps",
        "description": "app.nadooit_delivery.apps",
        "peekOfCode": "class NadooitDeliveryConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"nadooit_delivery\"",
        "detail": "app.nadooit_delivery.apps",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "app.nadooit_delivery.models",
        "description": "app.nadooit_delivery.models",
        "peekOfCode": "class Order(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.customer.name + ' ' + self.created_at.strftime('%Y-%m-%d %H:%M:%S')\nclass OrderItem(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    order = models.ForeignKey(Order, on_delete=models.CASCADE)",
        "detail": "app.nadooit_delivery.models",
        "documentation": {}
    },
    {
        "label": "OrderItem",
        "kind": 6,
        "importPath": "app.nadooit_delivery.models",
        "description": "app.nadooit_delivery.models",
        "peekOfCode": "class OrderItem(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    order = models.ForeignKey(Order, on_delete=models.CASCADE)\n    product = models.ForeignKey(Product, on_delete=models.CASCADE)\n    quantity = models.IntegerField()\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.product.name + ' ' + self.quantity.__str__()",
        "detail": "app.nadooit_delivery.models",
        "documentation": {}
    },
    {
        "label": "NadooitFunnelConfig",
        "kind": 6,
        "importPath": "app.nadooit_funnel.apps",
        "description": "app.nadooit_funnel.apps",
        "peekOfCode": "class NadooitFunnelConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_funnel'",
        "detail": "app.nadooit_funnel.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0001_initial",
        "description": "app.nadooit_hr.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        (\"nadooit_crm\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Employee\",\n            fields=[",
        "detail": "app.nadooit_hr.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0002_rename_customers_employee_customers_the_employee_works_for",
        "description": "app.nadooit_hr.migrations.0002_rename_customers_employee_customers_the_employee_works_for",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='employee',\n            old_name='customers',\n            new_name='customers_the_employee_works_for',\n        ),",
        "detail": "app.nadooit_hr.migrations.0002_rename_customers_employee_customers_the_employee_works_for",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0003_employeemanager",
        "description": "app.nadooit_hr.migrations.0003_employeemanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_hr', '0002_rename_customers_employee_customers_the_employee_works_for'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='EmployeeManager',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "app.nadooit_hr.migrations.0003_employeemanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res",
        "description": "app.nadooit_hr.migrations.0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_hr', '0003_employeemanager'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='employeemanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',",
        "detail": "app.nadooit_hr.migrations.0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more",
        "description": "app.nadooit_hr.migrations.0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customermanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_customer_manager_has_given_the_role_to', to='nadooit_hr.employee'),\n        ),",
        "detail": "app.nadooit_hr.migrations.0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0006_customermanager_can_give_customermanager_role_and_more",
        "description": "app.nadooit_hr.migrations.0006_customermanager_can_give_customermanager_role_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0005_customermanager_list_of_employees_the_manager_has_given_the_role_to_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customermanager',\n            name='can_give_CustomerManager_role',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_hr.migrations.0006_customermanager_can_give_customermanager_role_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0007_employeecontract",
        "description": "app.nadooit_hr.migrations.0007_employeecontract",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_hr', '0006_customermanager_can_give_customermanager_role_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='EmployeeContract',\n            fields=[\n                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),",
        "detail": "app.nadooit_hr.migrations.0007_employeecontract",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0008_employee_created_at_employee_updated_at",
        "description": "app.nadooit_hr.migrations.0008_employee_created_at_employee_updated_at",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0007_employeecontract'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employee',\n            name='created_at',\n            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),\n            preserve_default=False,",
        "detail": "app.nadooit_hr.migrations.0008_employee_created_at_employee_updated_at",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0009_remove_employee_customers_the_employee_works_for",
        "description": "app.nadooit_hr.migrations.0009_remove_employee_customers_the_employee_works_for",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0008_employee_created_at_employee_updated_at'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='employee',\n            name='customers_the_employee_works_for',\n        ),\n    ]",
        "detail": "app.nadooit_hr.migrations.0009_remove_employee_customers_the_employee_works_for",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0010_employeecontract_is_active_and_more",
        "description": "app.nadooit_hr.migrations.0010_employeecontract_is_active_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0009_remove_employee_customers_the_employee_works_for'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employeecontract',\n            name='is_active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "app.nadooit_hr.migrations.0010_employeecontract_is_active_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0011_employeecontract_deactivation_date",
        "description": "app.nadooit_hr.migrations.0011_employeecontract_deactivation_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0010_employeecontract_is_active_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employeecontract',\n            name='deactivation_date',\n            field=models.DateField(blank=True, null=True),\n        ),",
        "detail": "app.nadooit_hr.migrations.0011_employeecontract_deactivation_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0012_employeemanager_can_delete_employee",
        "description": "app.nadooit_hr.migrations.0012_employeemanager_can_delete_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0011_employeecontract_deactivation_date'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='employeemanager',\n            name='can_delete_employee',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_hr.migrations.0012_employeemanager_can_delete_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0013_rename_can_give_employeemanager_role_employeemanager_can_give_manager_role",
        "description": "app.nadooit_hr.migrations.0013_rename_can_give_employeemanager_role_employeemanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0012_employeemanager_can_delete_employee'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='employeemanager',\n            old_name='can_give_EmployeeManager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_hr.migrations.0013_rename_can_give_employeemanager_role_employeemanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0014_rename_can_give_customermanager_role_customermanager_can_give_manager_role",
        "description": "app.nadooit_hr.migrations.0014_rename_can_give_customermanager_role_customermanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0013_rename_can_give_employeemanager_role_employeemanager_can_give_manager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customermanager',\n            old_name='can_give_CustomerManager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_hr.migrations.0014_rename_can_give_customermanager_role_customermanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0015_rename_can_add_new_employees_employeemanager_can_add_new_employee",
        "description": "app.nadooit_hr.migrations.0015_rename_can_add_new_employees_employeemanager_can_add_new_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0014_rename_can_give_customermanager_role_customermanager_can_give_manager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='employeemanager',\n            old_name='can_add_new_employees',\n            new_name='can_add_new_employee',\n        ),",
        "detail": "app.nadooit_hr.migrations.0015_rename_can_add_new_employees_employeemanager_can_add_new_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0016_alter_employeemanager_employee",
        "description": "app.nadooit_hr.migrations.0016_alter_employeemanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0015_rename_can_add_new_employees_employeemanager_can_add_new_employee'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='employeemanager',\n            name='employee',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nadooit_hr.employee'),\n        ),",
        "detail": "app.nadooit_hr.migrations.0016_alter_employeemanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0017_alter_employeemanager_employee",
        "description": "app.nadooit_hr.migrations.0017_alter_employeemanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0016_alter_employeemanager_employee'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='employeemanager',\n            name='employee',\n            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='nadooit_hr.employee'),\n        ),",
        "detail": "app.nadooit_hr.migrations.0017_alter_employeemanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0018_employeemanagercontract",
        "description": "app.nadooit_hr.migrations.0018_employeemanagercontract",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0017_alter_employeemanager_employee'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='EmployeeManagerContract',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('can_add_new_employee', models.BooleanField(default=False)),",
        "detail": "app.nadooit_hr.migrations.0018_employeemanagercontract",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0019_alter_employeemanagercontract_contract",
        "description": "app.nadooit_hr.migrations.0019_alter_employeemanagercontract_contract",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0018_employeemanagercontract'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='employeemanagercontract',\n            name='contract',\n            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='nadooit_hr.employeecontract'),\n        ),",
        "detail": "app.nadooit_hr.migrations.0019_alter_employeemanagercontract_contract",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0020_delete_employeemanager",
        "description": "app.nadooit_hr.migrations.0020_delete_employeemanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0019_alter_employeemanagercontract_contract'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='EmployeeManager',\n        ),\n    ]",
        "detail": "app.nadooit_hr.migrations.0020_delete_employeemanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0021_customermanagercontract_and_more",
        "description": "app.nadooit_hr.migrations.0021_customermanagercontract_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0020_delete_employeemanager'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomerManagerContract',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('can_give_manager_role', models.BooleanField(default=False)),",
        "detail": "app.nadooit_hr.migrations.0021_customermanagercontract_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0022_customerprogramexecutionmanagercontract",
        "description": "app.nadooit_hr.migrations.0022_customerprogramexecutionmanagercontract",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0021_customermanagercontract_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomerProgramExecutionManagerContract',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('can_create_customer_program_execution', models.BooleanField(default=False)),",
        "detail": "app.nadooit_hr.migrations.0022_customerprogramexecutionmanagercontract",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_hr.migrations.0023_timeaccountmanagercontract",
        "description": "app.nadooit_hr.migrations.0023_timeaccountmanagercontract",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0022_customerprogramexecutionmanagercontract'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='TimeAccountManagerContract',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('can_create_time_accounts', models.BooleanField(default=False)),",
        "detail": "app.nadooit_hr.migrations.0023_timeaccountmanagercontract",
        "documentation": {}
    },
    {
        "label": "NadooitHrConfig",
        "kind": 6,
        "importPath": "app.nadooit_hr.apps",
        "description": "app.nadooit_hr.apps",
        "peekOfCode": "class NadooitHrConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_hr'",
        "detail": "app.nadooit_hr.apps",
        "documentation": {}
    },
    {
        "label": "Employee",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class Employee(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    # a customers field that shows what customers the employee is assigned to\n    # customers_the_employee_works_for = models.ManyToManyField(Customer)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        display_name = self.user.display_name\n        if display_name is not None:",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeContract",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class EmployeeContract(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # the employee that is assigned to the customer\n    employee = models.ForeignKey(Employee, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    # the start date of the contract\n    start_date = models.DateField(auto_now_add=True)\n    # the end date of the contract\n    end_date = models.DateField(null=True, blank=True)\n    # if false the contract is not active and hidden from the frontend",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "EmployeeManagerContract",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class EmployeeManagerContract(models.Model):\n    contract = models.OneToOneField(EmployeeContract, on_delete=models.CASCADE)\n    # if true, the employee manager can assign employees to customers\n    can_add_new_employee = models.BooleanField(default=False)\n    # if true, the employee manager can remove employees from customers\n    can_delete_employee = models.BooleanField(default=False)\n    # if true, the employee manager can give the role of employee manager to other employees\n    can_give_manager_role = models.BooleanField(default=False)\n    def __str__(self) -> str:\n        return (",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramManagerContract",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class CustomerProgramManagerContract(models.Model):\n    contract = models.OneToOneField(EmployeeContract, on_delete=models.CASCADE)\n    # if true, the employee manager can assign employees to customers\n    can_create_customer_program = models.BooleanField(default=False)\n    # if true, the employee manager can remove employees from customers\n    can_delete_customer_program = models.BooleanField(default=False)\n    # if true, the employee manager can give the role of employee manager to other employees\n    can_give_manager_role = models.BooleanField(default=False)\n    def __str__(self) -> str:\n        return (",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgramExecutionManagerContract",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class CustomerProgramExecutionManagerContract(models.Model):\n    contract = models.OneToOneField(EmployeeContract, on_delete=models.CASCADE)\n    # If true the customer can create customer program executions\n    can_create_customer_program_execution = models.BooleanField(default=False)\n    # If true the customer can delete customer program executions\n    can_delete_customer_program_execution = models.BooleanField(default=False)\n    # If true the customer can give the rights to other users\n    can_give_manager_role = models.BooleanField(default=False)\n    def __str__(self) -> str:\n        return (",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "TimeAccountManagerContract",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class TimeAccountManagerContract(models.Model):\n    contract = models.OneToOneField(EmployeeContract, on_delete=models.CASCADE)\n    # If true the customer can create customer program executions\n    can_create_time_accounts = models.BooleanField(default=False)\n    # If true the customer can delete customer program executions\n    can_delete_time_accounts = models.BooleanField(default=False)\n    # If true the customer can give the rights to other users\n    can_give_manager_role = models.BooleanField(default=False)\n    def __str__(self) -> str:\n        return (",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "CustomerManagerContract",
        "kind": 6,
        "importPath": "app.nadooit_hr.models",
        "description": "app.nadooit_hr.models",
        "peekOfCode": "class CustomerManagerContract(models.Model):\n    contract = models.OneToOneField(EmployeeContract, on_delete=models.CASCADE)\n    # if true, the employee manager can give the role of employee manager to other employees\n    can_give_manager_role = models.BooleanField(default=False)\n    def __str__(self) -> str:\n        return (\n            f\"Angestellter: {self.contract.employee} - Kunde: {self.contract.customer}\"\n        )",
        "detail": "app.nadooit_hr.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_key.migrations.0001_initial",
        "description": "app.nadooit_key.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='KeyManager',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "app.nadooit_key.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_key.migrations.0002_keymanager_key_managers_assigened_by_this_key_manager",
        "description": "app.nadooit_key.migrations.0002_keymanager_key_managers_assigened_by_this_key_manager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_key', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='keymanager',\n            name='key_managers_assigened_by_this_key_manager',\n            field=models.ManyToManyField(blank=True, to='nadooit_key.keymanager'),\n        ),",
        "detail": "app.nadooit_key.migrations.0002_keymanager_key_managers_assigened_by_this_key_manager",
        "documentation": {}
    },
    {
        "label": "NadooitKeyConfig",
        "kind": 6,
        "importPath": "app.nadooit_key.apps",
        "description": "app.nadooit_key.apps",
        "peekOfCode": "class NadooitKeyConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_key'",
        "detail": "app.nadooit_key.apps",
        "documentation": {}
    },
    {
        "label": "KeyManager",
        "kind": 6,
        "importPath": "app.nadooit_key.models",
        "description": "app.nadooit_key.models",
        "peekOfCode": "class KeyManager(models.Model):\n    user = models.OneToOneField(Employee, on_delete=models.CASCADE)\n    can_create_keys = models.BooleanField(default=False)\n    can_delete_keys = models.BooleanField(default=False)\n    can_update_keys = models.BooleanField(default=False)\n    can_create_key_managers = models.BooleanField(default=False)\n    can_delete_key_managers = models.BooleanField(default=False)\n    can_update_key_managers = models.BooleanField(default=False)\n    key_managers_assigened_by_this_key_manager = models.ManyToManyField(\"self\", blank=True)\n    def __str__(self):",
        "detail": "app.nadooit_key.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_network.migrations.0001_initial",
        "description": "app.nadooit_network.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        (\"nadooit_program_ownership_system\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"NadooitInventory\",\n            fields=[",
        "detail": "app.nadooit_network.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkConfig",
        "kind": 6,
        "importPath": "app.nadooit_network.apps",
        "description": "app.nadooit_network.apps",
        "peekOfCode": "class NadooitNetworkConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_network'",
        "detail": "app.nadooit_network.apps",
        "documentation": {}
    },
    {
        "label": "NadooitInventory",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitInventory(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # Holds the amount of money in the inventory\n    money = models.IntegerField(default=0)\n    # Holds shares of programs\n    list_of_nadooit_program_ownership_shares = models.ManyToManyField(\n        ProgramShare, blank=True\n    )\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkMember",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitNetworkMember(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(User, on_delete=models.CASCADE)\n    inventory = models.ForeignKey(NadooitInventory, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.user.display_name + \" \" + self.user.user_code\nclass NadooitNetworkFriendslist(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(NadooitNetworkMember, on_delete=models.CASCADE)\n    friend_list = models.ManyToManyField(",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkFriendslist",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitNetworkFriendslist(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    user = models.ForeignKey(NadooitNetworkMember, on_delete=models.CASCADE)\n    friend_list = models.ManyToManyField(\n        NadooitNetworkMember, related_name=\"friend_list\"\n    )\n    def __str__(self):\n        return (\n            self.user.user.display_name\n            + \" \"",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkGroup",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitNetworkGroup(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # the group is made up of members. There is a limit of 10 members in a group.\n    members = models.ManyToManyField(NadooitNetworkMember, blank=True)\n    created_by = models.ForeignKey(\n        NadooitNetworkMember, on_delete=models.CASCADE, related_name=\"created_by\"\n    )\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self) -> str:",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitNetworkGuildMember",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitNetworkGuildMember(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    nadooit_network_member = models.ForeignKey(\n        NadooitNetworkMember, on_delete=models.CASCADE\n    )\n    GUILD_ROLES = (\n        (\"MEMBER\", \"MEMBER\"),\n        (\"MODERATOR\", \"MODERATOR\"),\n        (\"ADMIN\", \"ADMIN\"),\n    )",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitGuildBank",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitGuildBank(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    guild_inventory = models.ForeignKey(NadooitInventory, on_delete=models.CASCADE)\n    # the amount of money the user has in the guild bank.\nclass NadooitGuild(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitGuild",
        "kind": 6,
        "importPath": "app.nadooit_network.models",
        "description": "app.nadooit_network.models",
        "peekOfCode": "class NadooitGuild(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255, null=True, blank=True)\n    description = models.TextField(null=True, blank=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    # Every guild has a members of type NadooitNetworkMember. Every NadooitNetworkMember can be a member of one guild.\n    member_list = models.ManyToManyField(NadooitNetworkGuildMember, blank=True)\n    guild_logo = models.ImageField(upload_to=\"guild_logo\", blank=True, null=True)\n    def __str__(self):",
        "detail": "app.nadooit_network.models",
        "documentation": {}
    },
    {
        "label": "NadooitOsConfig",
        "kind": 6,
        "importPath": "app.nadooit_os.apps",
        "description": "app.nadooit_os.apps",
        "peekOfCode": "class NadooitOsConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_os'",
        "detail": "app.nadooit_os.apps",
        "documentation": {}
    },
    {
        "label": "UserCodeModelChoiceField",
        "kind": 6,
        "importPath": "app.nadooit_os.forms",
        "description": "app.nadooit_os.forms",
        "peekOfCode": "class UserCodeModelChoiceField(ModelChoiceField):\n    def label_from_instance(self, obj):\n        return obj.user_code\nclass ApiKeyForm(forms.Form):\n    api_key = forms.UUIDField(\n        initial=uuid.uuid4,\n        required=True,\n        widget=forms.TextInput(\n            attrs={\n                \"class\": \"form-control\",",
        "detail": "app.nadooit_os.forms",
        "documentation": {}
    },
    {
        "label": "ApiKeyForm",
        "kind": 6,
        "importPath": "app.nadooit_os.forms",
        "description": "app.nadooit_os.forms",
        "peekOfCode": "class ApiKeyForm(forms.Form):\n    api_key = forms.UUIDField(\n        initial=uuid.uuid4,\n        required=True,\n        widget=forms.TextInput(\n            attrs={\n                \"class\": \"form-control\",\n                \"style\": \"width: 390px;\",\n                \"class\": \"form-control\",\n            }",
        "detail": "app.nadooit_os.forms",
        "documentation": {}
    },
    {
        "label": "ApiKeyManagerForm",
        "kind": 6,
        "importPath": "app.nadooit_os.forms",
        "description": "app.nadooit_os.forms",
        "peekOfCode": "class ApiKeyManagerForm(forms.Form):\n    # Text input for user code not choice field\n    user_code = forms.CharField(\n        required=True,\n        label=\"Schlüssel User code eingeben:\",\n        widget=forms.TextInput(\n            attrs={\n                \"class\": \"form-control\",\n                \"style\": \"width: 150px;\",\n                \"class\": \"form-control\",",
        "detail": "app.nadooit_os.forms",
        "documentation": {}
    },
    {
        "label": "CustomerTimeAccountManagerForm",
        "kind": 6,
        "importPath": "app.nadooit_os.forms",
        "description": "app.nadooit_os.forms",
        "peekOfCode": "class CustomerTimeAccountManagerForm(forms.Form):\n    # Text input for user code not choice field\n    user_code = forms.CharField(\n        required=True,\n        label=\"Schlüssel User code eingeben:\",\n        widget=forms.TextInput(\n            attrs={\n                \"class\": \"form-control\",\n                \"style\": \"width: 150px;\",\n                \"class\": \"form-control\",",
        "detail": "app.nadooit_os.forms",
        "documentation": {}
    },
    {
        "label": "check__user__exists__for__user_code",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__user__exists__for__user_code(user_code) -> bool:\n    return User.objects.filter(user_code=user_code).exists()\n# Sets the employee contract as the given state\ndef set__employee_contract__is_active_state__for__employee_contract_id(\n    employee_contract_id, contract_state\n) -> EmployeeContract:\n    employee_contract = get__employee_contract__for__employee_contract_id(\n        employee_contract_id\n    )\n    employee_contract.is_active = contract_state",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "set__employee_contract__is_active_state__for__employee_contract_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def set__employee_contract__is_active_state__for__employee_contract_id(\n    employee_contract_id, contract_state\n) -> EmployeeContract:\n    employee_contract = get__employee_contract__for__employee_contract_id(\n        employee_contract_id\n    )\n    employee_contract.is_active = contract_state\n    # If the contract is set to active, set the deactivation date to null\n    employee_contract.deactivation_date = None\n    employee_contract.save()",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_contract__for__employee_contract_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__employee_contract__for__employee_contract_id(\n    employee_contract_id,\n) -> EmployeeContract:\n    employee_contract = EmployeeContract.objects.get(id=employee_contract_id)\n    return employee_contract\n# Sets the deactivation date of a employee contract for the given employee contract id\ndef set__employee_contract__deactivation_date__for__employee_contract_id(\n    employee_contract_id, deactivation_date\n) -> EmployeeContract:\n    employee_contract = EmployeeContract.objects.get(id=employee_contract_id)",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "set__employee_contract__deactivation_date__for__employee_contract_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def set__employee_contract__deactivation_date__for__employee_contract_id(\n    employee_contract_id, deactivation_date\n) -> EmployeeContract:\n    employee_contract = EmployeeContract.objects.get(id=employee_contract_id)\n    employee_contract.deactivation_date = deactivation_date\n    employee_contract.save()\n    return employee_contract\n# Sets an employee contract as inactive for the given employee contract id\ndef set_employee_contract__as_inactive__for__employee_contract_id(\n    employee_contract_id,",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "set_employee_contract__as_inactive__for__employee_contract_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def set_employee_contract__as_inactive__for__employee_contract_id(\n    employee_contract_id,\n) -> EmployeeContract:\n    # Gets the contract for the given employee contract id\n    employee_contract = EmployeeContract.objects.get(id=employee_contract_id)\n    # Sets the contract as inactive\n    employee_contract.is_active = False\n    # Sets the deactivation date to the current date\n    employee_contract.deactivation_date = timezone.now()\n    employee_contract.save()",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee__exists__for__user_code",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__employee__exists__for__user_code(user_code) -> bool:\n    return Employee.objects.filter(user__user_code=user_code).exists()\n# Creates and returns a new employee  for the given user code\ndef create__employee__for__user_code(user_code) -> Employee | None:\n    if not check__employee__exists__for__user_code(user_code):\n        # create new employee for the user_code\n        user = User.objects.get(user_code=user_code)\n        return Employee.objects.create(user=user)\n    return None\ndef check__employee_contract__exists__for__employee__and__customer_id(",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "create__employee__for__user_code",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def create__employee__for__user_code(user_code) -> Employee | None:\n    if not check__employee__exists__for__user_code(user_code):\n        # create new employee for the user_code\n        user = User.objects.get(user_code=user_code)\n        return Employee.objects.create(user=user)\n    return None\ndef check__employee_contract__exists__for__employee__and__customer_id(\n    employee, cutomer_id\n) -> bool:\n    return EmployeeContract.objects.filter(",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_contract__exists__for__employee__and__customer_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__employee_contract__exists__for__employee__and__customer_id(\n    employee, cutomer_id\n) -> bool:\n    return EmployeeContract.objects.filter(\n        employee=employee, customer__id=cutomer_id\n    ).exists()\ndef create__employee_contract__between__employee_and__customer_id(\n    employee, customer_id\n) -> EmployeeContract:\n    return EmployeeContract.objects.create(",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "create__employee_contract__between__employee_and__customer_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def create__employee_contract__between__employee_and__customer_id(\n    employee, customer_id\n) -> EmployeeContract:\n    return EmployeeContract.objects.create(\n        employee=employee,\n        customer=Customer.objects.get(id=customer_id),\n    )\n# Returns the employee for the given user code\ndef get__employee__for__user_code(user_code) -> Employee:\n    employee = None",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee__for__user_code",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__employee__for__user_code(user_code) -> Employee:\n    employee = None\n    if not check__employee__exists__for__user_code(user_code):\n        # create new employee for the user_code\n        employee = create__employee__for__user_code(user_code)\n    if employee == None:\n        # get the employee object for the user\n        employee = Employee.objects.get(user__user_code=user_code)\n    return employee\ndef check__employee_manager_contract__exists__for__employee_contract(",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_manager_contract__exists__for__employee_contract",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__employee_manager_contract__exists__for__employee_contract(\n    employee_contract,\n) -> bool:\n    return EmployeeManagerContract.objects.filter(contract=employee_contract).exists()\ndef check__more_then_one_contract_between__user_code__and__customer_id(\n    user_code, customer_id\n) -> bool:\n    return (\n        EmployeeContract.objects.filter(\n            employee__user__user_code=user_code, customer__id=customer_id",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__more_then_one_contract_between__user_code__and__customer_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__more_then_one_contract_between__user_code__and__customer_id(\n    user_code, customer_id\n) -> bool:\n    return (\n        EmployeeContract.objects.filter(\n            employee__user__user_code=user_code, customer__id=customer_id\n        ).count()\n        > 1\n    )\ndef get__employee_contract__for__employee__and__customer_id(",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_contract__for__employee__and__customer_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__employee_contract__for__employee__and__customer_id(\n    employee, customer_id\n) -> EmployeeContract:\n    # Check if the employee has a contract with the customer\n    if not check__employee_contract__exists__for__employee__and__customer_id(\n        employee, customer_id\n    ):\n        return create__employee_contract__between__employee_and__customer_id(\n            employee, customer_id\n        )",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_manager_contract__for__employee_contract",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__employee_manager_contract__for__employee_contract(\n    employee_contract,\n) -> EmployeeManagerContract:\n    # Check if the employee has an employee manager contract with the customer\n    if not check__employee_manager_contract__exists__for__employee_contract(\n        employee_contract\n    ):\n        return EmployeeManagerContract.objects.create(contract=employee_contract)\n    else:\n        return EmployeeManagerContract.objects.get(contract=employee_contract)",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_manager_contract__for__user_code__and__customer_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__employee_manager_contract__for__user_code__and__customer_id(\n    user_code, customer_id\n) -> EmployeeManagerContract:\n    employee = get__employee__for__user_code(user_code)\n    employee_contract = get__employee_contract__for__employee__and__customer_id(\n        employee, customer_id\n    )\n    return get__employee_manager_contract__for__employee_contract(employee_contract)\ndef check__employee_manager_contract__for__user__can_deactivate__employee_contracts(\n    user,",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_manager_contract__for__user__can_deactivate__employee_contracts",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__employee_manager_contract__for__user__can_deactivate__employee_contracts(\n    user,\n) -> bool:\n    return EmployeeManagerContract.objects.filter(\n        contract__employee=user.employee,\n        contract__is_active=True,\n        can_delete_employee=True,\n    ).exists()\ndef check__employee_manager_contract__for__user__can_give_manager_role(\n    user,",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_manager_contract__for__user__can_give_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__employee_manager_contract__for__user__can_give_manager_role(\n    user,\n) -> bool:\n    return EmployeeManagerContract.objects.filter(\n        contract__employee=user.employee,\n        contract__is_active=True,\n        can_give_manager_role=True,\n    ).exists()\ndef check__customer__exists__for__customer_id(customer_id) -> bool:\n    return Customer.objects.filter(id=customer_id).exists()",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__customer__exists__for__customer_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__customer__exists__for__customer_id(customer_id) -> bool:\n    return Customer.objects.filter(id=customer_id).exists()\ndef get__employee_contract__for__user_code__and__customer_id(\n    user_code, customer_id\n) -> EmployeeContract:\n    employee = get__employee__for__user_code(user_code)\n    employee_contract = get__employee_contract__for__employee__and__customer_id(\n        employee, customer_id\n    )\n    return employee_contract",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee_contract__for__user_code__and__customer_id",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__employee_contract__for__user_code__and__customer_id(\n    user_code, customer_id\n) -> EmployeeContract:\n    employee = get__employee__for__user_code(user_code)\n    employee_contract = get__employee_contract__for__employee__and__customer_id(\n        employee, customer_id\n    )\n    return employee_contract\ndef get__list_of_customers__for__employee_manager_contract__for_user(\n    user,",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__list_of_customers__for__employee_manager_contract__for_user",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__list_of_customers__for__employee_manager_contract__for_user(\n    user,\n) -> List[Customer]:\n    list_of_employee_manager_contract_for_logged_in_user = (\n        EmployeeManagerContract.objects.filter(\n            contract__employee=user.employee, can_add_new_employee=True\n        ).distinct(\"contract__customer\")\n    )\n    # get the list of customers the employee manager is responsible for using the list_of_employee_manager_contract_for_logged_in_user\n    list_of_customers__for__employee_manager_contract = []",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__employee_manager_contract__exists__for__employee_manager_and_customer__and__can_add_users__and__is_active",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__employee_manager_contract__exists__for__employee_manager_and_customer__and__can_add_users__and__is_active(\n    employee_manager, customer\n) -> bool:\n    return EmployeeManagerContract.objects.filter(\n        contract__employee=employee_manager,\n        contract__customer=customer,\n        contract__is_active=True,\n        can_add_new_employee=True,\n    ).exists()\ndef get__employee__for__user(user) -> Employee:",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__employee__for__user",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__employee__for__user(user) -> Employee:\n    return Employee.objects.get(user=user)\ndef get__price_per_hour__for__total_time_saved(total_time_saved: int) -> str:\n    print(\"total_time_saved\", total_time_saved)\n    price_per_hour = 0\n    points = get__price_list()\n    for time in points:\n        if total_time_saved > time:\n            # If the time saved is greater than the time of the next point, the price of the last point before will be used\n            price_per_hour = points[time]",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__price_per_hour__for__total_time_saved",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__price_per_hour__for__total_time_saved(total_time_saved: int) -> str:\n    print(\"total_time_saved\", total_time_saved)\n    price_per_hour = 0\n    points = get__price_list()\n    for time in points:\n        if total_time_saved > time:\n            # If the time saved is greater than the time of the next point, the price of the last point before will be used\n            price_per_hour = points[time]\n        else:\n            break",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__price_list",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__price_list() -> dict:\n    # Define\tpoints for the graph\n    # The time saved starts at 0 seconds and increases with each point\n    # The price starts at 230 and decreases with each point untill it reaches 30\n    return {  # time: price\n        0: 230,\n        1: 230,\n        2: 230,\n        3: 230,\n        4: 230,",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__new_price_per_second__for__customer_program",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__new_price_per_second__for__customer_program(\n    customer_program: CustomerProgram,\n) -> decimal:\n    print(\"Kommt bis hier hin\")\n    # Get the current amount of time saved by the program belonging to the customer program execution (in hours) check what the price should be\n    # Get all the customer program executions belonging to the program of the customer program execution\n    total_time_saved_program_executions_in_seconds = (\n        get__total_time_saved__for__customer_program(customer_program)\n    )\n    print(total_time_saved_program_executions_in_seconds)",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__total_time_saved__for__customer_program",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__total_time_saved__for__customer_program(customer_program: CustomerProgram):\n    from django.db.models import Q\n    from django.db.models import Sum\n    return (\n        CustomerProgramExecution.objects.filter(\n            Q(customer_program=customer_program) & Q(payment_status=\"PAID\")\n            | Q(payment_status=\"NOT_PAID\")\n        )\n    ).aggregate(Sum(\"program_time_saved_in_seconds\"))[\n        \"program_time_saved_in_seconds__sum\"",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__next_price_level__for__customer_program",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__next_price_level__for__customer_program(\n    customer_program: CustomerProgram,\n) -> str:\n    totat_time_saved = get__total_time_saved__for__customer_program(customer_program)\n    # get the list of price levels\n    list_of_price_levels = get__price_list()\n    # get the price level for the total time saved\n    currnet_price_level = get__price_per_hour__for__total_time_saved(totat_time_saved)\n    # find the position in the list of price levels for the current price level and return the next price level\n    for price_level in list_of_price_levels:",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__nadooit_api_key__for__hashed_api_key",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__nadooit_api_key__for__hashed_api_key(hashed_api_key) -> str:\n    return NadooitApiKey.objects.get(api_key=hashed_api_key)\ndef get__hashed_api_key__for__request(request) -> str:\n    \"\"\"\n    gets the hashed api key from the request\n    \"\"\"\n    # gets the api key from the request\n    api_key = request.data.get(\"NADOOIT__API_KEY\")\n    # hashes the api key\n    hashed_api_key = hashlib.sha256(api_key.encode()).hexdigest()",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__hashed_api_key__for__request",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__hashed_api_key__for__request(request) -> str:\n    \"\"\"\n    gets the hashed api key from the request\n    \"\"\"\n    # gets the api key from the request\n    api_key = request.data.get(\"NADOOIT__API_KEY\")\n    # hashes the api key\n    hashed_api_key = hashlib.sha256(api_key.encode()).hexdigest()\n    return hashed_api_key\ndef check__nadooit_api_key__has__is_active(hashed_api_key) -> bool:",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "check__nadooit_api_key__has__is_active",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def check__nadooit_api_key__has__is_active(hashed_api_key) -> bool:\n    return NadooitApiKey.objects.filter(api_key=hashed_api_key, is_active=True).exists()\ndef get__user_code__for__nadooit_api_key(nadooit_api_key) -> str:\n    return nadooit_api_key.user.user_code",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "get__user_code__for__nadooit_api_key",
        "kind": 2,
        "importPath": "app.nadooit_os.services",
        "description": "app.nadooit_os.services",
        "peekOfCode": "def get__user_code__for__nadooit_api_key(nadooit_api_key) -> str:\n    return nadooit_api_key.user.user_code",
        "detail": "app.nadooit_os.services",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "app.nadooit_os.urls",
        "description": "app.nadooit_os.urls",
        "peekOfCode": "app_name = \"nadooit_os\"\nurlpatterns = [\n    path(\"\", index_nadooit_os, name=\"nadooit-os\"),\n    path(\n        \"time-account/customer-time-account-overview\",\n        customer_time_account_overview,\n        name=\"customer-time-account-overview\",\n    ),\n    path(\n        \"time-account/give-customer-time-account-manager-role\",",
        "detail": "app.nadooit_os.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_os.urls",
        "description": "app.nadooit_os.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", index_nadooit_os, name=\"nadooit-os\"),\n    path(\n        \"time-account/customer-time-account-overview\",\n        customer_time_account_overview,\n        name=\"customer-time-account-overview\",\n    ),\n    path(\n        \"time-account/give-customer-time-account-manager-role\",\n        give_customer_time_account_manager_role,",
        "detail": "app.nadooit_os.urls",
        "documentation": {}
    },
    {
        "label": "user_is_Time_Account_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Time_Account_Manager(user: User) -> bool:\n    if TimeAccountManagerContract.objects.filter(\n        contract__employee=user.employee,\n        contract__is_active=True,\n    ).exists():\n        return True\n    else:\n        return False\ndef user_is_Time_Account_Manager_and_can_give_manager_role(\n    user: User,",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Time_Account_Manager_and_can_give_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Time_Account_Manager_and_can_give_manager_role(\n    user: User,\n) -> bool:\n    if TimeAccountManagerContract.objects.filter(\n        contract__employee=user.employee,\n        contract__is_active=True,\n        can_give_manager_role=True,\n    ).exists():\n        return True\n    else:",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Api_Key_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Api_Key_Manager(user: User) -> bool:\n    if hasattr(user.employee, \"nadooitapikeymanager\"):\n        return True\n    return False\ndef user_is_Api_Key_Manager_and_can_give_manager_role(user: User) -> bool:\n    if hasattr(user.employee, \"nadooitapikeymanager\"):\n        if user.employee.nadooitapikeymanager.can_give_manager_role:\n            return True\n    return False\n# Tests for Customer Program Execution Manager",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Api_Key_Manager_and_can_give_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Api_Key_Manager_and_can_give_manager_role(user: User) -> bool:\n    if hasattr(user.employee, \"nadooitapikeymanager\"):\n        if user.employee.nadooitapikeymanager.can_give_manager_role:\n            return True\n    return False\n# Tests for Customer Program Execution Manager\ndef user_is_Customer_Program_Execution_Manager(user: User) -> bool:\n    # checks if the employee for the user is an employee manager\n    if CustomerProgramExecutionManagerContract.objects.filter(\n        contract__employee=user.employee, contract__is_active=True",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Customer_Program_Execution_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Customer_Program_Execution_Manager(user: User) -> bool:\n    # checks if the employee for the user is an employee manager\n    if CustomerProgramExecutionManagerContract.objects.filter(\n        contract__employee=user.employee, contract__is_active=True\n    ).exists():\n        return True\n    else:\n        return False\ndef user_is_Customer_Program_Execution_Manager_and_can_give_Customer_Program_Execution_Manager_role(\n    user: User,",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Customer_Program_Execution_Manager_and_can_give_Customer_Program_Execution_Manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Customer_Program_Execution_Manager_and_can_give_Customer_Program_Execution_Manager_role(\n    user: User,\n) -> bool:\n    if CustomerProgramExecutionManagerContract.objects.filter(\n        contract__employee=user.employee,\n        contract__is_active=True,\n        can_give_manager_role=True,\n    ).exists():\n        return True\n    else:",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Customer_Program_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Customer_Program_Manager(user: User) -> bool:\n    # checks if the employee for the user is an employee manager\n    if CustomerProgramManagerContract.objects.filter(\n        contract__employee=user.employee, contract__is_active=True\n    ).exists():\n        return True\n    else:\n        return False\ndef user_is_Customer_Program_Manager_and_can_give_Customer_Program_Manager_role(\n    user: User,",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Customer_Program_Manager_and_can_give_Customer_Program_Manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Customer_Program_Manager_and_can_give_Customer_Program_Manager_role(\n    user: User,\n) -> bool:\n    if CustomerProgramManagerContract.objects.filter(\n        contract__employee=user.employee,\n        contract__is_active=True,\n        can_give_manager_role=True,\n    ).exists():\n        return True\n    else:",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Employee_Manager",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Employee_Manager(user: User) -> bool:\n    # checks if the employee for the user is an employee manager\n    if EmployeeManagerContract.objects.filter(\n        contract__employee=user.employee, contract__is_active=True\n    ).exists():\n        return True\n    else:\n        return False\ndef user_is_Employee_Manager_and_can_give_Employee_Manager_role(\n    user: User,",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Employee_Manager_and_can_give_Employee_Manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Employee_Manager_and_can_give_Employee_Manager_role(\n    user: User,\n) -> bool:\n    if check__employee_manager_contract__for__user__can_give_manager_role(user):\n        return True\n    else:\n        return False\ndef user_is_Employee_Manager_and_can_add_new_employee(\n    user: User,\n) -> bool:",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Employee_Manager_and_can_add_new_employee",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Employee_Manager_and_can_add_new_employee(\n    user: User,\n) -> bool:\n    if EmployeeManagerContract.objects.filter(\n        contract__employee=user.employee,\n        contract__is_active=True,\n        can_add_new_employee=True,\n    ).exists():\n        return True\n    else:",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "user_is_Employee_Manager_and_can_delete_employee",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def user_is_Employee_Manager_and_can_delete_employee(\n    user: User,\n) -> bool:\n    if check__employee_manager_contract__for__user__can_deactivate__employee_contracts(\n        user\n    ):\n        return True\n    else:\n        return False\n# Getting the user roles",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "get__user__roles_and_rights",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def get__user__roles_and_rights(request: HttpRequest) -> dict:\n    return {\n        \"is_time_account_manager\": user_is_Time_Account_Manager(request.user),\n        \"user_is_Time_Account_Manager_and_can_give_manager_role\": user_is_Time_Account_Manager_and_can_give_manager_role(\n            request.user\n        ),\n        \"is_api_key_manager\": user_is_Api_Key_Manager(request.user),\n        \"user_is_api_key_manager_and_can_give_manager_role\": user_is_Api_Key_Manager_and_can_give_manager_role(\n            request.user\n        ),",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "index_nadooit_os",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def index_nadooit_os(request: HttpRequest):\n    return render(\n        request,\n        \"nadooit_os/index.html\",\n        # context as dict\n        # first item is page_title\n        # dict from get__user__roles_and_rights is added\n        {\n            \"page_title\": \"Nadooit OS\",\n            **get__user__roles_and_rights(request),",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_time_account_overview",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_time_account_overview(request: HttpRequest):\n    contracts_of_logged_in_user = TimeAccountManagerContract.objects.filter(\n        contract__employee=request.user.employee, contract__is_active=True\n    )\n    customers_the_user_works_for_as_timeaccountmanager = []\n    for contract in contracts_of_logged_in_user:\n        customers_the_user_works_for_as_timeaccountmanager.append(\n            contract.contract.customer\n        )\n    list_of_customer_time_accounts = CustomerTimeAccount.objects.filter(",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "create_api_key",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def create_api_key(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        form = ApiKeyForm(request.POST)\n        if form.is_valid():\n            new_api_key = NadooitApiKey(\n                api_key=form.cleaned_data[\"api_key\"],\n                user=request.user,\n                is_active=True,\n            )",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "revoke_api_key",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def revoke_api_key(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        # get list of all api keys that are active for the user and set them to inactive\n        api_keys = NadooitApiKey.objects.filter(user=request.user, is_active=True)\n        for api_key in api_keys:\n            api_key.is_active = False\n            api_key.save()\n        return HttpResponseRedirect(\"/nadooit-os/api_key/revoke-api-key?submitted=True\")\n    else:",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_api_key_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_api_key_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        form = ApiKeyManagerForm(\n            request.POST,\n        )\n        if form.is_valid():\n            user_code = form.cleaned_data[\"user_code\"]\n            # get the employee object for the user\n            employee = Employee.objects.get(user__user_code=user_code)",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_customer_time_account_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_customer_time_account_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        # check that user_code is not empty\n        if User.objects.filter(user_code=user_code).exists():\n            # check if there is an emplyee for that user code\n            if not Employee.objects.filter(user__user_code=user_code).exists():\n                # create new employee for the user_code\n                Employee.objects.create(user=User.objects.get(user_code=user_code))",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_program_execution_overview",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_program_execution_overview(request: HttpRequest):\n    # All orders for the current customer\n    # orders are the executions of customerprograms\n    # the list of customers that the time accounts that the employee is responsible for belong to\n    # the list has for its first element the customer that the employee is responsible for\n    # the list has for its second element the ccustomer programm execution for the customer that the employee is responsible for\n    customers_the_employee_is_responsible_for_and_the_customer_programm_executions = []\n    list_of_customer_program_manger_contract_for_logged_in_user = (\n        CustomerProgramExecutionManagerContract.objects.filter(\n            contract__employee=request.user.employee, can_give_manager_role=True",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_program_execution_list_for_cutomer",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_program_execution_list_for_cutomer(\n    request: HttpRequest, filter_type, cutomer_id\n):\n    # Check if the user is a customer program execution manager for the customer\n    if not CustomerProgramExecutionManagerContract.objects.filter(\n        contract__employee=request.user.employee,\n        contract__is_active=True,\n        contract__customer__id=cutomer_id,\n    ).exists():\n        return HttpResponseForbidden()",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_program_execution_list_complaint_modal",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_program_execution_list_complaint_modal(\n    request: HttpRequest, customer_program_execution_id\n):\n    # Check that the user is a a customer program execution manager for the customer that the customer program execution belongs to\n    if not CustomerProgramExecutionManagerContract.objects.filter(\n        contract__employee=request.user.employee,\n        contract__is_active=True,\n        contract__customer=CustomerProgramExecution.objects.get(\n            id=customer_program_execution_id\n        ).customer_program.customer,",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_program_execution_send_complaint",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_program_execution_send_complaint(\n    request: HttpRequest, customer_program_execution_id\n):\n    # Check that the user is a a customer program execution manager for the customer that the customer program execution belongs to\n    if not CustomerProgramExecutionManagerContract.objects.filter(\n        contract__employee=request.user.employee,\n        contract__is_active=True,\n        contract__customer=CustomerProgramExecution.objects.get(\n            id=customer_program_execution_id\n        ).customer_program.customer,",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_customer_program_execution_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_customer_program_execution_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        # check that user_code is not empty\n        if User.objects.filter(user_code=user_code).exists():\n            # check if there is an emplyee for that user code\n            if not Employee.objects.filter(user__user_code=user_code).exists():\n                # create new employee for the user_code\n                Employee.objects.create(user=User.objects.get(user_code=user_code))",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "customer_program_overview",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def customer_program_overview(request: HttpRequest):\n    # All orders for the current customer\n    # orders are the executions of customerprograms\n    # the list of customers that the time accounts that the employee is responsible for belong to\n    # the list has for its first element the customer that the employee is responsible for\n    # the list has for its second element the ccustomer programm execution for the customer that the employee is responsible for\n    customers_the_user_is_responsible_for_and_the_customer_programms = []\n    list_of_customer_program_manger_contract_for_logged_in_user = (\n        CustomerProgramManagerContract.objects.filter(\n            contract__employee=request.user.employee, can_give_manager_role=True",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "get__customer_program_profile",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def get__customer_program_profile(request: HttpRequest, customer_program_id: str) -> HttpResponse:\n    # Check that the user is a a customer program  manager for the customer that the customer program belongs to\n    print(\"customer_program_id\", customer_program_id)\n    if not CustomerProgramManagerContract.objects.filter(\n        contract__employee=request.user.employee,\n        contract__is_active=True,\n        contract__customer=CustomerProgram.objects.get(id=customer_program_id).customer,\n    ).exists():\n        return HttpResponseForbidden()\n    # Get the customer program",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_customer_program_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_customer_program_manager_role(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        # check that user_code is not empty\n        if User.objects.filter(user_code=user_code).exists():\n            # check if there is an emplyee for that user code\n            if not Employee.objects.filter(user__user_code=user_code).exists():\n                # create new employee for the user_code\n                Employee.objects.create(user=User.objects.get(user_code=user_code))",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "employee_overview",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def employee_overview(request: HttpRequest):\n    # This page displays all the employees that the logged in user is responsible for\n    # The user can be the employee manager of multiple companies\n    # Each company has multiple employees\n    # The page displays all the employees of all the companies the user is responsible for as a lists\n    # Each list is a company and the employees are the employees of that company\n    customers_the_user_is_responsible_for_and_the_customers_employees = []\n    # get all the customers the user is responsible for\n    employee_that_is_logged_in = Employee.objects.get(user=request.user)\n    # get all the customers the employee has contracts with and is an employee manager for",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "employee_profile",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def employee_profile(request: HttpRequest, employee_id: int):\n    # TODO This is not doen yet and can and should not be used\n    # get the employee object\n    employee = Employee.objects.get(id=employee_id)\n    # A list of all the customers the user is responsible for so that in the profile the user only sees the infroation of the employee that is also part of the customers the user is responsible for\n    customers_the_user_is_responsible_for = (\n        request.user.employee.employeemanager.list_of_customers_the_manager_is_responsible_for.all()\n    )\n    # get the employee contracts of the employee that are part of the customers the user is responsible for\n    employee_contracts_of_customers_the_user_is_responsible_for = (",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "add_employee",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def add_employee(request: HttpRequest):\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        customer_id = request.POST.get(\"customers\")\n        # check that user_code is not empty\n        if check__user__exists__for__user_code(user_code):\n            if check__customer__exists__for__customer_id(customer_id):\n                if check__employee_manager_contract__exists__for__employee_manager_and_customer__and__can_add_users__and__is_active(\n                    request.user.employee, customer_id",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "give_employee_manager_role",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def give_employee_manager_role(request: HttpRequest):\n    employee_manager_giving_the_role = request.user.employee\n    submitted = False\n    if request.method == \"POST\":\n        user_code = request.POST.get(\"user_code\")\n        list_of_abilities = request.POST.getlist(\"role\")\n        customer_id = request.POST.get(\"customers\")\n        if check__more_then_one_contract_between__user_code__and__customer_id(\n            user_code, customer_id\n        ):",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "deactivate_contract",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def deactivate_contract(request: HttpRequest, employee_contract_id: str):\n    employee_contract = set_employee_contract__as_inactive__for__employee_contract_id(\n        employee_contract_id\n    )\n    return render(\n        request,\n        \"nadooit_os/hr_department/components/activate_contract_button.html\",\n        {\n            \"employee_contract\": employee_contract,\n        },",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "activate_contract",
        "kind": 2,
        "importPath": "app.nadooit_os.views",
        "description": "app.nadooit_os.views",
        "peekOfCode": "def activate_contract(request: HttpRequest, employee_contract_id: str):\n    set__employee_contract__is_active_state__for__employee_contract_id(\n        employee_contract_id, True\n    )\n    employee_contract = get__employee_contract__for__employee_contract_id(\n        employee_contract_id\n    )\n    return render(\n        request,\n        \"nadooit_os/hr_department/components/deactivate_contract_button.html\",",
        "detail": "app.nadooit_os.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program.migrations.0001_initial",
        "description": "app.nadooit_program.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"NadooitProgram\",\n            fields=[\n                (\n                    \"id\",\n                    models.UUIDField(",
        "detail": "app.nadooit_program.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program.migrations.0002_rename_nadooitprogram_program",
        "description": "app.nadooit_program.migrations.0002_rename_nadooitprogram_program",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0010_rename_nadooitprogramshare_programshare'),\n        ('nadooit_workflow', '0001_initial'),\n        ('nadooit_program', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='NadooitProgram',\n            new_name='Program',",
        "detail": "app.nadooit_program.migrations.0002_rename_nadooitprogram_program",
        "documentation": {}
    },
    {
        "label": "NadooitProgramConfig",
        "kind": 6,
        "importPath": "app.nadooit_program.apps",
        "description": "app.nadooit_program.apps",
        "peekOfCode": "class NadooitProgramConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_program'",
        "detail": "app.nadooit_program.apps",
        "documentation": {}
    },
    {
        "label": "Program",
        "kind": 6,
        "importPath": "app.nadooit_program.models",
        "description": "app.nadooit_program.models",
        "peekOfCode": "class Program(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    description = models.TextField()\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    # program_dependencies is a list of programs that this program depends on. They are represented as a list of strings. The list is empty if there are no dependencies.\n    program_dependencies = models.TextField(\n        default=\"\", blank=True, null=True, editable=True\n    )",
        "detail": "app.nadooit_program.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0001_initial",
        "description": "app.nadooit_program_ownership_system.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"nadooit_time_account\", \"0001_initial\"),\n        (\"nadooit_crm\", \"0001_initial\"),\n        (\"nadooit_program\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"NadooitProgramShare\",",
        "detail": "app.nadooit_program_ownership_system.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0002_nadooitcustomerprogrammanager",
        "description": "app.nadooit_program_ownership_system.migrations.0002_nadooitcustomerprogrammanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0002_rename_customers_employee_customers_the_employee_works_for'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_program_ownership_system', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='NadooitCustomerProgramManager',\n            fields=[",
        "detail": "app.nadooit_program_ownership_system.migrations.0002_nadooitcustomerprogrammanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0003_rename_employee_nadooitcustomerprogrammanager_employee",
        "description": "app.nadooit_program_ownership_system.migrations.0003_rename_employee_nadooitcustomerprogrammanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0002_nadooitcustomerprogrammanager'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='nadooitcustomerprogrammanager',\n            old_name='Employee',\n            new_name='employee',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0003_rename_employee_nadooitcustomerprogrammanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0004_rename_customers_the_manager_is_responsible_for_nadooitcustomerprogrammanager_list_of_customers_the_",
        "description": "app.nadooit_program_ownership_system.migrations.0004_rename_customers_the_manager_is_responsible_for_nadooitcustomerprogrammanager_list_of_customers_the_",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0003_rename_employee_nadooitcustomerprogrammanager_employee'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='nadooitcustomerprogrammanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0004_rename_customers_the_manager_is_responsible_for_nadooitcustomerprogrammanager_list_of_customers_the_",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0005_rename_nadooitcustomerprogram_customerprogram_and_more",
        "description": "app.nadooit_program_ownership_system.migrations.0005_rename_nadooitcustomerprogram_customerprogram_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_api_executions_system', '0006_rename_customers_the_manager_is_responsible_for_customerprogramexecutionmanager_list_of_customers_th'),\n        ('nadooit_program', '0001_initial'),\n        ('nadooit_time_account', '0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n        ('nadooit_program_ownership_system', '0004_rename_customers_the_manager_is_responsible_for_nadooitcustomerprogrammanager_list_of_customers_the_'),\n    ]\n    operations = [",
        "detail": "app.nadooit_program_ownership_system.migrations.0005_rename_nadooitcustomerprogram_customerprogram_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0006_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "description": "app.nadooit_program_ownership_system.migrations.0006_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n        ('nadooit_program_ownership_system', '0005_rename_nadooitcustomerprogram_customerprogram_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogrammanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_manager_has_given_the_role_to', to='nadooit_hr.employee'),",
        "detail": "app.nadooit_program_ownership_system.migrations.0006_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0007_alter_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "description": "app.nadooit_program_ownership_system.migrations.0007_alter_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0004_rename_customers_the_manager_is_responsible_for_employeemanager_list_of_customers_the_manager_is_res'),\n        ('nadooit_program_ownership_system', '0006_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customerprogrammanager',\n            name='list_of_employees_the_manager_has_given_the_role_to',\n            field=models.ManyToManyField(blank=True, related_name='list_of_employees_the_customer_program_manager_has_given_the_role_to', to='nadooit_hr.employee'),",
        "detail": "app.nadooit_program_ownership_system.migrations.0007_alter_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0008_customerprogrammanager_can_give_customerprogrammanager_role",
        "description": "app.nadooit_program_ownership_system.migrations.0008_customerprogrammanager_can_give_customerprogrammanager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0007_alter_customerprogrammanager_list_of_employees_the_manager_has_given_the_role_to'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogrammanager',\n            name='can_give_CustomerProgramManager_role',\n            field=models.BooleanField(default=False),\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0008_customerprogrammanager_can_give_customerprogrammanager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0009_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_customerprogrammanager_r",
        "description": "app.nadooit_program_ownership_system.migrations.0009_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_customerprogrammanager_r",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0008_customerprogrammanager_can_give_customerprogrammanager_role'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogrammanager',\n            old_name='can_give_CustomerProgramManager_role',\n            new_name='can_give_customerprogrammanager_role',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0009_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_customerprogrammanager_r",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0010_rename_nadooitprogramshare_programshare",
        "description": "app.nadooit_program_ownership_system.migrations.0010_rename_nadooitprogramshare_programshare",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_network', '0001_initial'),\n        ('nadooit_program', '0001_initial'),\n        ('nadooit_program_ownership_system', '0009_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_customerprogrammanager_r'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='NadooitProgramShare',\n            new_name='ProgramShare',",
        "detail": "app.nadooit_program_ownership_system.migrations.0010_rename_nadooitprogramshare_programshare",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0011_customerprogram_price_per_hour_in_cent",
        "description": "app.nadooit_program_ownership_system.migrations.0011_customerprogram_price_per_hour_in_cent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0010_rename_nadooitprogramshare_programshare'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogram',\n            name='price_per_hour_in_cent',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0011_customerprogram_price_per_hour_in_cent",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0012_rename_price_per_hour_in_cent_customerprogram_price_per_second_in_cent",
        "description": "app.nadooit_program_ownership_system.migrations.0012_rename_price_per_hour_in_cent_customerprogram_price_per_second_in_cent",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0011_customerprogram_price_per_hour_in_cent'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogram',\n            old_name='price_per_hour_in_cent',\n            new_name='price_per_second_in_cent',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0012_rename_price_per_hour_in_cent_customerprogram_price_per_second_in_cent",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0013_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_manager_role",
        "description": "app.nadooit_program_ownership_system.migrations.0013_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0012_rename_price_per_hour_in_cent_customerprogram_price_per_second_in_cent'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogrammanager',\n            old_name='can_give_customerprogrammanager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0013_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0014_delete_customerprogrammanager",
        "description": "app.nadooit_program_ownership_system.migrations.0014_delete_customerprogrammanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0013_rename_can_give_customerprogrammanager_role_customerprogrammanager_can_give_manager_role'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='CustomerProgramManager',\n        ),\n    ]",
        "detail": "app.nadooit_program_ownership_system.migrations.0014_delete_customerprogrammanager",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0015_rename_price_per_second_in_cent_customerprogram_price_per_second",
        "description": "app.nadooit_program_ownership_system.migrations.0015_rename_price_per_second_in_cent_customerprogram_price_per_second",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0014_delete_customerprogrammanager'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customerprogram',\n            old_name='price_per_second_in_cent',\n            new_name='price_per_second',\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0015_rename_price_per_second_in_cent_customerprogram_price_per_second",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0016_customerprogram_price_per_second_currency_and_more",
        "description": "app.nadooit_program_ownership_system.migrations.0016_customerprogram_price_per_second_currency_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0015_rename_price_per_second_in_cent_customerprogram_price_per_second'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogram',\n            name='price_per_second_currency',\n            field=djmoney.models.fields.CurrencyField(choices=[('XUA', 'ADB Unit of Account'), ('AFN', 'Afghan Afghani'), ('AFA', 'Afghan Afghani (1927–2002)'), ('ALL', 'Albanian Lek'), ('ALK', 'Albanian Lek (1946–1965)'), ('DZD', 'Algerian Dinar'), ('ADP', 'Andorran Peseta'), ('AOA', 'Angolan Kwanza'), ('AOK', 'Angolan Kwanza (1977–1991)'), ('AON', 'Angolan New Kwanza (1990–2000)'), ('AOR', 'Angolan Readjusted Kwanza (1995–1999)'), ('ARA', 'Argentine Austral'), ('ARS', 'Argentine Peso'), ('ARM', 'Argentine Peso (1881–1970)'), ('ARP', 'Argentine Peso (1983–1985)'), ('ARL', 'Argentine Peso Ley (1970–1983)'), ('AMD', 'Armenian Dram'), ('AWG', 'Aruban Florin'), ('AUD', 'Australian Dollar'), ('ATS', 'Austrian Schilling'), ('AZN', 'Azerbaijani Manat'), ('AZM', 'Azerbaijani Manat (1993–2006)'), ('BSD', 'Bahamian Dollar'), ('BHD', 'Bahraini Dinar'), ('BDT', 'Bangladeshi Taka'), ('BBD', 'Barbadian Dollar'), ('BYN', 'Belarusian Ruble'), ('BYB', 'Belarusian Ruble (1994–1999)'), ('BYR', 'Belarusian Ruble (2000–2016)'), ('BEF', 'Belgian Franc'), ('BEC', 'Belgian Franc (convertible)'), ('BEL', 'Belgian Franc (financial)'), ('BZD', 'Belize Dollar'), ('BMD', 'Bermudan Dollar'), ('BTN', 'Bhutanese Ngultrum'), ('BOB', 'Bolivian Boliviano'), ('BOL', 'Bolivian Boliviano (1863–1963)'), ('BOV', 'Bolivian Mvdol'), ('BOP', 'Bolivian Peso'), ('BAM', 'Bosnia-Herzegovina Convertible Mark'), ('BAD', 'Bosnia-Herzegovina Dinar (1992–1994)'), ('BAN', 'Bosnia-Herzegovina New Dinar (1994–1997)'), ('BWP', 'Botswanan Pula'), ('BRC', 'Brazilian Cruzado (1986–1989)'), ('BRZ', 'Brazilian Cruzeiro (1942–1967)'), ('BRE', 'Brazilian Cruzeiro (1990–1993)'), ('BRR', 'Brazilian Cruzeiro (1993–1994)'), ('BRN', 'Brazilian New Cruzado (1989–1990)'), ('BRB', 'Brazilian New Cruzeiro (1967–1986)'), ('BRL', 'Brazilian Real'), ('GBP', 'British Pound'), ('BND', 'Brunei Dollar'), ('BGL', 'Bulgarian Hard Lev'), ('BGN', 'Bulgarian Lev'), ('BGO', 'Bulgarian Lev (1879–1952)'), ('BGM', 'Bulgarian Socialist Lev'), ('BUK', 'Burmese Kyat'), ('BIF', 'Burundian Franc'), ('XPF', 'CFP Franc'), ('KHR', 'Cambodian Riel'), ('CAD', 'Canadian Dollar'), ('CVE', 'Cape Verdean Escudo'), ('KYD', 'Cayman Islands Dollar'), ('XAF', 'Central African CFA Franc'), ('CLE', 'Chilean Escudo'), ('CLP', 'Chilean Peso'), ('CLF', 'Chilean Unit of Account (UF)'), ('CNX', 'Chinese People’s Bank Dollar'), ('CNY', 'Chinese Yuan'), ('CNH', 'Chinese Yuan (offshore)'), ('COP', 'Colombian Peso'), ('COU', 'Colombian Real Value Unit'), ('KMF', 'Comorian Franc'), ('CDF', 'Congolese Franc'), ('CRC', 'Costa Rican Colón'), ('HRD', 'Croatian Dinar'), ('HRK', 'Croatian Kuna'), ('CUC', 'Cuban Convertible Peso'), ('CUP', 'Cuban Peso'), ('CYP', 'Cypriot Pound'), ('CZK', 'Czech Koruna'), ('CSK', 'Czechoslovak Hard Koruna'), ('DKK', 'Danish Krone'), ('DJF', 'Djiboutian Franc'), ('DOP', 'Dominican Peso'), ('NLG', 'Dutch Guilder'), ('XCD', 'East Caribbean Dollar'), ('DDM', 'East German Mark'), ('ECS', 'Ecuadorian Sucre'), ('ECV', 'Ecuadorian Unit of Constant Value'), ('EGP', 'Egyptian Pound'), ('GQE', 'Equatorial Guinean Ekwele'), ('ERN', 'Eritrean Nakfa'), ('EEK', 'Estonian Kroon'), ('ETB', 'Ethiopian Birr'), ('EUR', 'Euro'), ('XBA', 'European Composite Unit'), ('XEU', 'European Currency Unit'), ('XBB', 'European Monetary Unit'), ('XBC', 'European Unit of Account (XBC)'), ('XBD', 'European Unit of Account (XBD)'), ('FKP', 'Falkland Islands Pound'), ('FJD', 'Fijian Dollar'), ('FIM', 'Finnish Markka'), ('FRF', 'French Franc'), ('XFO', 'French Gold Franc'), ('XFU', 'French UIC-Franc'), ('GMD', 'Gambian Dalasi'), ('GEK', 'Georgian Kupon Larit'), ('GEL', 'Georgian Lari'), ('DEM', 'German Mark'), ('GHS', 'Ghanaian Cedi'), ('GHC', 'Ghanaian Cedi (1979–2007)'), ('GIP', 'Gibraltar Pound'), ('XAU', 'Gold'), ('GRD', 'Greek Drachma'), ('GTQ', 'Guatemalan Quetzal'), ('GWP', 'Guinea-Bissau Peso'), ('GNF', 'Guinean Franc'), ('GNS', 'Guinean Syli'), ('GYD', 'Guyanaese Dollar'), ('HTG', 'Haitian Gourde'), ('HNL', 'Honduran Lempira'), ('HKD', 'Hong Kong Dollar'), ('HUF', 'Hungarian Forint'), ('IMP', 'IMP'), ('ISK', 'Icelandic Króna'), ('ISJ', 'Icelandic Króna (1918–1981)'), ('INR', 'Indian Rupee'), ('IDR', 'Indonesian Rupiah'), ('IRR', 'Iranian Rial'), ('IQD', 'Iraqi Dinar'), ('IEP', 'Irish Pound'), ('ILS', 'Israeli New Shekel'), ('ILP', 'Israeli Pound'), ('ILR', 'Israeli Shekel (1980–1985)'), ('ITL', 'Italian Lira'), ('JMD', 'Jamaican Dollar'), ('JPY', 'Japanese Yen'), ('JOD', 'Jordanian Dinar'), ('KZT', 'Kazakhstani Tenge'), ('KES', 'Kenyan Shilling'), ('KWD', 'Kuwaiti Dinar'), ('KGS', 'Kyrgystani Som'), ('LAK', 'Laotian Kip'), ('LVL', 'Latvian Lats'), ('LVR', 'Latvian Ruble'), ('LBP', 'Lebanese Pound'), ('LSL', 'Lesotho Loti'), ('LRD', 'Liberian Dollar'), ('LYD', 'Libyan Dinar'), ('LTL', 'Lithuanian Litas'), ('LTT', 'Lithuanian Talonas'), ('LUL', 'Luxembourg Financial Franc'), ('LUC', 'Luxembourgian Convertible Franc'), ('LUF', 'Luxembourgian Franc'), ('MOP', 'Macanese Pataca'), ('MKD', 'Macedonian Denar'), ('MKN', 'Macedonian Denar (1992–1993)'), ('MGA', 'Malagasy Ariary'), ('MGF', 'Malagasy Franc'), ('MWK', 'Malawian Kwacha'), ('MYR', 'Malaysian Ringgit'), ('MVR', 'Maldivian Rufiyaa'), ('MVP', 'Maldivian Rupee (1947–1981)'), ('MLF', 'Malian Franc'), ('MTL', 'Maltese Lira'), ('MTP', 'Maltese Pound'), ('MRU', 'Mauritanian Ouguiya'), ('MRO', 'Mauritanian Ouguiya (1973–2017)'), ('MUR', 'Mauritian Rupee'), ('MXV', 'Mexican Investment Unit'), ('MXN', 'Mexican Peso'), ('MXP', 'Mexican Silver Peso (1861–1992)'), ('MDC', 'Moldovan Cupon'), ('MDL', 'Moldovan Leu'), ('MCF', 'Monegasque Franc'), ('MNT', 'Mongolian Tugrik'), ('MAD', 'Moroccan Dirham'), ('MAF', 'Moroccan Franc'), ('MZE', 'Mozambican Escudo'), ('MZN', 'Mozambican Metical'), ('MZM', 'Mozambican Metical (1980–2006)'), ('MMK', 'Myanmar Kyat'), ('NAD', 'Namibian Dollar'), ('NPR', 'Nepalese Rupee'), ('ANG', 'Netherlands Antillean Guilder'), ('TWD', 'New Taiwan Dollar'), ('NZD', 'New Zealand Dollar'), ('NIO', 'Nicaraguan Córdoba'), ('NIC', 'Nicaraguan Córdoba (1988–1991)'), ('NGN', 'Nigerian Naira'), ('KPW', 'North Korean Won'), ('NOK', 'Norwegian Krone'), ('OMR', 'Omani Rial'), ('PKR', 'Pakistani Rupee'), ('XPD', 'Palladium'), ('PAB', 'Panamanian Balboa'), ('PGK', 'Papua New Guinean Kina'), ('PYG', 'Paraguayan Guarani'), ('PEI', 'Peruvian Inti'), ('PEN', 'Peruvian Sol'), ('PES', 'Peruvian Sol (1863–1965)'), ('PHP', 'Philippine Peso'), ('XPT', 'Platinum'), ('PLN', 'Polish Zloty'), ('PLZ', 'Polish Zloty (1950–1995)'), ('PTE', 'Portuguese Escudo'), ('GWE', 'Portuguese Guinea Escudo'), ('QAR', 'Qatari Rial'), ('XRE', 'RINET Funds'), ('RHD', 'Rhodesian Dollar'), ('RON', 'Romanian Leu'), ('ROL', 'Romanian Leu (1952–2006)'), ('RUB', 'Russian Ruble'), ('RUR', 'Russian Ruble (1991–1998)'), ('RWF', 'Rwandan Franc'), ('SVC', 'Salvadoran Colón'), ('WST', 'Samoan Tala'), ('SAR', 'Saudi Riyal'), ('RSD', 'Serbian Dinar'), ('CSD', 'Serbian Dinar (2002–2006)'), ('SCR', 'Seychellois Rupee'), ('SLL', 'Sierra Leonean Leone'), ('XAG', 'Silver'), ('SGD', 'Singapore Dollar'), ('SKK', 'Slovak Koruna'), ('SIT', 'Slovenian Tolar'), ('SBD', 'Solomon Islands Dollar'), ('SOS', 'Somali Shilling'), ('ZAR', 'South African Rand'), ('ZAL', 'South African Rand (financial)'), ('KRH', 'South Korean Hwan (1953–1962)'), ('KRW', 'South Korean Won'), ('KRO', 'South Korean Won (1945–1953)'), ('SSP', 'South Sudanese Pound'), ('SUR', 'Soviet Rouble'), ('ESP', 'Spanish Peseta'), ('ESA', 'Spanish Peseta (A account)'), ('ESB', 'Spanish Peseta (convertible account)'), ('XDR', 'Special Drawing Rights'), ('LKR', 'Sri Lankan Rupee'), ('SHP', 'St. Helena Pound'), ('XSU', 'Sucre'), ('SDD', 'Sudanese Dinar (1992–2007)'), ('SDG', 'Sudanese Pound'), ('SDP', 'Sudanese Pound (1957–1998)'), ('SRD', 'Surinamese Dollar'), ('SRG', 'Surinamese Guilder'), ('SZL', 'Swazi Lilangeni'), ('SEK', 'Swedish Krona'), ('CHF', 'Swiss Franc'), ('SYP', 'Syrian Pound'), ('STN', 'São Tomé & Príncipe Dobra'), ('STD', 'São Tomé & Príncipe Dobra (1977–2017)'), ('TVD', 'TVD'), ('TJR', 'Tajikistani Ruble'), ('TJS', 'Tajikistani Somoni'), ('TZS', 'Tanzanian Shilling'), ('XTS', 'Testing Currency Code'), ('THB', 'Thai Baht'), ('XXX', 'The codes assigned for transactions where no currency is involved'), ('TPE', 'Timorese Escudo'), ('TOP', 'Tongan Paʻanga'), ('TTD', 'Trinidad & Tobago Dollar'), ('TND', 'Tunisian Dinar'), ('TRY', 'Turkish Lira'), ('TRL', 'Turkish Lira (1922–2005)'), ('TMT', 'Turkmenistani Manat'), ('TMM', 'Turkmenistani Manat (1993–2009)'), ('USD', 'US Dollar'), ('USN', 'US Dollar (Next day)'), ('USS', 'US Dollar (Same day)'), ('UGX', 'Ugandan Shilling'), ('UGS', 'Ugandan Shilling (1966–1987)'), ('UAH', 'Ukrainian Hryvnia'), ('UAK', 'Ukrainian Karbovanets'), ('AED', 'United Arab Emirates Dirham'), ('UYW', 'Uruguayan Nominal Wage Index Unit'), ('UYU', 'Uruguayan Peso'), ('UYP', 'Uruguayan Peso (1975–1993)'), ('UYI', 'Uruguayan Peso (Indexed Units)'), ('UZS', 'Uzbekistani Som'), ('VUV', 'Vanuatu Vatu'), ('VES', 'Venezuelan Bolívar'), ('VEB', 'Venezuelan Bolívar (1871–2008)'), ('VEF', 'Venezuelan Bolívar (2008–2018)'), ('VND', 'Vietnamese Dong'), ('VNN', 'Vietnamese Dong (1978–1985)'), ('CHE', 'WIR Euro'), ('CHW', 'WIR Franc'), ('XOF', 'West African CFA Franc'), ('YDD', 'Yemeni Dinar'), ('YER', 'Yemeni Rial'), ('YUN', 'Yugoslavian Convertible Dinar (1990–1992)'), ('YUD', 'Yugoslavian Hard Dinar (1966–1990)'), ('YUM', 'Yugoslavian New Dinar (1994–2002)'), ('YUR', 'Yugoslavian Reformed Dinar (1992–1993)'), ('ZWN', 'ZWN'), ('ZRN', 'Zairean New Zaire (1993–1998)'), ('ZRZ', 'Zairean Zaire (1971–1993)'), ('ZMW', 'Zambian Kwacha'), ('ZMK', 'Zambian Kwacha (1968–2012)'), ('ZWD', 'Zimbabwean Dollar (1980–2008)'), ('ZWR', 'Zimbabwean Dollar (2008)'), ('ZWL', 'Zimbabwean Dollar (2009)')], default='EUR', editable=False, max_length=3),\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0016_customerprogram_price_per_second_currency_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.migrations.0017_customerprogram_is_active",
        "description": "app.nadooit_program_ownership_system.migrations.0017_customerprogram_is_active",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_program_ownership_system', '0016_customerprogram_price_per_second_currency_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customerprogram',\n            name='is_active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "app.nadooit_program_ownership_system.migrations.0017_customerprogram_is_active",
        "documentation": {}
    },
    {
        "label": "NadooitProgramOwnershipSystemConfig",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.apps",
        "description": "app.nadooit_program_ownership_system.apps",
        "peekOfCode": "class NadooitProgramOwnershipSystemConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_program_ownership_system'",
        "detail": "app.nadooit_program_ownership_system.apps",
        "documentation": {}
    },
    {
        "label": "ProgramShare",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.models",
        "description": "app.nadooit_program_ownership_system.models",
        "peekOfCode": "class ProgramShare(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    share_of = models.ForeignKey(Program, on_delete=models.SET_NULL, null=True)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        return self.id\nclass CustomerProgram(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    program_time_saved_per_execution_in_seconds = models.IntegerField(default=0)",
        "detail": "app.nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "CustomerProgram",
        "kind": 6,
        "importPath": "app.nadooit_program_ownership_system.models",
        "description": "app.nadooit_program_ownership_system.models",
        "peekOfCode": "class CustomerProgram(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    program_time_saved_per_execution_in_seconds = models.IntegerField(default=0)\n    # TODO this relation means that every program can only be assigned to one time account. This is not correct. A program can be assigned to multiple time accounts.\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.SET_NULL, null=True)\n    over_charge = models.BooleanField(default=False)\n    program = models.ForeignKey(Program, on_delete=models.SET_NULL, null=True)\n    customer = models.ForeignKey(Customer, on_delete=models.SET_NULL, null=True)\n    price_per_second = MoneyField(\n        max_digits=14, decimal_places=6, default_currency=\"EUR\", default=0",
        "detail": "app.nadooit_program_ownership_system.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_program_ownership_system.urls",
        "description": "app.nadooit_program_ownership_system.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin\", views.admin, name=\"customer_program_ownership_overview_adminpage\"),\n    path(\n        \"customer_program_ownership_overview\",\n        views.customer_program_ownership_overview,\n        name=\"customer_program_ownership_overview\",\n    ),\n]",
        "detail": "app.nadooit_program_ownership_system.urls",
        "documentation": {}
    },
    {
        "label": "customer_program_ownership_overview",
        "kind": 2,
        "importPath": "app.nadooit_program_ownership_system.views",
        "description": "app.nadooit_program_ownership_system.views",
        "peekOfCode": "def customer_program_ownership_overview(request):\n    # if the logged in user is a time account manager show the time account manager view\n    return render(\n        request,\n        \"nadooit_program_ownership_system/customer_program_ownership_overview.html\",\n        {\n            \"page_title\": \"Übersicht der Zeitkonten\",\n        },\n    )\n@login_required(login_url=\"/auth/login-user\")",
        "detail": "app.nadooit_program_ownership_system.views",
        "documentation": {}
    },
    {
        "label": "admin",
        "kind": 2,
        "importPath": "app.nadooit_program_ownership_system.views",
        "description": "app.nadooit_program_ownership_system.views",
        "peekOfCode": "def admin(request):\n    # if the logged in user is a time account manager show the time account manager view\n    return render(\n        request,\n        \"nadooit_program_ownership_system/customer_program_ownership_overview.html\",\n        {\n            \"page_title\": \"Übersicht der Zeitkonten\",\n        },\n    )",
        "detail": "app.nadooit_program_ownership_system.views",
        "documentation": {}
    },
    {
        "label": "NadooitQuestionsAndAnswersConfig",
        "kind": 6,
        "importPath": "app.nadooit_questions_and_answers.apps",
        "description": "app.nadooit_questions_and_answers.apps",
        "peekOfCode": "class NadooitQuestionsAndAnswersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_questions_and_answers'",
        "detail": "app.nadooit_questions_and_answers.apps",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0001_initial",
        "description": "app.nadooit_time_account.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"nadooit_crm\", \"0001_initial\"),\n        (\"nadooit_hr\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"TimeAccount\",\n            fields=[",
        "detail": "app.nadooit_time_account.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0002_rename_timeaccountemployee_employeetimeaccount_and_more",
        "description": "app.nadooit_time_account.migrations.0002_rename_timeaccountemployee_employeetimeaccount_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_time_account', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='TimeAccountEmployee',\n            new_name='EmployeeTimeAccount',",
        "detail": "app.nadooit_time_account.migrations.0002_rename_timeaccountemployee_employeetimeaccount_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0003_rename_customernadooittimeaccount_customertimeaccount",
        "description": "app.nadooit_time_account.migrations.0003_rename_customernadooittimeaccount_customertimeaccount",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_time_account', '0002_rename_timeaccountemployee_employeetimeaccount_and_more'),\n    ]\n    operations = [\n        migrations.RenameModel(\n            old_name='CustomerNadooitTimeAccount',\n            new_name='CustomerTimeAccount',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0003_rename_customernadooittimeaccount_customertimeaccount",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0004_rename_time_account_worktimeaccountentry_employee_time_account",
        "description": "app.nadooit_time_account.migrations.0004_rename_time_account_worktimeaccountentry_employee_time_account",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0003_rename_customernadooittimeaccount_customertimeaccount'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='worktimeaccountentry',\n            old_name='time_account',\n            new_name='employee_time_account',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0004_rename_time_account_worktimeaccountentry_employee_time_account",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0005_timeaccount_name",
        "description": "app.nadooit_time_account.migrations.0005_timeaccount_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0004_rename_time_account_worktimeaccountentry_employee_time_account'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='timeaccount',\n            name='name',\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "app.nadooit_time_account.migrations.0005_timeaccount_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0006_customertimeaccount_name",
        "description": "app.nadooit_time_account.migrations.0006_customertimeaccount_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0005_timeaccount_name'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customertimeaccount',\n            name='name',\n            field=models.CharField(blank=True, max_length=255, null=True),\n        ),",
        "detail": "app.nadooit_time_account.migrations.0006_customertimeaccount_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0007_alter_customertimeaccount_name",
        "description": "app.nadooit_time_account.migrations.0007_alter_customertimeaccount_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0006_customertimeaccount_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customertimeaccount',\n            name='name',\n            field=models.CharField(default='FIXME', max_length=255),\n            preserve_default=False,",
        "detail": "app.nadooit_time_account.migrations.0007_alter_customertimeaccount_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0008_alter_timeaccountmanager_employee",
        "description": "app.nadooit_time_account.migrations.0008_alter_timeaccountmanager_employee",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_hr', '0001_initial'),\n        ('nadooit_time_account', '0007_alter_customertimeaccount_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='timeaccountmanager',\n            name='employee',\n            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='nadooit_hr.employee'),",
        "detail": "app.nadooit_time_account.migrations.0008_alter_timeaccountmanager_employee",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0009_timeaccountmanager_customers_the_manager_is_responsible_for",
        "description": "app.nadooit_time_account.migrations.0009_timeaccountmanager_customers_the_manager_is_responsible_for",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_crm', '0001_initial'),\n        ('nadooit_time_account', '0008_alter_timeaccountmanager_employee'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='timeaccountmanager',\n            name='customers_the_manager_is_responsible_for',\n            field=models.ManyToManyField(blank=True, to='nadooit_crm.customer'),",
        "detail": "app.nadooit_time_account.migrations.0009_timeaccountmanager_customers_the_manager_is_responsible_for",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0010_timeaccount_is_active_and_more",
        "description": "app.nadooit_time_account.migrations.0010_timeaccount_is_active_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0009_timeaccountmanager_customers_the_manager_is_responsible_for'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='timeaccount',\n            name='is_active',\n            field=models.BooleanField(default=True),\n        ),",
        "detail": "app.nadooit_time_account.migrations.0010_timeaccount_is_active_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0011_rename_can_delete_api_key_timeaccountmanager_can_delete_time_accounts_and_more",
        "description": "app.nadooit_time_account.migrations.0011_rename_can_delete_api_key_timeaccountmanager_can_delete_time_accounts_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0010_timeaccount_is_active_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='timeaccountmanager',\n            old_name='can_delete_api_key',\n            new_name='can_delete_time_accounts',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0011_rename_can_delete_api_key_timeaccountmanager_can_delete_time_accounts_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_",
        "description": "app.nadooit_time_account.migrations.0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0011_rename_can_delete_api_key_timeaccountmanager_can_delete_time_accounts_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='timeaccountmanager',\n            old_name='customers_the_manager_is_responsible_for',\n            new_name='list_of_customers_the_manager_is_responsible_for',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0013_rename_can_give_timeaccountmanager_role_timeaccountmanager_can_give_manager_role",
        "description": "app.nadooit_time_account.migrations.0013_rename_can_give_timeaccountmanager_role_timeaccountmanager_can_give_manager_role",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0012_rename_customers_the_manager_is_responsible_for_timeaccountmanager_list_of_customers_the_manager_is_'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='timeaccountmanager',\n            old_name='can_give_TimeAccountManager_role',\n            new_name='can_give_manager_role',\n        ),",
        "detail": "app.nadooit_time_account.migrations.0013_rename_can_give_timeaccountmanager_role_timeaccountmanager_can_give_manager_role",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_time_account.migrations.0014_delete_timeaccountmanager",
        "description": "app.nadooit_time_account.migrations.0014_delete_timeaccountmanager",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('nadooit_time_account', '0013_rename_can_give_timeaccountmanager_role_timeaccountmanager_can_give_manager_role'),\n    ]\n    operations = [\n        migrations.DeleteModel(\n            name='TimeAccountManager',\n        ),\n    ]",
        "detail": "app.nadooit_time_account.migrations.0014_delete_timeaccountmanager",
        "documentation": {}
    },
    {
        "label": "NadooitTimeaccountConfig",
        "kind": 6,
        "importPath": "app.nadooit_time_account.apps",
        "description": "app.nadooit_time_account.apps",
        "peekOfCode": "class NadooitTimeaccountConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_time_account'",
        "detail": "app.nadooit_time_account.apps",
        "documentation": {}
    },
    {
        "label": "TimeAccount",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class TimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    time_balance_in_seconds = models.BigIntegerField(null=True, blank=True, default=0)\n    name = models.CharField(max_length=255, null=True, blank=True)\n    is_active = models.BooleanField(default=True)\n    def __str__(self):\n        time_balance_in_seconds = (\n            get_time_as_string_in_hour_format_for_time_in_seconds_as_integer(\n                self.time_balance_in_seconds\n            )",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "EmployeeTimeAccount",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class EmployeeTimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.CASCADE)\n    employee = models.ForeignKey(Employee, on_delete=models.CASCADE)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    def __str__(self):\n        if self.employee.user.display_name == \"\":\n            return (",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "CustomerTimeAccount",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class CustomerTimeAccount(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    time_account = models.ForeignKey(TimeAccount, on_delete=models.CASCADE)\n    created_at = models.DateTimeField(auto_now_add=True, editable=True)\n    updated_at = models.DateTimeField(auto_now=True, editable=True)\n    name = models.CharField(max_length=255, null=False, blank=False)\n    def __str__(self):\n        return (\n            self.customer.name",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "WorkTimeAccountEntry",
        "kind": 6,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "class WorkTimeAccountEntry(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    employee_time_account = models.ForeignKey(\n        EmployeeTimeAccount, on_delete=models.CASCADE\n    )\n    work_time = models.TimeField(null=True, blank=True)\n    work_date = models.DateField(null=True, blank=True)\n    ENTRY_TYPE = (\n        (\"IN\", \"IN\"),\n        (\"OUT\", \"OUT\"),",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "get_time_as_string_in_hour_format_for_time_in_seconds_as_integer",
        "kind": 2,
        "importPath": "app.nadooit_time_account.models",
        "description": "app.nadooit_time_account.models",
        "peekOfCode": "def get_time_as_string_in_hour_format_for_time_in_seconds_as_integer(time):\n    return (\n        str(time // 3600)\n        + \" std : \"\n        + str((time % 3600) // 60)\n        + \" min : \"\n        + str(time % 60)\n        + \" sek\"\n    )\n# Create your models here.",
        "detail": "app.nadooit_time_account.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_time_account.urls",
        "description": "app.nadooit_time_account.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin\", views.admin, name=\"adminpage\"),\n]",
        "detail": "app.nadooit_time_account.urls",
        "documentation": {}
    },
    {
        "label": "NadooitWebsiteConfig",
        "kind": 6,
        "importPath": "app.nadooit_website.apps",
        "description": "app.nadooit_website.apps",
        "peekOfCode": "class NadooitWebsiteConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadooit_website'",
        "detail": "app.nadooit_website.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "app.nadooit_website.urls",
        "description": "app.nadooit_website.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"\", views.index, name=\"index\"),\n    path(\"impressum\", views.impressum, name=\"impressum\"),\n    path(\"datenschutz\", views.datenschutz, name=\"datenschutz\"),\n]",
        "detail": "app.nadooit_website.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "app.nadooit_website.views",
        "description": "app.nadooit_website.views",
        "peekOfCode": "def index(request):\n    return render(request, \"nadooit_website/index.html\", {\"page_title\": \"Home\"})\ndef impressum(request):\n    return render(\n        request, \"nadooit_website/impressum.html\", {\"page_title\": \"Impressum\"}\n    )\ndef datenschutz(request):\n    return render(\n        request,\n        \"nadooit_website/datenschutz.html\",",
        "detail": "app.nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "impressum",
        "kind": 2,
        "importPath": "app.nadooit_website.views",
        "description": "app.nadooit_website.views",
        "peekOfCode": "def impressum(request):\n    return render(\n        request, \"nadooit_website/impressum.html\", {\"page_title\": \"Impressum\"}\n    )\ndef datenschutz(request):\n    return render(\n        request,\n        \"nadooit_website/datenschutz.html\",\n        {\"page_title\": \"Datenschutzerklärung\"},\n    )",
        "detail": "app.nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "datenschutz",
        "kind": 2,
        "importPath": "app.nadooit_website.views",
        "description": "app.nadooit_website.views",
        "peekOfCode": "def datenschutz(request):\n    return render(\n        request,\n        \"nadooit_website/datenschutz.html\",\n        {\"page_title\": \"Datenschutzerklärung\"},\n    )",
        "detail": "app.nadooit_website.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadooit_workflow.migrations.0001_initial",
        "description": "app.nadooit_workflow.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        (\"nadooit_crm\", \"0001_initial\"),\n        (\"nadooit_program\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Process\",\n            fields=[",
        "detail": "app.nadooit_workflow.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooitWorkflowConfig",
        "kind": 6,
        "importPath": "app.nadooit_workflow.apps",
        "description": "app.nadooit_workflow.apps",
        "peekOfCode": "class NadooitWorkflowConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"nadooit_workflow\"",
        "detail": "app.nadooit_workflow.apps",
        "documentation": {}
    },
    {
        "label": "Process",
        "kind": 6,
        "importPath": "app.nadooit_workflow.models",
        "description": "app.nadooit_workflow.models",
        "peekOfCode": "class Process(models.Model):\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    name = models.CharField(max_length=255)\n    # process_trigger_evnets is a list of events that trigger the process. They are represented as a list of strings.\n    # process_trigger_events = models.CharField(max_length=255)\t#list of events that trigger the process.\n    # process_subscriptions = models.CharField(max_length=255)\n    trigger_process = models.ForeignKey(\"self\", on_delete=models.SET_NULL, null=True)\n    tiggers_process = models.ManyToManyField(\"self\", blank=True)\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE)\n    description = models.TextField()",
        "detail": "app.nadooit_workflow.models",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "app.nadoo_complaint_management.migrations.0001_initial",
        "description": "app.nadoo_complaint_management.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('nadooit_hr', '0023_timeaccountmanagercontract'),\n        ('nadooit_api_executions_system', '0010_delete_customerprogramexecutionmanager'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Complaint',\n            fields=[",
        "detail": "app.nadoo_complaint_management.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "NadooComplaintManagementConfig",
        "kind": 6,
        "importPath": "app.nadoo_complaint_management.apps",
        "description": "app.nadoo_complaint_management.apps",
        "peekOfCode": "class NadooComplaintManagementConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'nadoo_complaint_management'",
        "detail": "app.nadoo_complaint_management.apps",
        "documentation": {}
    },
    {
        "label": "Complaint",
        "kind": 6,
        "importPath": "app.nadoo_complaint_management.models",
        "description": "app.nadoo_complaint_management.models",
        "peekOfCode": "class Complaint(models.Model):\n    # This model is used to store diffent possivle states of a complaint that can be made by a customer\n    class ComplaintStatus(models.TextChoices):\n        OPEN = \"OPEN\", _(\"Open\")\n        IN_PROGRESS = \"IN_PROGRESS\", _(\"In Progress\")\n        CLOSED = \"CLOSED\", _(\"Closed\")\n        REJECTED = \"REJECTED\", _(\"Rejected\")\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)\n    # the customer program execution that is complained about\n    customer_program_execution = models.ForeignKey(",
        "detail": "app.nadoo_complaint_management.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app.manage",
        "description": "app.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nadooit.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "app.manage",
        "documentation": {}
    }
]